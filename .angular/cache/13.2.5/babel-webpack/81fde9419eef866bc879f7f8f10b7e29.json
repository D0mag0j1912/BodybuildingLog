{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Development\\\\trainingApk\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.component.scss?ngResource\";\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { finalize } from 'rxjs/operators';\nimport { IonInput, ToastController } from '@ionic/angular';\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { LoginService } from '../../../services/auth/login.service';\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\nlet LoginComponent = class LoginComponent {\n  constructor(translateService, loginService, authService, changeDetectorRef, toastController) {\n    this.translateService = translateService;\n    this.loginService = loginService;\n    this.authService = authService;\n    this.changeDetectorRef = changeDetectorRef;\n    this.toastController = toastController;\n    this.isLoading = false;\n    this.form = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(6), Validators.maxLength(20)])\n    }, {\n      asyncValidators: AuthCustomValidators.passwordFitsEmail(this.loginService, this.changeDetectorRef)\n    });\n  } //TODO: fix autofocus\n\n\n  ngAfterViewInit() {\n    var _this = this;\n\n    setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n      return yield _this.emailInput.setFocus();\n    }), 200);\n  }\n\n  onSubmit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this2.form.valid) {\n        //TODO: test toast\n        const toast = yield _this2.toastController.create({\n          message: _this2.translateService.instant('auth.errors.invalid_form'),\n          duration: SNACK_BAR_DURATION.ERROR,\n          color: '#c62828'\n        });\n        yield toast.present();\n        return;\n      }\n\n      _this2.isLoading = true;\n\n      _this2.authService.login(_this2.accessFormData('email').value, _this2.accessFormData('password').value).pipe(finalize(() => {\n        _this2.isLoading = false;\n\n        _this2.changeDetectorRef.markForCheck();\n      })).subscribe( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (response) {\n          if (response) {\n            //TODO: test toast\n            const toast = yield _this2.toastController.create({\n              message: _this2.translateService.instant(response.Message),\n              duration: SNACK_BAR_DURATION.GENERAL,\n              color: response.Token ? '#009688' : '#c62828'\n            });\n            yield toast.present();\n          }\n        });\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  accessFormData(formFieldName) {\n    return this.form.get(formFieldName);\n  }\n\n};\n\nLoginComponent.ctorParameters = () => [{\n  type: TranslateService\n}, {\n  type: LoginService\n}, {\n  type: AuthService\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ToastController\n}];\n\nLoginComponent.propDecorators = {\n  emailInput: [{\n    type: ViewChild,\n    args: ['emailRef', {\n      read: IonInput\n    }]\n  }]\n};\nLoginComponent = __decorate([Component({\n  selector: 'bl-login',\n  template: __NG_CLI_RESOURCE__0,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"sources":["C:/Development/trainingApk/src/app/views/auth/login/login.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","ChangeDetectionStrategy","ChangeDetectorRef","Component","ViewChild","FormControl","FormGroup","Validators","TranslateService","finalize","IonInput","ToastController","SNACK_BAR_DURATION","AuthService","LoginService","AuthCustomValidators","LoginComponent","constructor","translateService","loginService","authService","changeDetectorRef","toastController","isLoading","form","required","email","minLength","maxLength","asyncValidators","passwordFitsEmail","ngAfterViewInit","setTimeout","emailInput","setFocus","onSubmit","valid","toast","create","message","instant","duration","ERROR","color","present","login","accessFormData","value","pipe","markForCheck","subscribe","response","Message","GENERAL","Token","formFieldName","get","ctorParameters","type","propDecorators","args","read","selector","template","changeDetection","OnPush","styles"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"./login.component.html?ngResource\";\r\nimport __NG_CLI_RESOURCE__1 from \"./login.component.scss?ngResource\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { IonInput, ToastController } from '@ionic/angular';\r\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { LoginService } from '../../../services/auth/login.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\nlet LoginComponent = class LoginComponent {\r\n    constructor(translateService, loginService, authService, changeDetectorRef, toastController) {\r\n        this.translateService = translateService;\r\n        this.loginService = loginService;\r\n        this.authService = authService;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.toastController = toastController;\r\n        this.isLoading = false;\r\n        this.form = new FormGroup({\r\n            'email': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.email,\r\n            ]),\r\n            'password': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20),\r\n            ]),\r\n        }, { asyncValidators: AuthCustomValidators.passwordFitsEmail(this.loginService, this.changeDetectorRef) });\r\n    }\r\n    //TODO: fix autofocus\r\n    ngAfterViewInit() {\r\n        setTimeout(async () => await this.emailInput.setFocus(), 200);\r\n    }\r\n    async onSubmit() {\r\n        if (!this.form.valid) {\r\n            //TODO: test toast\r\n            const toast = await this.toastController.create({\r\n                message: this.translateService.instant('auth.errors.invalid_form'),\r\n                duration: SNACK_BAR_DURATION.ERROR,\r\n                color: '#c62828',\r\n            });\r\n            await toast.present();\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        this.authService.login(this.accessFormData('email').value, this.accessFormData('password').value).pipe(finalize(() => {\r\n            this.isLoading = false;\r\n            this.changeDetectorRef.markForCheck();\r\n        })).subscribe(async (response) => {\r\n            if (response) {\r\n                //TODO: test toast\r\n                const toast = await this.toastController.create({\r\n                    message: this.translateService.instant(response.Message),\r\n                    duration: SNACK_BAR_DURATION.GENERAL,\r\n                    color: response.Token ? '#009688' : '#c62828',\r\n                });\r\n                await toast.present();\r\n            }\r\n        });\r\n    }\r\n    accessFormData(formFieldName) {\r\n        return this.form.get(formFieldName);\r\n    }\r\n};\r\nLoginComponent.ctorParameters = () => [\r\n    { type: TranslateService },\r\n    { type: LoginService },\r\n    { type: AuthService },\r\n    { type: ChangeDetectorRef },\r\n    { type: ToastController }\r\n];\r\nLoginComponent.propDecorators = {\r\n    emailInput: [{ type: ViewChild, args: ['emailRef', {\r\n                    read: IonInput,\r\n                },] }]\r\n};\r\nLoginComponent = __decorate([\r\n    Component({\r\n        selector: 'bl-login',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        changeDetection: ChangeDetectionStrategy.OnPush,\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], LoginComponent);\r\nexport { LoginComponent };\r\n"]},"metadata":{},"sourceType":"module"}