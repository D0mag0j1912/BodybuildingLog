{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Development\\\\trainingApk\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./signup.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./signup.component.scss?ngResource\";\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IonInput, ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { finalize, takeUntil } from 'rxjs/operators';\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { SignupService } from '../../../services/auth/signup.service';\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\nlet SignupComponent = class SignupComponent {\n  constructor(authService, signupService, translateService, unsubscribeService, changeDetectorRef, toastController, router) {\n    this.authService = authService;\n    this.signupService = signupService;\n    this.translateService = translateService;\n    this.unsubscribeService = unsubscribeService;\n    this.changeDetectorRef = changeDetectorRef;\n    this.toastController = toastController;\n    this.router = router;\n    this.isLoading = false;\n    this.form = new FormGroup({\n      'language': new FormControl('en', [Validators.required]),\n      'weightFormat': new FormControl('kg', [Validators.required]),\n      'email': new FormControl(null, [Validators.required, Validators.email], [AuthCustomValidators.isEmailAvailable(this.signupService, this.changeDetectorRef)]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(6), Validators.maxLength(20)]),\n      'confirmPassword': new FormControl(null, [Validators.required, Validators.minLength(6), Validators.maxLength(20)])\n    }, {\n      validators: AuthCustomValidators.samePasswords()\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    var _a;\n\n    (_a = this.accessFormData('email')) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(takeUntil(this.unsubscribeService)).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (_) {\n        var _a, _b;\n\n        if ((_a = _this.accessFormData('email')) === null || _a === void 0 ? void 0 : _a.valid) {\n          yield (_b = _this.passwordEl) === null || _b === void 0 ? void 0 : _b.setFocus();\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  onSubmit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this2.form.valid) {\n        //TODO: test toast\n        const toast = yield _this2.toastController.create({\n          message: _this2.translateService.instant('auth.errors.invalid_form'),\n          duration: SNACK_BAR_DURATION.ERROR,\n          color: '#c62828'\n        });\n        yield toast.present();\n        return;\n      }\n\n      _this2.isLoading = true;\n\n      _this2.authService.signup(_this2.accessFormData('language').value, _this2.accessFormData('weightFormat').value, _this2.accessFormData('email').value, _this2.accessFormData('password').value, _this2.accessFormData('confirmPassword').value).pipe(finalize(() => {\n        _this2.isLoading = false;\n\n        _this2.changeDetectorRef.markForCheck();\n      })).subscribe( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (response) {\n          if (response.Success) {\n            //TODO: test toast\n            const toast = yield _this2.toastController.create({\n              message: _this2.translateService.instant(response.Message),\n              duration: SNACK_BAR_DURATION.GENERAL,\n              color: response.Success ? '#009688' : '#c62828'\n            });\n            yield toast.present();\n            yield _this2.router.navigate(['/auth/login']);\n          }\n        });\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  accessFormData(formFieldName) {\n    return this.form.get(formFieldName);\n  }\n\n};\n\nSignupComponent.ctorParameters = () => [{\n  type: AuthService\n}, {\n  type: SignupService\n}, {\n  type: TranslateService\n}, {\n  type: UnsubscribeService\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ToastController\n}, {\n  type: Router\n}];\n\nSignupComponent.propDecorators = {\n  passwordEl: [{\n    type: ViewChild,\n    args: ['passEl', {\n      read: IonInput\n    }]\n  }],\n  confirmPasswordEl: [{\n    type: ViewChild,\n    args: ['confirmPassEl', {\n      read: IonInput\n    }]\n  }]\n};\nSignupComponent = __decorate([Component({\n  selector: 'bl-signup',\n  template: __NG_CLI_RESOURCE__0,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [UnsubscribeService],\n  styles: [__NG_CLI_RESOURCE__1]\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"sources":["C:/Development/trainingApk/src/app/views/auth/signup/signup.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","ChangeDetectionStrategy","ChangeDetectorRef","Component","ViewChild","FormControl","FormGroup","Validators","Router","IonInput","ToastController","TranslateService","finalize","takeUntil","SNACK_BAR_DURATION","AuthService","SignupService","UnsubscribeService","AuthCustomValidators","SignupComponent","constructor","authService","signupService","translateService","unsubscribeService","changeDetectorRef","toastController","router","isLoading","form","required","email","isEmailAvailable","minLength","maxLength","validators","samePasswords","ngOnInit","_a","accessFormData","valueChanges","pipe","subscribe","_","_b","valid","passwordEl","setFocus","onSubmit","toast","create","message","instant","duration","ERROR","color","present","signup","value","markForCheck","response","Success","Message","GENERAL","navigate","formFieldName","get","ctorParameters","type","propDecorators","args","read","confirmPasswordEl","selector","template","changeDetection","OnPush","providers","styles"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"./signup.component.html?ngResource\";\r\nimport __NG_CLI_RESOURCE__1 from \"./signup.component.scss?ngResource\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { IonInput, ToastController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { finalize, takeUntil } from 'rxjs/operators';\r\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { SignupService } from '../../../services/auth/signup.service';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\nlet SignupComponent = class SignupComponent {\r\n    constructor(authService, signupService, translateService, unsubscribeService, changeDetectorRef, toastController, router) {\r\n        this.authService = authService;\r\n        this.signupService = signupService;\r\n        this.translateService = translateService;\r\n        this.unsubscribeService = unsubscribeService;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.toastController = toastController;\r\n        this.router = router;\r\n        this.isLoading = false;\r\n        this.form = new FormGroup({\r\n            'language': new FormControl('en', [Validators.required]),\r\n            'weightFormat': new FormControl('kg', [Validators.required]),\r\n            'email': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.email\r\n            ], [AuthCustomValidators.isEmailAvailable(this.signupService, this.changeDetectorRef)]),\r\n            'password': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)\r\n            ]),\r\n            'confirmPassword': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)\r\n            ]),\r\n        }, { validators: AuthCustomValidators.samePasswords() });\r\n    }\r\n    ngOnInit() {\r\n        var _a;\r\n        (_a = this.accessFormData('email')) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(takeUntil(this.unsubscribeService)).subscribe(async (_) => {\r\n            var _a, _b;\r\n            if ((_a = this.accessFormData('email')) === null || _a === void 0 ? void 0 : _a.valid) {\r\n                await ((_b = this.passwordEl) === null || _b === void 0 ? void 0 : _b.setFocus());\r\n            }\r\n        });\r\n    }\r\n    async onSubmit() {\r\n        if (!this.form.valid) {\r\n            //TODO: test toast\r\n            const toast = await this.toastController.create({\r\n                message: this.translateService.instant('auth.errors.invalid_form'),\r\n                duration: SNACK_BAR_DURATION.ERROR,\r\n                color: '#c62828',\r\n            });\r\n            await toast.present();\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        this.authService.signup(this.accessFormData('language').value, this.accessFormData('weightFormat').value, this.accessFormData('email').value, this.accessFormData('password').value, this.accessFormData('confirmPassword').value).pipe(finalize(() => {\r\n            this.isLoading = false;\r\n            this.changeDetectorRef.markForCheck();\r\n        })).subscribe(async (response) => {\r\n            if (response.Success) {\r\n                //TODO: test toast\r\n                const toast = await this.toastController.create({\r\n                    message: this.translateService.instant(response.Message),\r\n                    duration: SNACK_BAR_DURATION.GENERAL,\r\n                    color: response.Success ? '#009688' : '#c62828',\r\n                });\r\n                await toast.present();\r\n                await this.router.navigate(['/auth/login']);\r\n            }\r\n        });\r\n    }\r\n    accessFormData(formFieldName) {\r\n        return this.form.get(formFieldName);\r\n    }\r\n};\r\nSignupComponent.ctorParameters = () => [\r\n    { type: AuthService },\r\n    { type: SignupService },\r\n    { type: TranslateService },\r\n    { type: UnsubscribeService },\r\n    { type: ChangeDetectorRef },\r\n    { type: ToastController },\r\n    { type: Router }\r\n];\r\nSignupComponent.propDecorators = {\r\n    passwordEl: [{ type: ViewChild, args: ['passEl', { read: IonInput },] }],\r\n    confirmPasswordEl: [{ type: ViewChild, args: ['confirmPassEl', { read: IonInput },] }]\r\n};\r\nSignupComponent = __decorate([\r\n    Component({\r\n        selector: 'bl-signup',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        changeDetection: ChangeDetectionStrategy.OnPush,\r\n        providers: [UnsubscribeService],\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], SignupComponent);\r\nexport { SignupComponent };\r\n"]},"metadata":{},"sourceType":"module"}