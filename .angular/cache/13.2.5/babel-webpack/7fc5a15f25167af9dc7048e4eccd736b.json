{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Development\\\\trainingApk\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./side-nav.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./side-nav.component.scss?ngResource\";\nimport { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { endOfWeek, format, startOfWeek } from 'date-fns';\nimport { switchMap, take, takeUntil } from 'rxjs/operators';\nimport { QUERY_PARAMS_DATE_FORMAT } from '../../../models/training/past-trainings/past-trainings.model';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { NavigationService } from '../../../services/shared/navigation.service';\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\nimport { NewTrainingService } from '../../../services/training/new-training.service';\nlet SideNavComponent = class SideNavComponent {\n  constructor(authService, navigationService, newTrainingService, unsubsService, router) {\n    this.authService = authService;\n    this.navigationService = navigationService;\n    this.newTrainingService = newTrainingService;\n    this.unsubsService = unsubsService;\n    this.router = router;\n    this.closeSideNav = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.isAuthenticated$ = this.authService.isAuth$;\n    this.loggedUserData$ = this.authService.loggedUser$;\n  }\n\n  onLogout() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.newTrainingService.clearTrainingData();\n\n      yield _this.authService.logout();\n    })();\n  }\n\n  goToPastTrainings() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const startDate = startOfWeek(new Date(), {\n        weekStartsOn: 1\n      });\n      const endDate = endOfWeek(new Date(), {\n        weekStartsOn: 1\n      });\n      yield _this2.router.navigate(['/training/past-trainings'], {\n        queryParams: {\n          startDate: format(startDate, QUERY_PARAMS_DATE_FORMAT),\n          endDate: format(endDate, QUERY_PARAMS_DATE_FORMAT)\n        }\n      });\n    })();\n  }\n\n  changeLanguage(language) {\n    this.authService.loggedUser$.pipe(take(1), switchMap(userData => this.navigationService.setPreferences(userData._id, language, 'kg')), takeUntil(this.unsubsService)).subscribe(_ => this.onCloseSideNav());\n  }\n\n  onCloseSideNav() {\n    this.closeSideNav.emit();\n  }\n\n};\n\nSideNavComponent.ctorParameters = () => [{\n  type: AuthService\n}, {\n  type: NavigationService\n}, {\n  type: NewTrainingService\n}, {\n  type: UnsubscribeService\n}, {\n  type: Router\n}];\n\nSideNavComponent.propDecorators = {\n  closeSideNav: [{\n    type: Output\n  }]\n};\nSideNavComponent = __decorate([Component({\n  selector: 'bl-side-nav',\n  template: __NG_CLI_RESOURCE__0,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [UnsubscribeService],\n  styles: [__NG_CLI_RESOURCE__1]\n})], SideNavComponent);\nexport { SideNavComponent };","map":{"version":3,"sources":["C:/Development/trainingApk/src/app/views/navigation/side-nav/side-nav.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","ChangeDetectionStrategy","Component","EventEmitter","Output","Router","endOfWeek","format","startOfWeek","switchMap","take","takeUntil","QUERY_PARAMS_DATE_FORMAT","AuthService","NavigationService","UnsubscribeService","NewTrainingService","SideNavComponent","constructor","authService","navigationService","newTrainingService","unsubsService","router","closeSideNav","ngOnInit","isAuthenticated$","isAuth$","loggedUserData$","loggedUser$","onLogout","clearTrainingData","logout","goToPastTrainings","startDate","Date","weekStartsOn","endDate","navigate","queryParams","changeLanguage","language","pipe","userData","setPreferences","_id","subscribe","_","onCloseSideNav","emit","ctorParameters","type","propDecorators","selector","template","changeDetection","OnPush","providers","styles"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"./side-nav.component.html?ngResource\";\r\nimport __NG_CLI_RESOURCE__1 from \"./side-nav.component.scss?ngResource\";\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { endOfWeek, format, startOfWeek } from 'date-fns';\r\nimport { switchMap, take, takeUntil } from 'rxjs/operators';\r\nimport { QUERY_PARAMS_DATE_FORMAT } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { NavigationService } from '../../../services/shared/navigation.service';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport { NewTrainingService } from '../../../services/training/new-training.service';\r\nlet SideNavComponent = class SideNavComponent {\r\n    constructor(authService, navigationService, newTrainingService, unsubsService, router) {\r\n        this.authService = authService;\r\n        this.navigationService = navigationService;\r\n        this.newTrainingService = newTrainingService;\r\n        this.unsubsService = unsubsService;\r\n        this.router = router;\r\n        this.closeSideNav = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this.isAuthenticated$ = this.authService.isAuth$;\r\n        this.loggedUserData$ = this.authService.loggedUser$;\r\n    }\r\n    async onLogout() {\r\n        this.newTrainingService.clearTrainingData();\r\n        await this.authService.logout();\r\n    }\r\n    async goToPastTrainings() {\r\n        const startDate = startOfWeek(new Date(), {\r\n            weekStartsOn: 1,\r\n        });\r\n        const endDate = endOfWeek(new Date(), {\r\n            weekStartsOn: 1,\r\n        });\r\n        await this.router.navigate(['/training/past-trainings'], {\r\n            queryParams: {\r\n                startDate: format(startDate, QUERY_PARAMS_DATE_FORMAT),\r\n                endDate: format(endDate, QUERY_PARAMS_DATE_FORMAT),\r\n            },\r\n        });\r\n    }\r\n    changeLanguage(language) {\r\n        this.authService.loggedUser$.pipe(take(1), switchMap((userData) => this.navigationService.setPreferences(userData._id, language, 'kg')), takeUntil(this.unsubsService)).subscribe(_ => this.onCloseSideNav());\r\n    }\r\n    onCloseSideNav() {\r\n        this.closeSideNav.emit();\r\n    }\r\n};\r\nSideNavComponent.ctorParameters = () => [\r\n    { type: AuthService },\r\n    { type: NavigationService },\r\n    { type: NewTrainingService },\r\n    { type: UnsubscribeService },\r\n    { type: Router }\r\n];\r\nSideNavComponent.propDecorators = {\r\n    closeSideNav: [{ type: Output }]\r\n};\r\nSideNavComponent = __decorate([\r\n    Component({\r\n        selector: 'bl-side-nav',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        changeDetection: ChangeDetectionStrategy.OnPush,\r\n        providers: [UnsubscribeService],\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], SideNavComponent);\r\nexport { SideNavComponent };\r\n"]},"metadata":{},"sourceType":"module"}