{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Development\\\\trainingApk\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./signup.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./signup.component.scss?ngResource\";\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { finalize } from 'rxjs/operators';\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { SignupService } from '../../../services/auth/signup.service';\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\nlet SignupComponent = class SignupComponent {\n  constructor(authService, signupService, translateService, changeDetectorRef, toastController, router) {\n    this.authService = authService;\n    this.signupService = signupService;\n    this.translateService = translateService;\n    this.changeDetectorRef = changeDetectorRef;\n    this.toastController = toastController;\n    this.router = router;\n    this.isLoading = false;\n    this.form = new FormGroup({\n      'language': new FormControl('en', [Validators.required]),\n      'weightFormat': new FormControl('kg', [Validators.required]),\n      'email': new FormControl(null, [Validators.required, Validators.email], [AuthCustomValidators.isEmailAvailable(this.signupService, this.changeDetectorRef)]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(6), Validators.maxLength(20)]),\n      'confirmPassword': new FormControl(null, [Validators.required, Validators.minLength(6), Validators.maxLength(20)])\n    }, {\n      validators: AuthCustomValidators.samePasswords()\n    });\n  }\n\n  onSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.form.valid) {\n        //TODO: test toast\n        const toast = yield _this.toastController.create({\n          message: _this.translateService.instant('auth.errors.invalid_form'),\n          duration: SNACK_BAR_DURATION.ERROR,\n          color: '#c62828'\n        });\n        yield toast.present();\n        return;\n      }\n\n      _this.isLoading = true;\n\n      _this.authService.signup(_this.accessFormData('language').value, _this.accessFormData('weightFormat').value, _this.accessFormData('email').value, _this.accessFormData('password').value, _this.accessFormData('confirmPassword').value).pipe(finalize(() => {\n        _this.isLoading = false;\n\n        _this.changeDetectorRef.markForCheck();\n      })).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          if (response.Success) {\n            //TODO: test toast\n            const toast = yield _this.toastController.create({\n              message: _this.translateService.instant(response.Message),\n              duration: SNACK_BAR_DURATION.GENERAL,\n              color: response.Success ? '#009688' : '#c62828'\n            });\n            yield toast.present();\n            yield _this.router.navigate(['/auth/login']);\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  accessFormData(formFieldName) {\n    return this.form.get(formFieldName);\n  }\n\n};\n\nSignupComponent.ctorParameters = () => [{\n  type: AuthService\n}, {\n  type: SignupService\n}, {\n  type: TranslateService\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ToastController\n}, {\n  type: Router\n}];\n\nSignupComponent = __decorate([Component({\n  selector: 'bl-signup',\n  template: __NG_CLI_RESOURCE__0,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [UnsubscribeService],\n  styles: [__NG_CLI_RESOURCE__1]\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"sources":["C:/Development/trainingApk/src/app/views/auth/signup/signup.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","ChangeDetectionStrategy","ChangeDetectorRef","Component","FormControl","FormGroup","Validators","Router","ToastController","TranslateService","finalize","SNACK_BAR_DURATION","AuthService","SignupService","UnsubscribeService","AuthCustomValidators","SignupComponent","constructor","authService","signupService","translateService","changeDetectorRef","toastController","router","isLoading","form","required","email","isEmailAvailable","minLength","maxLength","validators","samePasswords","onSubmit","valid","toast","create","message","instant","duration","ERROR","color","present","signup","accessFormData","value","pipe","markForCheck","subscribe","response","Success","Message","GENERAL","navigate","formFieldName","get","ctorParameters","type","selector","template","changeDetection","OnPush","providers","styles"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"./signup.component.html?ngResource\";\r\nimport __NG_CLI_RESOURCE__1 from \"./signup.component.scss?ngResource\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { SignupService } from '../../../services/auth/signup.service';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\nlet SignupComponent = class SignupComponent {\r\n    constructor(authService, signupService, translateService, changeDetectorRef, toastController, router) {\r\n        this.authService = authService;\r\n        this.signupService = signupService;\r\n        this.translateService = translateService;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.toastController = toastController;\r\n        this.router = router;\r\n        this.isLoading = false;\r\n        this.form = new FormGroup({\r\n            'language': new FormControl('en', [Validators.required]),\r\n            'weightFormat': new FormControl('kg', [Validators.required]),\r\n            'email': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.email\r\n            ], [AuthCustomValidators.isEmailAvailable(this.signupService, this.changeDetectorRef)]),\r\n            'password': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)\r\n            ]),\r\n            'confirmPassword': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)\r\n            ]),\r\n        }, { validators: AuthCustomValidators.samePasswords() });\r\n    }\r\n    async onSubmit() {\r\n        if (!this.form.valid) {\r\n            //TODO: test toast\r\n            const toast = await this.toastController.create({\r\n                message: this.translateService.instant('auth.errors.invalid_form'),\r\n                duration: SNACK_BAR_DURATION.ERROR,\r\n                color: '#c62828',\r\n            });\r\n            await toast.present();\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        this.authService.signup(this.accessFormData('language').value, this.accessFormData('weightFormat').value, this.accessFormData('email').value, this.accessFormData('password').value, this.accessFormData('confirmPassword').value).pipe(finalize(() => {\r\n            this.isLoading = false;\r\n            this.changeDetectorRef.markForCheck();\r\n        })).subscribe(async (response) => {\r\n            if (response.Success) {\r\n                //TODO: test toast\r\n                const toast = await this.toastController.create({\r\n                    message: this.translateService.instant(response.Message),\r\n                    duration: SNACK_BAR_DURATION.GENERAL,\r\n                    color: response.Success ? '#009688' : '#c62828',\r\n                });\r\n                await toast.present();\r\n                await this.router.navigate(['/auth/login']);\r\n            }\r\n        });\r\n    }\r\n    accessFormData(formFieldName) {\r\n        return this.form.get(formFieldName);\r\n    }\r\n};\r\nSignupComponent.ctorParameters = () => [\r\n    { type: AuthService },\r\n    { type: SignupService },\r\n    { type: TranslateService },\r\n    { type: ChangeDetectorRef },\r\n    { type: ToastController },\r\n    { type: Router }\r\n];\r\nSignupComponent = __decorate([\r\n    Component({\r\n        selector: 'bl-signup',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        changeDetection: ChangeDetectionStrategy.OnPush,\r\n        providers: [UnsubscribeService],\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], SignupComponent);\r\nexport { SignupComponent };\r\n"]},"metadata":{},"sourceType":"module"}