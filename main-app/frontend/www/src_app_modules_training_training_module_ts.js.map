{"version":3,"file":"src_app_modules_training_training_module_ts.js","mappings":"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AAM,CAAC0C,cAAD,CAAtB;EACA,OAAOO,QAAQ,CAACG,WAAT,OAA2BF,SAAS,CAACE,WAAV,EAA3B,IAAsDH,QAAQ,CAACnM,QAAT,OAAwBoM,SAAS,CAACpM,QAAV,EAArF;AACD;;;;;;;;;;;;;;;;ACnCD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASG,UAAT,CAAoBwL,aAApB,EAAmCC,cAAnC,EAAmDwB,YAAnD,EAAiE;EAC9EjE,sEAAY,CAAC,CAAD,EAAIG,SAAJ,CAAZ;EACA,IAAI+D,mBAAmB,GAAGhN,iEAAW,CAACsL,aAAD,EAAgByB,YAAhB,CAArC;EACA,IAAIE,oBAAoB,GAAGjN,iEAAW,CAACuL,cAAD,EAAiBwB,YAAjB,CAAtC;EACA,OAAOC,mBAAmB,CAAC5C,OAApB,OAAkC6C,oBAAoB,CAAC7C,OAArB,EAAzC;AACD;;;;;;;;;;;;;;;;;AC/CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASlhB,QAAT,CAAkBgkB,QAAlB,EAA4BH,YAA5B,EAA0C;EACvDjE,sEAAY,CAAC,CAAD,EAAIG,SAAJ,CAAZ;EACA,IAAIkE,OAAO,GAAGJ,YAAY,IAAI,EAA9B;EACA,IAAIK,gBAAgB,GAAGD,OAAO,CAACC,gBAAR,IAA4B,IAA5B,GAAmC,CAAnC,GAAuCxE,mEAAS,CAACuE,OAAO,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","sources":["./src/app/constants/enums/training-item-wrapper-heights.enum.ts","./src/app/constants/shared/input-maxlength.const.ts","./src/app/constants/shared/kg-to-lbs.const.ts","./src/app/constants/training/bodyweight-set-categories.const.ts","./src/app/directives/training-item/training-item.directive.ts","./src/app/helpers/control-value-accessor.helper.ts","./src/app/helpers/months.helper.ts","./src/app/helpers/round-to-decimal-places.helper.ts","./src/app/helpers/training/convert-weight-units.helper.ts","./src/app/helpers/training/new-training/bodyweight.helper.ts","./src/app/helpers/training/past-trainings/map-stream-data.helper.ts","./src/app/helpers/training/show-by-day.helper.ts","./src/app/modules/training/training-routing.module.ts","./src/app/modules/training/training.module.ts","./src/app/pipes/shared/camel-to-snake-case/camel-to-snake-case.module.ts","./src/app/pipes/shared/camel-to-snake-case/camel-to-snake-case.pipe.ts","./src/app/services/api/training/new-training.service.ts","./src/app/services/api/training/past-trainings.service.ts","./src/app/validators/training/single-exercise.validators.ts","./src/app/views/training/new-training/new-training.component.ts","./src/app/views/training/new-training/reorder-exercises/reorder-exercises.component.ts","./src/app/views/training/new-training/single-exercise/sets/change-set-category/change-set-category.component.ts","./src/app/views/training/new-training/single-exercise/sets/set/set.component.ts","./src/app/views/training/new-training/single-exercise/sets/sets.component.ts","./src/app/views/training/new-training/single-exercise/single-exercise.component.ts","./src/app/views/training/past-trainings/past-trainings-filters/past-trainings-filters.component.ts","./src/app/views/training/past-trainings/past-trainings.component.ts","./src/app/views/training/past-trainings/show-by-day/show-by-day.component.ts","./src/app/views/training/past-trainings/training-item/training-item-actions/training-item-actions.component.ts","./src/app/views/training/past-trainings/training-item/training-item.component.ts","./node_modules/date-fns/esm/addDays/index.js","./node_modules/date-fns/esm/add/index.js","./node_modules/date-fns/esm/constants/index.js","./node_modules/date-fns/esm/differenceInCalendarDays/index.js","./node_modules/date-fns/esm/differenceInDays/index.js","./node_modules/date-fns/esm/getMonth/index.js","./node_modules/date-fns/esm/isSameDay/index.js","./node_modules/date-fns/esm/isSameMonth/index.js","./node_modules/date-fns/esm/isSameWeek/index.js","./node_modules/date-fns/esm/parseISO/index.js","./node_modules/date-fns/esm/subDays/index.js","./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js"],"sourcesContent":["export enum TrainingItemWrapperHeights {\r\n    WEEK_HEIGHT = 285,\r\n    SEARCH_HEIGHT = 315,\r\n}\r\n","export const INPUT_MAX_LENGTH = 50;\r\n","export const KG_TO_LBS = 2.204;\r\n","import { SetCategoryType } from '../../models/training/new-training/single-exercise/set/set.type';\r\n\r\nexport const BODYWEIGHT_SET_CATEGORIES: SetCategoryType[] = [\r\n    'dynamicBodyweight',\r\n    'dynamicWeighted',\r\n    'staticBodyweight',\r\n    'staticWeighted',\r\n];\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({ selector: 'bl-training-item' })\r\nexport class TrainingItemDirective {\r\n    constructor(readonly elementRef: ElementRef<HTMLElement>, readonly renderer2: Renderer2) {\r\n        renderer2.addClass(elementRef.nativeElement as HTMLElement, 'bl-training-item');\r\n    }\r\n}\r\n","import { forwardRef, InjectionToken, Type } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { SetsComponent } from '../views/training/new-training/single-exercise/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../views/training/new-training/single-exercise/single-exercise.component';\r\n\r\nexport type Components = SingleExerciseComponent | SetsComponent;\r\n\r\nexport function getControlValueAccessor(component: Type<Components>): ControlValueAccessorType {\r\n    return {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => component),\r\n        multi: true,\r\n    };\r\n}\r\n\r\ntype ControlValueAccessorType = {\r\n    provide: InjectionToken<readonly ControlValueAccessor[]>;\r\n    useExisting: Type<Components>;\r\n    multi: boolean;\r\n};\r\n","export const ALL_MONTHS = [\r\n    'january',\r\n    'february',\r\n    'march',\r\n    'april',\r\n    'may',\r\n    'june',\r\n    'july',\r\n    'august',\r\n    'september',\r\n    'october',\r\n    'november',\r\n    'december',\r\n];\r\n","import { isNeverCheck } from './is-never-check.helper';\r\n\r\nexport type DecimalPlaces = 1 | 2;\r\n\r\nexport function roundToDecimalPlaces(decimalPlaces: DecimalPlaces, value: number): number {\r\n    switch (decimalPlaces) {\r\n        case 1: {\r\n            return Math.round(value * 10) / 10;\r\n        }\r\n        case 2: {\r\n            return Math.round(value * 100) / 100;\r\n        }\r\n        default: {\r\n            isNeverCheck(decimalPlaces);\r\n        }\r\n    }\r\n}\r\n","import { KG_TO_LBS } from '../../constants/shared/kg-to-lbs.const';\r\nimport { WeightUnit } from '../../models/common/preferences.type';\r\nimport { roundToDecimalPlaces } from '../round-to-decimal-places.helper';\r\n\r\nexport function convertWeightUnit(weightUnit: WeightUnit, value: number): number {\r\n    return weightUnit === 'lbs'\r\n        ? roundToDecimalPlaces(1, value * KG_TO_LBS)\r\n        : roundToDecimalPlaces(1, value / KG_TO_LBS);\r\n}\r\n","export function fillBodyweight(initialBodyweight: number, editBodyweight: number): number {\r\n    if (initialBodyweight) {\r\n        if (!editBodyweight) {\r\n            return initialBodyweight;\r\n        } else {\r\n            return editBodyweight;\r\n        }\r\n    } else {\r\n        if (!editBodyweight) {\r\n            return null;\r\n        } else {\r\n            return editBodyweight;\r\n        }\r\n    }\r\n}\r\n","import { Observable, of } from 'rxjs';\r\nimport { catchError, map, startWith } from 'rxjs/operators';\r\nimport { StreamData } from '../../../models/common/common.model';\r\n\r\nexport const mapStreamData =\r\n    <T>() =>\r\n    (source: Observable<StreamData<T>>) =>\r\n        source.pipe(\r\n            map((data: StreamData<T>) => ({\r\n                IsLoading: false,\r\n                Value: data.Value,\r\n                IsError: false,\r\n            })),\r\n            catchError((_) =>\r\n                of({\r\n                    IsLoading: false,\r\n                    IsError: true,\r\n                }),\r\n            ),\r\n            startWith({\r\n                IsLoading: true,\r\n                IsError: false,\r\n            }),\r\n        );\r\n","import { startOfWeek, differenceInDays, addDays } from 'date-fns';\r\n\r\nexport function calculateLastWeekDay(startingDate: Date): Date {\r\n    const startOfCurrentWeek = startOfWeek(startingDate, { weekStartsOn: 1 });\r\n    const currentWeekDayIndex = differenceInDays(startingDate, startOfCurrentWeek);\r\n    const startOfLastWeek = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n    return addDays(startOfLastWeek, currentWeekDayIndex);\r\n}\r\n\r\nexport function calculateFirstWeekDay(earliestTrainingDate: string, startingDate: Date): Date {\r\n    const startOfCurrentWeek = startOfWeek(startingDate, { weekStartsOn: 1 });\r\n    const currentWeekDayIndex = differenceInDays(startingDate, startOfCurrentWeek);\r\n    const startOfFirstWeek = startOfWeek(new Date(earliestTrainingDate), { weekStartsOn: 1 });\r\n    return addDays(startOfFirstWeek, currentWeekDayIndex);\r\n}\r\n\r\nexport function getCurrentDayIndex(date: Date): number {\r\n    const startOfWeekDate = startOfWeek(date, { weekStartsOn: 1 });\r\n    const currentDayIndex = differenceInDays(date, startOfWeekDate);\r\n    return currentDayIndex;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NewTrainingComponent } from '../../views/training/new-training/new-training.component';\nimport { PastTrainingsComponent } from '../../views/training/past-trainings/past-trainings.component';\n\nconst routes: Routes = [\n    {\n        path: 'new-training',\n        component: NewTrainingComponent,\n    },\n    {\n        path: 'new-training/:id',\n        component: NewTrainingComponent,\n    },\n    {\n        path: 'past-trainings',\n        component: PastTrainingsComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class TrainingRoutingModule {}\n","import { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AutofocusModule } from '../../directives/autofocus/autofocus.module';\r\nimport { SkeletonLoaderModule } from '../../directives/skeleton-loader/skeleton-loader.module';\r\nimport { TrainingItemDirective } from '../../directives/training-item/training-item.directive';\r\nimport { PipesModule } from '../../pipes/pipes.module';\r\nimport { CamelToSnakeCaseModule } from '../../pipes/shared/camel-to-snake-case/camel-to-snake-case.module';\r\nimport { SanitizeHtmlModule } from '../../pipes/shared/sanitize-html/sanitize-html.module';\r\nimport { ShowAllExercisesModule } from '../../pipes/training/past-trainings/show-all-exercises/show-all-exercises.module';\r\nimport { NewTrainingComponent } from '../../views/training/new-training/new-training.component';\r\nimport { ReorderExercisesComponent } from '../../views/training/new-training/reorder-exercises/reorder-exercises.component';\r\nimport { ChangeSetCategoryComponent } from '../../views/training/new-training/single-exercise/sets/change-set-category/change-set-category.component';\r\nimport { SetComponent } from '../../views/training/new-training/single-exercise/sets/set/set.component';\r\nimport { SetsComponent } from '../../views/training/new-training/single-exercise/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../../views/training/new-training/single-exercise/single-exercise.component';\r\nimport { PastTrainingsFiltersComponent } from '../../views/training/past-trainings/past-trainings-filters/past-trainings-filters.component';\r\nimport { PastTrainingsComponent } from '../../views/training/past-trainings/past-trainings.component';\r\nimport { ShowByDayComponent } from '../../views/training/past-trainings/show-by-day/show-by-day.component';\r\nimport { TrainingItemActionsComponent } from '../../views/training/past-trainings/training-item/training-item-actions/training-item-actions.component';\r\nimport { TrainingItemComponent } from '../../views/training/past-trainings/training-item/training-item.component';\r\nimport { SharedModule } from '../shared.module';\r\nimport { TrainingRoutingModule } from './training-routing.module';\r\n\r\nconst DIRECTIVES = [TrainingItemDirective];\r\n\r\nconst COMPONENTS = [\r\n    NewTrainingComponent,\r\n    PastTrainingsComponent,\r\n    TrainingItemComponent,\r\n    TrainingItemActionsComponent,\r\n    PastTrainingsFiltersComponent,\r\n    ShowByDayComponent,\r\n    ReorderExercisesComponent,\r\n    SingleExerciseComponent,\r\n    SetsComponent,\r\n    ChangeSetCategoryComponent,\r\n    SetComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    IonicModule,\r\n];\r\n\r\nconst IMPORTS = [\r\n    TrainingRoutingModule,\r\n    SharedModule,\r\n    PipesModule,\r\n    AutofocusModule,\r\n    SkeletonLoaderModule,\r\n    CamelToSnakeCaseModule,\r\n];\r\n\r\nconst PIPES_MODULES = [ShowAllExercisesModule, SanitizeHtmlModule];\r\n\r\n@NgModule({\r\n    declarations: [...COMPONENTS, ...DIRECTIVES],\r\n    imports: [...EXTERNAL_IMPORTS, ...IMPORTS, ...PIPES_MODULES],\r\n    exports: [...COMPONENTS],\r\n    providers: [DatePipe],\r\n})\r\nexport class TrainingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CamelToSnakeCasePipe } from './camel-to-snake-case.pipe';\r\n\r\n@NgModule({\r\n    declarations: [CamelToSnakeCasePipe],\r\n    exports: [CamelToSnakeCasePipe],\r\n})\r\nexport class CamelToSnakeCaseModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'camelToSnakeCase' })\r\nexport class CamelToSnakeCasePipe implements PipeTransform {\r\n    transform(value: string): string {\r\n        return value.replace(/[A-Z]/g, (letter: string) => `_${letter.toLowerCase()}`);\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { Storage } from '@capacitor/storage';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { StorageItems } from '../../../constants/enums/storage-items.enum';\r\nimport { GeneralResponseData } from '../../../models/common/general-response.model';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport { NewTraining } from '../../../models/training/new-training/new-training.model';\r\nimport { AuthStoreService } from '../../store/auth/auth-store.service';\r\nimport { NewTrainingStoreService } from '../../store/training/new-training-store.service';\r\nimport { ExercisesStoreService } from '../../store/training/exercises-store.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NewTrainingService {\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _authStoreService: AuthStoreService,\r\n        private _newTrainingStoreService: NewTrainingStoreService,\r\n        private _exercisesStoreService: ExercisesStoreService,\r\n    ) {}\r\n\r\n    getExerciseByName(exerciseName: string): Observable<Exercise> {\r\n        const params = new HttpParams().set('exerciseName', exerciseName);\r\n        return this._http.get<Exercise>(environment.BACKEND + '/training/get_exercise', {\r\n            params: params,\r\n        });\r\n    }\r\n\r\n    getExercises(): Observable<StreamData<Exercise[]>> {\r\n        return this._http\r\n            .get<StreamData<Exercise[]>>(environment.BACKEND + '/training/get-exercises')\r\n            .pipe(\r\n                switchMap((response: StreamData<Exercise[]>) => {\r\n                    this._exercisesStoreService.emitAllExercises(response);\r\n                    return from(Storage.get({ key: StorageItems.TRAINING_STATE })).pipe(\r\n                        switchMap((storedData) => {\r\n                            if (!storedData || !storedData?.value) {\r\n                                return this._authStoreService.loggedUser$.pipe(\r\n                                    take(1),\r\n                                    switchMap((authResponseData: AuthResponseData) =>\r\n                                        this._newTrainingStoreService.updateTrainingState(\r\n                                            undefined,\r\n                                            response.Value,\r\n                                            true,\r\n                                            authResponseData._id,\r\n                                        ),\r\n                                    ),\r\n                                    switchMap((_) => of(response)),\r\n                                );\r\n                            }\r\n                            return of(response);\r\n                        }),\r\n                    );\r\n                }),\r\n            );\r\n    }\r\n\r\n    addTraining(trainingData: NewTraining): Observable<GeneralResponseData> {\r\n        return this._http.post<GeneralResponseData>(\r\n            environment.BACKEND + '/training/handle-training',\r\n            trainingData,\r\n        );\r\n    }\r\n\r\n    updateTraining(trainingData: NewTraining, trainingId: string): Observable<GeneralResponseData> {\r\n        return this._http.put<GeneralResponseData>(\r\n            environment.BACKEND + `/training/handle-training/${trainingId}`,\r\n            trainingData,\r\n        );\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { mapDateInterval } from '../../../helpers/training/past-trainings/map-past-trainings-dates.helper';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { Paginator } from '../../../models/common/paginator.model';\r\nimport { NewTraining } from '../../../models/training/new-training/new-training.model';\r\nimport {\r\n    PastTrainings,\r\n    PeriodFilterType,\r\n} from '../../../models/training/past-trainings/past-trainings.model';\r\n\r\nconst ROUTE_PREFIX = '/training/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PastTrainingsService {\r\n    constructor(private readonly _http: HttpClient) {}\r\n\r\n    searchPastTrainings(\r\n        searchValue: string,\r\n        pageSize: number,\r\n        currentPage: number,\r\n    ): Observable<StreamData<Paginator<PastTrainings>>> {\r\n        const params = `?searchValue=${searchValue}&size=${pageSize.toString()}&page=${currentPage.toString()}`;\r\n        return this._http\r\n            .get<StreamData<Paginator<PastTrainings>>>(\r\n                `${environment.BACKEND}${ROUTE_PREFIX}search-trainings${params}`,\r\n            )\r\n            .pipe(\r\n                map((response: StreamData<Paginator<PastTrainings>>) => mapDateInterval(response)),\r\n            );\r\n    }\r\n\r\n    getPastTrainings(\r\n        currentDate: Date,\r\n        filterType: PeriodFilterType,\r\n    ): Observable<StreamData<Paginator<PastTrainings>>> {\r\n        const params = `?currentDate=${currentDate}&filterType=${filterType}`;\r\n        return this._http\r\n            .get<StreamData<Paginator<PastTrainings>>>(\r\n                `${environment.BACKEND}${ROUTE_PREFIX}past-trainings${params}`,\r\n            )\r\n            .pipe(\r\n                map((response: StreamData<Paginator<PastTrainings>>) => mapDateInterval(response)),\r\n            );\r\n    }\r\n\r\n    getPastTraining(id: string): Observable<StreamData<NewTraining>> {\r\n        return this._http.get<StreamData<NewTraining>>(\r\n            `${environment.BACKEND}${ROUTE_PREFIX}past-trainings/${id}`,\r\n        );\r\n    }\r\n}\r\n","import {\r\n    AbstractControl,\r\n    FormArray,\r\n    FormGroup,\r\n    ValidationErrors,\r\n    ValidatorFn,\r\n} from '@angular/forms';\r\nimport { SingleExerciseFormType } from '../../models/training/new-training/single-exercise/single-exercise-form.type';\r\n\r\nexport function checkDuplicateExerciseName(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            const exerciseNames: string[] = [];\r\n            for (const group of (array as FormArray<FormGroup<SingleExerciseFormType>>).controls) {\r\n                if (exerciseNames.indexOf(group.get('exerciseData.name')?.value) !== -1) {\r\n                    return { duplicateExerciseName: group.get('exerciseData.name').value };\r\n                } else {\r\n                    exerciseNames.push(group.get('exerciseData.name')?.value);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnDestroy,\r\n    QueryList,\r\n    ViewChild,\r\n    ViewChildren,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { IonContent, ModalController } from '@ionic/angular';\r\nimport { OverlayEventDetail } from '@ionic/core';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { BehaviorSubject, from, Observable, of } from 'rxjs';\r\nimport {\r\n    concatMap,\r\n    delay,\r\n    distinctUntilChanged,\r\n    filter,\r\n    finalize,\r\n    map,\r\n    switchMap,\r\n    take,\r\n    takeUntil,\r\n    tap,\r\n} from 'rxjs/operators';\r\nimport { Storage } from '@capacitor/storage';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SharedStoreService } from '../../../services/store/shared/shared-store.service';\r\nimport { PastTrainingsService } from '../../../services/api/training/past-trainings.service';\r\nimport * as NewTrainingHandler from '../../../helpers/training/new-training/bodyweight.helper';\r\nimport { mapStreamData } from '../../../helpers/training/past-trainings/map-stream-data.helper';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { DialogRoles } from '../../../constants/enums/model-roles.enum';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport { NewTraining } from '../../../models/training/new-training/new-training.model';\r\nimport { SingleExercise } from '../../../models/training/new-training/single-exercise/single-exercise.model';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport { DateTimePickerComponent } from '../../shared/datetime-picker/datetime-picker.component';\r\nimport { NewTrainingStoreService } from '../../../services/store/training/new-training-store.service';\r\nimport { NewTrainingService } from '../../../services/api/training/new-training.service';\r\nimport { AuthStoreService } from '../../../services/store/auth/auth-store.service';\r\nimport { PastTrainingsQueryParams } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport {\r\n    EMPTY_TRAINING,\r\n    createEmptyExercise,\r\n} from '../../../constants/training/new-training.const';\r\nimport { StorageItems } from '../../../constants/enums/storage-items.enum';\r\nimport { PreferencesStoreService } from '../../../services/store/shared/preferences-store.service';\r\nimport { PastTrainingsStoreService } from '../../../services/store/training/past-trainings-store.service';\r\nimport { GeneralResponseData } from '../../../models/common/general-response.model';\r\nimport { MESSAGE_DURATION } from '../../../constants/shared/message-duration.const';\r\nimport { ToastControllerService } from '../../../services/shared/toast-controller.service';\r\nimport { BODYWEIGHT_SET_CATEGORIES } from '../../../constants/training/bodyweight-set-categories.const';\r\nimport { ExercisesStoreService } from '../../../services/store/training/exercises-store.service';\r\nimport { SetCategoryType } from '../../../models/training/new-training/single-exercise/set/set.type';\r\nimport { SingleExerciseComponent } from './single-exercise/single-exercise.component';\r\nimport { ReorderExercisesComponent } from './reorder-exercises/reorder-exercises.component';\r\n\r\n@Component({\r\n    selector: 'bl-new-training',\r\n    templateUrl: './new-training.component.html',\r\n    styleUrls: ['./new-training.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class NewTrainingComponent implements OnDestroy {\r\n    private _isSubmitted$ = new BehaviorSubject<boolean>(false);\r\n    private _isApiLoading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    isSubmitted$ = this._isSubmitted$.asObservable();\r\n    isApiLoading$ = this._isApiLoading$.asObservable();\r\n    trainingStream$: Observable<StreamData<Exercise[]>> | undefined = undefined;\r\n    currentPreferences$ = this._preferencesStoreService.preferencesChanged$;\r\n    isAuthenticated$ = this._authStoreService.isAuth$;\r\n    isEditing$ = this._sharedStoreService.editingTraining$;\r\n    isReorder$ = this._newTrainingStoreService.trainingState$.pipe(\r\n        map((training: NewTraining) => {\r\n            const exercises = training.exercises;\r\n            return (\r\n                exercises.length >= 2 &&\r\n                exercises.every(\r\n                    (exercise: SingleExercise) =>\r\n                        !!exercise.exerciseData.name && exercise.sets.length > 0,\r\n                )\r\n            );\r\n        }),\r\n    );\r\n    exercisesState$ = this._newTrainingStoreService.trainingState$.pipe(\r\n        map((currentTrainingState: NewTraining) => currentTrainingState.exercises),\r\n        tap((exercises: SingleExercise[]) => {\r\n            const isBodyweightCategory = exercises.some((exercise: SingleExercise) =>\r\n                this.bodyweightSetCategories.some((category: SetCategoryType) =>\r\n                    exercise.exerciseData.selectedSetCategories.includes(category),\r\n                ),\r\n            );\r\n            this.newTrainingForm.controls.bodyweight.setValidators(\r\n                isBodyweightCategory\r\n                    ? [...this.initialBodyweightValidators, Validators.required]\r\n                    : [...this.initialBodyweightValidators],\r\n            );\r\n            this.newTrainingForm.controls.bodyweight.updateValueAndValidity();\r\n        }),\r\n    );\r\n\r\n    formattedTodayDate: string;\r\n    editTrainingData: NewTraining;\r\n    initialBodyweightValidators = [\r\n        Validators.pattern(/^[1-9]\\d*(\\.\\d+)?$/),\r\n        Validators.min(30),\r\n        Validators.max(300),\r\n    ];\r\n    bodyweightSetCategories = BODYWEIGHT_SET_CATEGORIES;\r\n\r\n    newTrainingForm = new FormGroup({\r\n        bodyweight: new FormControl(0, {\r\n            validators: this.initialBodyweightValidators,\r\n        }),\r\n        trainingDate: new FormControl(new Date().toISOString(), {\r\n            validators: [Validators.required],\r\n            nonNullable: true,\r\n        }),\r\n        exercises: new FormControl<SingleExercise[]>([], { nonNullable: true }),\r\n    });\r\n\r\n    editMode = false;\r\n\r\n    @ViewChild(IonContent, { read: IonContent })\r\n    ionContent: IonContent;\r\n\r\n    @ViewChildren(SingleExerciseComponent)\r\n    singleExerciseComponents: QueryList<SingleExerciseComponent>;\r\n\r\n    constructor(\r\n        private _newTrainingStoreService: NewTrainingStoreService,\r\n        private _newTrainingService: NewTrainingService,\r\n        private _pastTrainingService: PastTrainingsService,\r\n        private _sharedStoreService: SharedStoreService,\r\n        private _authStoreService: AuthStoreService,\r\n        private _unsubscribeService: UnsubscribeService,\r\n        private _preferencesStoreService: PreferencesStoreService,\r\n        private _pastTrainingsStoreService: PastTrainingsStoreService,\r\n        private _exercisesStoreService: ExercisesStoreService,\r\n        private _toastControllerService: ToastControllerService,\r\n        private _translateService: TranslateService,\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _modalController: ModalController,\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n    ) {}\r\n\r\n    ionViewWillEnter(): void {\r\n        let allExercisesChanged: StreamData<Exercise[]>;\r\n        this.trainingStream$ = this._route.params.pipe(\r\n            take(1),\r\n            switchMap((params: Params) =>\r\n                this._exercisesStoreService.allExercisesState$.pipe(\r\n                    take(1),\r\n                    switchMap((value) => {\r\n                        if (value) {\r\n                            return of(value);\r\n                        } else {\r\n                            return this._newTrainingService.getExercises();\r\n                        }\r\n                    }),\r\n                    tap((exercisesData) => (allExercisesChanged = exercisesData)),\r\n                    map((_) => params),\r\n                ),\r\n            ),\r\n            switchMap((params: Params) => {\r\n                if (params['id']) {\r\n                    this.editMode = true;\r\n                    return this._pastTrainingService.getPastTraining(params['id']).pipe(\r\n                        switchMap((response: StreamData<NewTraining>) => {\r\n                            this.editTrainingData = {\r\n                                ...response.Value,\r\n                                editMode: true,\r\n                                trainingDate: response?.Value?.trainingDate,\r\n                            };\r\n                            return this._newTrainingStoreService.updateTrainingState(\r\n                                this.editTrainingData,\r\n                            );\r\n                        }),\r\n                    );\r\n                } else {\r\n                    return this._newTrainingStoreService.trainingState$.pipe(\r\n                        take(1),\r\n                        switchMap((currentTrainingState) => {\r\n                            let newTrainingState: NewTraining;\r\n                            if (currentTrainingState.editMode && !this.editMode) {\r\n                                newTrainingState = {\r\n                                    ...EMPTY_TRAINING,\r\n                                    exercises: [createEmptyExercise(allExercisesChanged.Value)],\r\n                                    userId: currentTrainingState?.userId ?? '',\r\n                                };\r\n                            } else if (!currentTrainingState.editMode && !this.editMode) {\r\n                                if (!currentTrainingState.exercises[0]?.exerciseData?.name) {\r\n                                    newTrainingState = {\r\n                                        ...EMPTY_TRAINING,\r\n                                        exercises: [createEmptyExercise(allExercisesChanged.Value)],\r\n                                        userId: currentTrainingState?.userId ?? '',\r\n                                    };\r\n                                } else {\r\n                                    newTrainingState = currentTrainingState;\r\n                                }\r\n                            }\r\n                            return this._newTrainingStoreService.updateTrainingState(\r\n                                newTrainingState,\r\n                            );\r\n                        }),\r\n                    );\r\n                }\r\n            }),\r\n            tap((_) => this._sharedStoreService.emitEditingTraining(this.editMode)),\r\n            switchMap((_) =>\r\n                of(allExercisesChanged).pipe(\r\n                    tap((_) => this._formInit()),\r\n                    mapStreamData(),\r\n                ),\r\n            ),\r\n        );\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    ionViewDidEnter(): void {\r\n        if (this.ionContent) {\r\n            setTimeout(async () => await this.ionContent.scrollToBottom(500), 300);\r\n        }\r\n    }\r\n\r\n    ionViewDidLeave(): void {\r\n        this._sharedStoreService.emitEditingTraining(false);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._sharedStoreService.completeDayClicked();\r\n        this._isSubmitted$.complete();\r\n        this._isApiLoading$.complete();\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this._isSubmitted$.next(true);\r\n        if (!this.newTrainingForm.valid || !this._isExerciseFormValid()) {\r\n            return;\r\n        }\r\n        this._isApiLoading$.next(true);\r\n\r\n        this._newTrainingStoreService.trainingState$\r\n            .pipe(\r\n                take(1),\r\n                switchMap((trainingData: NewTraining) => {\r\n                    if (this.editMode) {\r\n                        return this._newTrainingService.updateTraining(\r\n                            trainingData,\r\n                            this.editTrainingData._id,\r\n                        );\r\n                    } else {\r\n                        delete trainingData._id;\r\n                        return this._newTrainingService.addTraining(trainingData);\r\n                    }\r\n                }),\r\n                finalize(() => this._isApiLoading$.next(false)),\r\n            )\r\n            .subscribe(async (response: GeneralResponseData) => {\r\n                await this._toastControllerService.displayToast({\r\n                    message: this._translateService.instant(response.Message),\r\n                    duration: MESSAGE_DURATION.GENERAL,\r\n                    color: 'primary',\r\n                });\r\n            });\r\n    }\r\n\r\n    async openReorderModal(): Promise<void> {\r\n        const modal = await this._modalController.create({\r\n            component: ReorderExercisesComponent,\r\n            keyboardClose: true,\r\n        });\r\n        await modal.present();\r\n\r\n        from(modal.onDidDismiss<NewTraining | undefined>())\r\n            .pipe(\r\n                filter<OverlayEventDetail<NewTraining>>(\r\n                    (response) => response?.role === DialogRoles.REORDER_EXERCISES,\r\n                ),\r\n                takeUntil(this._unsubscribeService),\r\n            )\r\n            .subscribe((response) => {\r\n                if (response?.data) {\r\n                    let streamData: StreamData<Exercise[]>;\r\n                    this.trainingStream$ = this._exercisesStoreService.allExercisesState$.pipe(\r\n                        take(1),\r\n                        map((value) => {\r\n                            streamData = {\r\n                                IsLoading: true,\r\n                                Value: value.Value,\r\n                                IsError: false,\r\n                            };\r\n                            return streamData;\r\n                        }),\r\n                        delay(300),\r\n                        switchMap((_) =>\r\n                            this._newTrainingStoreService\r\n                                .updateTrainingState(response.data)\r\n                                .pipe(tap((_) => this._formInit())),\r\n                        ),\r\n                        switchMap((_) => of(streamData)),\r\n                        mapStreamData<Exercise[]>(),\r\n                        tap((_) =>\r\n                            setTimeout(async () => await this.ionContent.scrollToBottom(500), 100),\r\n                        ),\r\n                    );\r\n                    this._changeDetectorRef.markForCheck();\r\n                }\r\n            });\r\n    }\r\n\r\n    async openDateTimePicker(): Promise<void> {\r\n        const modal = await this._modalController.create({\r\n            component: DateTimePickerComponent,\r\n            componentProps: {\r\n                dateValue: format(\r\n                    new Date(this.newTrainingForm.controls.trainingDate.value),\r\n                    `yyyy-MM-dd'T'HH:mm:ss'Z'`,\r\n                ),\r\n            },\r\n            cssClass: 'datetime-picker',\r\n            mode: 'md',\r\n        });\r\n        await modal.present();\r\n\r\n        from(modal.onDidDismiss<string | undefined>())\r\n            .pipe(\r\n                concatMap((response) => {\r\n                    if (response.role === DialogRoles.SELECT_DATE) {\r\n                        return this._newTrainingStoreService\r\n                            .updateTrainingDate(response.data)\r\n                            .pipe(map((_) => response));\r\n                    }\r\n                    return of(response);\r\n                }),\r\n                finalize(() => this._changeDetectorRef.markForCheck()),\r\n                takeUntil(this._unsubscribeService),\r\n            )\r\n            .subscribe((response) => {\r\n                const { data, role } = response;\r\n                if (role === DialogRoles.SELECT_DATE) {\r\n                    this.newTrainingForm.controls.trainingDate.patchValue(data);\r\n                    this._setFormattedDate(data);\r\n                }\r\n            });\r\n    }\r\n\r\n    async goToPastTraining(): Promise<void> {\r\n        this._pastTrainingsStoreService.pastTrainingsQueryParams$\r\n            .pipe(take(1))\r\n            .subscribe(async (params: PastTrainingsQueryParams) => {\r\n                await this._router.navigate(['/training/past-trainings'], { queryParams: params });\r\n                await Storage.remove({ key: StorageItems.QUERY_PARAMS });\r\n            });\r\n    }\r\n\r\n    onBodyweightChange(): void {\r\n        this._newTrainingStoreService\r\n            .updateBodyweight(this.newTrainingForm.controls.bodyweight.value)\r\n            .pipe(filter(Boolean), distinctUntilChanged(), takeUntil(this._unsubscribeService))\r\n            .subscribe();\r\n    }\r\n\r\n    async onExerciseAdded(event: UIEvent): Promise<void> {\r\n        if (this.ionContent) {\r\n            of(null)\r\n                .pipe(\r\n                    delay(100),\r\n                    tap(async (_) => await this.ionContent.scrollToBottom(300)),\r\n                    delay(200),\r\n                    tap(\r\n                        async (_) =>\r\n                            await this.singleExerciseComponents.last?.exercisePickerEls?.last?.open(\r\n                                event,\r\n                            ),\r\n                    ),\r\n                    takeUntil(this._unsubscribeService),\r\n                )\r\n                .subscribe();\r\n        }\r\n    }\r\n\r\n    tryAgain(): void {\r\n        if (this.editTrainingData) {\r\n            this.trainingStream$ = this._pastTrainingService\r\n                .getPastTraining(this.editTrainingData?._id)\r\n                .pipe(\r\n                    switchMap((response: StreamData<NewTraining>) => {\r\n                        this.editTrainingData = {\r\n                            ...response.Value,\r\n                            editMode: true,\r\n                            trainingDate: response?.Value?.trainingDate,\r\n                        };\r\n                        return this._newTrainingStoreService.updateTrainingState(\r\n                            this.editTrainingData,\r\n                        );\r\n                    }),\r\n                    switchMap((_) => this._newTrainingService.getExercises()),\r\n                    mapStreamData(),\r\n                );\r\n        } else {\r\n            this.trainingStream$ = this._newTrainingService.getExercises().pipe(mapStreamData());\r\n        }\r\n    }\r\n\r\n    async goToTop(): Promise<void> {\r\n        await this.ionContent.scrollToTop(400);\r\n    }\r\n\r\n    private _formInit(): void {\r\n        const currentTrainingState = this._newTrainingStoreService.getCurrentTrainingState();\r\n        const dayClickedDate = this._sharedStoreService.getDayClickedDate();\r\n        this.newTrainingForm.controls.bodyweight.patchValue(\r\n            this._fillBodyweight(currentTrainingState),\r\n        );\r\n        this.newTrainingForm.controls.trainingDate.patchValue(\r\n            this._fillTrainingDate(dayClickedDate),\r\n        );\r\n        this.newTrainingForm.controls.exercises.patchValue(currentTrainingState.exercises);\r\n        this._setFormattedDate(this.newTrainingForm.controls.trainingDate.value);\r\n    }\r\n\r\n    private _setFormattedDate(dateValue: string): void {\r\n        const [date, time] = dateValue.split('T');\r\n        this.formattedTodayDate = format(\r\n            parseISO(format(new Date(date), 'yyyy-MM-dd') + `T${time}`),\r\n            'HH:mm, MMM d, yyyy',\r\n        );\r\n    }\r\n\r\n    private _fillTrainingDate(dayClickedDate: string | undefined): string {\r\n        if (this.editTrainingData) {\r\n            return this.editTrainingData.trainingDate.toString();\r\n        } else {\r\n            return dayClickedDate ? dayClickedDate : new Date().toISOString();\r\n        }\r\n    }\r\n\r\n    private _fillBodyweight(currentTrainingState: NewTraining): number {\r\n        return NewTrainingHandler.fillBodyweight(\r\n            currentTrainingState.bodyweight,\r\n            this.editTrainingData ? this.editTrainingData.bodyweight : null,\r\n        );\r\n    }\r\n\r\n    private _isExerciseFormValid(): boolean {\r\n        let isFormValid = true;\r\n        this.singleExerciseComponents.forEach((component: SingleExerciseComponent) => {\r\n            const exerciseForm = component.form;\r\n            if (exerciseForm.invalid) {\r\n                isFormValid = false;\r\n            }\r\n            if (!component.areSetsValid()) {\r\n                isFormValid = false;\r\n            }\r\n        });\r\n        return isFormValid;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ItemReorderEventDetail, ModalController } from '@ionic/angular';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { DialogRoles } from '../../../../constants/enums/model-roles.enum';\r\nimport { NewTraining } from '../../../../models/training/new-training/new-training.model';\r\nimport { NewTrainingStoreService } from '../../../../services/store/training/new-training-store.service';\r\n\r\n@Component({\r\n    templateUrl: './reorder-exercises.component.html',\r\n    styleUrls: ['./reorder-exercises.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReorderExercisesComponent {\r\n    private reorderedTrainingState: NewTraining;\r\n\r\n    readonly currentExercises$: Observable<string[]> =\r\n        this.newTrainingStoreService.trainingState$.pipe(\r\n            map((training: NewTraining) =>\r\n                training.exercises.map((exercise) => exercise.exerciseData.name),\r\n            ),\r\n        );\r\n\r\n    constructor(\r\n        private readonly newTrainingStoreService: NewTrainingStoreService,\r\n        private readonly modalController: ModalController,\r\n    ) {}\r\n\r\n    doReorder(ev: CustomEvent<ItemReorderEventDetail>) {\r\n        const currentTrainingState = this.newTrainingStoreService.getCurrentTrainingState();\r\n        const exerciseFrom = (\r\n            this.reorderedTrainingState ? this.reorderedTrainingState : currentTrainingState\r\n        ).exercises.find((_exercise, index) => index === ev.detail.from);\r\n        const remainingExercises = (\r\n            this.reorderedTrainingState ? this.reorderedTrainingState : currentTrainingState\r\n        ).exercises.filter((_exercise, index) => index !== ev.detail.from);\r\n        const reorderedExercises = [\r\n            ...remainingExercises.slice(0, ev.detail.to),\r\n            exerciseFrom,\r\n            ...remainingExercises.slice(ev.detail.to),\r\n        ];\r\n        this.reorderedTrainingState = {\r\n            ...(this.reorderedTrainingState ? this.reorderedTrainingState : currentTrainingState),\r\n            exercises: reorderedExercises,\r\n        };\r\n        ev.detail.complete();\r\n    }\r\n\r\n    async reorderExercises(): Promise<void> {\r\n        await this.modalController.dismiss(\r\n            this.reorderedTrainingState,\r\n            DialogRoles.REORDER_EXERCISES,\r\n        );\r\n    }\r\n\r\n    async onCancel(): Promise<void> {\r\n        await this.modalController.dismiss(undefined, DialogRoles.CANCEL);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { DialogRoles } from '../../../../../../constants/enums/model-roles.enum';\r\nimport { SetCategoryType } from '../../../../../../models/training/new-training/single-exercise/set/set.type';\r\n@Component({\r\n    selector: 'bl-change-set-category',\r\n    templateUrl: './change-set-category.component.html',\r\n    styleUrls: ['./change-set-category.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChangeSetCategoryComponent {\r\n    @Input()\r\n    setCategories: SetCategoryType[];\r\n\r\n    @Input()\r\n    setCategory: SetCategoryType;\r\n\r\n    constructor(private _modalController: ModalController) {}\r\n\r\n    async onCancel(): Promise<void> {\r\n        await this._modalController.dismiss(null, DialogRoles.CANCEL);\r\n    }\r\n\r\n    async onChange(): Promise<void> {\r\n        await this._modalController.dismiss(this.setCategory, DialogRoles.CHANGE_SET_CATEGORY);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChild,\r\n    ChangeDetectionStrategy,\r\n    OnChanges,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IonInput } from '@ionic/angular';\r\nimport { isNeverCheck } from '../../../../../../helpers/is-never-check.helper';\r\nimport { convertWeightUnit } from '../../../../../../helpers/training/convert-weight-units.helper';\r\nimport { WeightUnit } from '../../../../../../models/common/preferences.type';\r\nimport { SetFormType } from '../../../../../../models/training/new-training/single-exercise/set/set-form.type';\r\nimport { SetTrainingData } from '../../../../../../models/training/new-training/single-exercise/set/set.model';\r\nimport {\r\n    SetCategoryType,\r\n    SetConstituent,\r\n} from '../../../../../../models/training/new-training/single-exercise/set/set.type';\r\n\r\n@Component({\r\n    selector: 'bl-set',\r\n    templateUrl: './set.component.html',\r\n    styleUrls: ['./set.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SetComponent implements OnChanges {\r\n    @Input()\r\n    form: FormGroup<SetFormType>;\r\n\r\n    @Input()\r\n    set weightUnit(newWeightUnit: WeightUnit) {\r\n        this._weightUnit = newWeightUnit;\r\n    }\r\n    get weightUnit(): WeightUnit {\r\n        return this._weightUnit;\r\n    }\r\n    private _weightUnit: WeightUnit;\r\n\r\n    @Input()\r\n    set activeSetCategory(category: SetCategoryType) {\r\n        if (category) {\r\n            this._activeSetCategory = category;\r\n            setTimeout(async () => {\r\n                await this._focusSetConstituent(this._activeSetCategory);\r\n            }, 400);\r\n        }\r\n    }\r\n    get activeSetCategory(): SetCategoryType {\r\n        return this._activeSetCategory;\r\n    }\r\n    private _activeSetCategory: SetCategoryType = 'freeWeighted';\r\n\r\n    @Input()\r\n    exerciseControl: FormControl<string>;\r\n\r\n    @Input()\r\n    availableSetCategoriesControl: FormControl<SetCategoryType[]>;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Input()\r\n    isSubmitted = false;\r\n\r\n    @Input()\r\n    isFirstSet = true;\r\n\r\n    @Output()\r\n    setChanged = new EventEmitter<{ setData: SetTrainingData; setCategory: SetCategoryType }>();\r\n\r\n    @Output()\r\n    setDeleted = new EventEmitter<void>();\r\n\r\n    @Output()\r\n    setConstituentKeydownEmitted = new EventEmitter<SetConstituent>();\r\n\r\n    @Output()\r\n    setCategoryModalOpened = new EventEmitter<SetCategoryType>();\r\n\r\n    @ViewChild('weightEl')\r\n    weightElement: IonInput;\r\n\r\n    @ViewChild('repsEl')\r\n    repsElement: IonInput;\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (!changes.weightUnit?.firstChange && changes.weightUnit?.currentValue) {\r\n            switch (this.activeSetCategory) {\r\n                case 'freeWeighted': {\r\n                    const currentWeightValue = +this.form.controls.weight.value;\r\n                    if (currentWeightValue) {\r\n                        this.form.controls.weight.patchValue(\r\n                            convertWeightUnit(\r\n                                changes.weightUnit.currentValue as WeightUnit,\r\n                                currentWeightValue,\r\n                            ),\r\n                        );\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSetCategory(): void {\r\n        this.setCategoryModalOpened.emit(this.activeSetCategory);\r\n    }\r\n\r\n    onChangeSets(): void {\r\n        const weight = this.form.controls.weight?.value;\r\n        const reps = this.form.controls.reps?.value;\r\n        const setData: SetTrainingData = {\r\n            exerciseName: this.exerciseControl.value,\r\n            weight:\r\n                weight && this._isSetConstituentValid('weight')\r\n                    ? this.form.controls.weight.value\r\n                    : undefined,\r\n            reps:\r\n                reps && this._isSetConstituentValid('reps')\r\n                    ? this.form.controls.reps.value\r\n                    : undefined,\r\n        };\r\n        this.setChanged.emit({\r\n            setData,\r\n            setCategory: this.activeSetCategory,\r\n        });\r\n    }\r\n\r\n    deleteSet(): void {\r\n        this.setDeleted.emit();\r\n    }\r\n\r\n    onSetConstituentKeydown(setConstituent: SetConstituent): void {\r\n        this.setConstituentKeydownEmitted.emit(setConstituent);\r\n    }\r\n\r\n    private _isSetConstituentValid(setConstituent: SetConstituent): boolean {\r\n        return this.form.controls[setConstituent].valid;\r\n    }\r\n\r\n    private async _focusSetConstituent(setCategory: SetCategoryType): Promise<void> {\r\n        switch (setCategory) {\r\n            case 'freeWeighted':\r\n            case 'dynamicWeighted': {\r\n                if (this.weightElement) {\r\n                    await this.weightElement.setFocus();\r\n                }\r\n                break;\r\n            }\r\n            case 'dynamicBodyweight': {\r\n                if (this.repsElement) {\r\n                    await this.repsElement.setFocus();\r\n                }\r\n                break;\r\n            }\r\n            case 'staticBodyweight': {\r\n                //TODO: BL-128\r\n                break;\r\n            }\r\n            case 'staticWeighted': {\r\n                //TODO: BL-123\r\n                break;\r\n            }\r\n            default: {\r\n                isNeverCheck(setCategory);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    QueryList,\r\n    ViewChildren,\r\n} from '@angular/core';\r\nimport {\r\n    ControlValueAccessor,\r\n    FormArray,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators,\r\n} from '@angular/forms';\r\nimport { OverlayEventDetail } from '@ionic/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { EMPTY, from, of } from 'rxjs';\r\nimport { concatMap, filter, map, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { getControlValueAccessor } from '../../../../../helpers/control-value-accessor.helper';\r\nimport {\r\n    Set,\r\n    SelectedCategoriesChanged,\r\n    SetTrainingData,\r\n} from '../../../../../models/training/new-training/single-exercise/set/set.model';\r\nimport { UnsubscribeService } from '../../../../../services/shared/unsubscribe.service';\r\nimport { convertWeightUnit } from '../../../../../helpers/training/convert-weight-units.helper';\r\nimport { DEFAULT_WEIGHT_UNIT } from '../../../../../constants/shared/default-weight-unit.const';\r\nimport { NewTraining } from '../../../../../models/training/new-training/new-training.model';\r\nimport { NewTrainingStoreService } from '../../../../../services/store/training/new-training-store.service';\r\nimport {\r\n    SetCategoryType,\r\n    SetConstituent,\r\n} from '../../../../../models/training/new-training/single-exercise/set/set.type';\r\nimport { isNeverCheck } from '../../../../../helpers/is-never-check.helper';\r\nimport { DialogRoles } from '../../../../../constants/enums/model-roles.enum';\r\nimport {\r\n    FormConstructionType,\r\n    SetFormType,\r\n    SetFormValue,\r\n} from '../../../../../models/training/new-training/single-exercise/set/set-form.type';\r\nimport { WeightUnit } from '../../../../../models/common/preferences.type';\r\nimport { PreferencesStoreService } from '../../../../../services/store/shared/preferences-store.service';\r\nimport { Preferences } from '../../../../../models/common/preferences.model';\r\nimport { ChangeSetCategoryComponent } from './change-set-category/change-set-category.component';\r\nimport { SetComponent } from './set/set.component';\r\n\r\n@Component({\r\n    selector: 'bl-sets',\r\n    templateUrl: './sets.component.html',\r\n    styleUrls: ['./sets.component.scss'],\r\n    providers: [getControlValueAccessor(SetsComponent), UnsubscribeService],\r\n})\r\nexport class SetsComponent implements ControlValueAccessor, OnInit {\r\n    currentPreferences$ = this._preferencesStoreService.preferencesChanged$;\r\n\r\n    currentWeightUnit: WeightUnit;\r\n    form = new FormArray<FormGroup<SetFormType>>([]);\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    editTrainingData: NewTraining;\r\n\r\n    @Input()\r\n    indexExercise = 0;\r\n\r\n    @Input()\r\n    bodyweightControl: FormControl<number>;\r\n\r\n    @Input()\r\n    exerciseControl: FormControl<string>;\r\n\r\n    @Input()\r\n    availableSetCategoriesControl: FormControl<SetCategoryType[]>;\r\n\r\n    @Input()\r\n    selectedSetCategoriesControl: FormControl<SetCategoryType[]>;\r\n\r\n    @Input()\r\n    isSubmitted = false;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Output()\r\n    selectedCategoriesChanged = new EventEmitter<SelectedCategoriesChanged>();\r\n\r\n    @ViewChildren('set', { read: SetComponent })\r\n    setCmps: QueryList<SetComponent>;\r\n\r\n    constructor(\r\n        private _unsubscribeService: UnsubscribeService,\r\n        private _newTrainingStoreService: NewTrainingStoreService,\r\n        private _preferencesStoreService: PreferencesStoreService,\r\n        private _modalController: ModalController,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.currentWeightUnit =\r\n            this._preferencesStoreService.getPreferences().weightUnit ?? DEFAULT_WEIGHT_UNIT;\r\n\r\n        this.currentPreferences$\r\n            .pipe(\r\n                filter(\r\n                    (preferences: Preferences) => this.currentWeightUnit !== preferences.weightUnit,\r\n                ),\r\n                takeUntil(this._unsubscribeService),\r\n            )\r\n            .subscribe((preferences: Preferences) => {\r\n                this.currentWeightUnit = preferences.weightUnit;\r\n            });\r\n\r\n        this.selectedSetCategoriesControl.valueChanges\r\n            .pipe(\r\n                map((setCategories: SetCategoryType[]) => {\r\n                    const selectedSetCategories = setCategories;\r\n                    while (this.form.length !== 0) {\r\n                        this.form.removeAt(0);\r\n                    }\r\n                    this._constructFormBasedOnSetCategory(selectedSetCategories[0], 'newExercise');\r\n                    return {\r\n                        index: this.indexExercise,\r\n                        setCategory: selectedSetCategories[0],\r\n                    };\r\n                }),\r\n                switchMap((value) =>\r\n                    this._newTrainingStoreService.restartSets(value.index, value.setCategory),\r\n                ),\r\n                takeUntil(this._unsubscribeService),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    writeValue(sets: Set[]): void {\r\n        if (sets.length > 0) {\r\n            for (const set of sets) {\r\n                this.addSet(set);\r\n            }\r\n        } else {\r\n            this.addSet();\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: (value: SetFormValue[]) => void): void {\r\n        this.form.valueChanges.pipe(takeUntil(this._unsubscribeService)).subscribe(fn);\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    onSetChanged(\r\n        data: { setData: SetTrainingData; setCategory: SetCategoryType },\r\n        setIndex: number,\r\n    ): void {\r\n        const serviceData: SetTrainingData = {\r\n            ...data.setData,\r\n            setNumber: setIndex + 1,\r\n            total: this._calculateTotal(),\r\n        };\r\n        this._newTrainingStoreService\r\n            .setsChanged(serviceData)\r\n            .pipe(takeUntil(this._unsubscribeService))\r\n            .subscribe();\r\n    }\r\n\r\n    async onSetConstituentKeydownEmit(\r\n        setConstituent: SetConstituent,\r\n        setIndex: number,\r\n    ): Promise<void> {\r\n        const currentSetCmpData = this.setCmps.toArray()[setIndex];\r\n        const previousSetCmpData = this.setCmps.toArray()[setIndex - 1];\r\n        switch (setConstituent) {\r\n            case 'weight': {\r\n                switch (currentSetCmpData.activeSetCategory) {\r\n                    case 'freeWeighted':\r\n                    case 'dynamicWeighted': {\r\n                        if (setIndex > 0) {\r\n                            if (!currentSetCmpData.weightElement.value) {\r\n                                this.onSetDeleted(setIndex);\r\n                                await previousSetCmpData.repsElement.setFocus();\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'reps': {\r\n                switch (currentSetCmpData.activeSetCategory) {\r\n                    case 'freeWeighted':\r\n                    case 'dynamicWeighted': {\r\n                        if (!currentSetCmpData.repsElement.value) {\r\n                            await currentSetCmpData.weightElement.setFocus();\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'dynamicBodyweight': {\r\n                        if (setIndex > 0) {\r\n                            if (!currentSetCmpData.repsElement.value) {\r\n                                this.onSetDeleted(setIndex);\r\n                                await previousSetCmpData.repsElement.setFocus();\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    async onUpdateSetCategory(\r\n        currentSetCategory: SetCategoryType,\r\n        setIndex: number,\r\n    ): Promise<void> {\r\n        const modal = await this._modalController.create({\r\n            component: ChangeSetCategoryComponent,\r\n            componentProps: {\r\n                setCategories: this.availableSetCategoriesControl.value,\r\n                setCategory: currentSetCategory,\r\n            },\r\n            keyboardClose: true,\r\n            canDismiss: true,\r\n        });\r\n        await modal.present();\r\n\r\n        from(modal.onDidDismiss<SetCategoryType>())\r\n            .pipe(\r\n                concatMap((response: OverlayEventDetail<SetCategoryType>) => {\r\n                    if (response.role === DialogRoles.CHANGE_SET_CATEGORY) {\r\n                        if (currentSetCategory !== response.data) {\r\n                            return this._newTrainingStoreService\r\n                                .updatePrimarySetCategory(\r\n                                    this.indexExercise,\r\n                                    setIndex,\r\n                                    response.data,\r\n                                )\r\n                                .pipe(\r\n                                    map((_) => {\r\n                                        this._constructFormBasedOnSetCategory(\r\n                                            response.data,\r\n                                            'sameExercise',\r\n                                            undefined,\r\n                                            setIndex,\r\n                                        );\r\n                                        return response.data;\r\n                                    }),\r\n                                );\r\n                        }\r\n                        return EMPTY;\r\n                    }\r\n                    return EMPTY;\r\n                }),\r\n                takeUntil(this._unsubscribeService),\r\n            )\r\n            .subscribe(async (setCategory: SetCategoryType) => {\r\n                this.selectedCategoriesChanged.emit({\r\n                    setChangedType: 'updateSet',\r\n                    setCategory,\r\n                    setIndex,\r\n                });\r\n            });\r\n    }\r\n\r\n    addSet(set?: Set): void {\r\n        let setCategory: SetCategoryType;\r\n        if (set) {\r\n            setCategory = this.selectedSetCategoriesControl.value[this.form.controls.length];\r\n        } else {\r\n            if (this.selectedSetCategoriesControl.value.length > 1) {\r\n                setCategory =\r\n                    this.selectedSetCategoriesControl.value[this.form.controls.length - 1];\r\n            } else {\r\n                setCategory = this.selectedSetCategoriesControl.value[0] ?? 'freeWeighted';\r\n            }\r\n            this.selectedCategoriesChanged.emit({ setChangedType: 'addSet', setCategory });\r\n        }\r\n        this._constructFormBasedOnSetCategory(setCategory, 'newExercise', set);\r\n        of(setCategory)\r\n            .pipe(\r\n                concatMap((setCategory: SetCategoryType) => {\r\n                    if (!set) {\r\n                        return this._newTrainingStoreService.addSet(\r\n                            this.indexExercise,\r\n                            setCategory,\r\n                            this.form.controls.length,\r\n                        );\r\n                    } else {\r\n                        return of(setCategory);\r\n                    }\r\n                }),\r\n                takeUntil(this._unsubscribeService),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    onSetDeleted(setIndex: number): void {\r\n        this.form.removeAt(setIndex);\r\n        this._newTrainingStoreService\r\n            .deleteSet(this.indexExercise, setIndex, this._calculateTotal())\r\n            .pipe(takeUntil(this._unsubscribeService))\r\n            .subscribe((_) =>\r\n                this.selectedCategoriesChanged.emit({\r\n                    setChangedType: 'deleteSet',\r\n                    setCategory: undefined,\r\n                    setIndex,\r\n                }),\r\n            );\r\n    }\r\n\r\n    private _calculateTotal(): number {\r\n        let total = 0;\r\n        this.form.controls.forEach((group: FormGroup<SetFormType>, index: number) => {\r\n            const setCategory = this.selectedSetCategoriesControl.value[index];\r\n            switch (setCategory) {\r\n                case 'freeWeighted': {\r\n                    total += group.controls.weight.value * group.controls.reps.value;\r\n                    break;\r\n                }\r\n                case 'dynamicBodyweight': {\r\n                    total += this.bodyweightControl.value * group.controls.reps.value;\r\n                    break;\r\n                }\r\n                case 'dynamicWeighted': {\r\n                    total +=\r\n                        (this.bodyweightControl.value + group.controls.weight.value) *\r\n                        group.controls.reps.value;\r\n                    break;\r\n                }\r\n                case 'staticBodyweight': {\r\n                    //TODO: BL-128\r\n                    break;\r\n                }\r\n                case 'staticWeighted': {\r\n                    //TODO: BL-123\r\n                    break;\r\n                }\r\n                default: {\r\n                    isNeverCheck(setCategory);\r\n                }\r\n            }\r\n        });\r\n        return total;\r\n    }\r\n\r\n    private _setWeightValue(weight: number): number {\r\n        if (this.editTrainingData) {\r\n            const editTrainingWeightUnit = this.editTrainingData.weightUnit ?? DEFAULT_WEIGHT_UNIT;\r\n            if (editTrainingWeightUnit !== this.currentWeightUnit) {\r\n                return convertWeightUnit(this.currentWeightUnit, weight);\r\n            }\r\n        }\r\n        return weight;\r\n    }\r\n\r\n    private _constructSetForm(\r\n        setConstituent: SetConstituent,\r\n        set: Set,\r\n        setControls: SetFormType,\r\n    ): SetFormType {\r\n        setControls[setConstituent] = new FormControl(\r\n            {\r\n                value: this._setFormValue(setConstituent, set),\r\n                disabled: this.exerciseControl.value ? false : true,\r\n            },\r\n            [\r\n                Validators.required,\r\n                Validators.min(1),\r\n                Validators.max(1000),\r\n                Validators.pattern(/^[1-9]\\d*(\\.\\d+)?$/),\r\n            ],\r\n        );\r\n        return setControls;\r\n    }\r\n\r\n    private _setFormValue(setConstituent: SetConstituent, set: Set): number | null {\r\n        if (set) {\r\n            if (setConstituent in set) {\r\n                if (setConstituent === 'weight') {\r\n                    return this._setWeightValue(set.weight);\r\n                } else {\r\n                    return set.reps;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private _constructFormBasedOnSetCategory(\r\n        setCategory: SetCategoryType,\r\n        constructionType: FormConstructionType,\r\n        set?: Set,\r\n        indexSet?: number,\r\n    ): void {\r\n        let setControls: SetFormType = Object.assign({});\r\n        switch (setCategory) {\r\n            case 'freeWeighted':\r\n            case 'dynamicWeighted': {\r\n                setControls = this._constructSetForm(\r\n                    'weight',\r\n                    { setNumber: 1, weight: set ? set.weight : null },\r\n                    setControls,\r\n                );\r\n                setControls = this._constructSetForm(\r\n                    'reps',\r\n                    { setNumber: 1, reps: set ? set.reps : null },\r\n                    setControls,\r\n                );\r\n                if (constructionType === 'newExercise') {\r\n                    this.form.push(new FormGroup(setControls));\r\n                } else {\r\n                    this.form.removeAt(indexSet);\r\n                    this.form.insert(indexSet, new FormGroup(setControls));\r\n                }\r\n                break;\r\n            }\r\n            case 'dynamicBodyweight': {\r\n                setControls = this._constructSetForm(\r\n                    'reps',\r\n                    { setNumber: 1, reps: set ? set.reps : null },\r\n                    setControls,\r\n                );\r\n                if (constructionType === 'newExercise') {\r\n                    this.form.push(new FormGroup(setControls));\r\n                } else {\r\n                    this.form.removeAt(indexSet);\r\n                    this.form.insert(indexSet, new FormGroup(setControls));\r\n                }\r\n                break;\r\n            }\r\n            case 'staticBodyweight': {\r\n                //TODO: BL-128\r\n                break;\r\n            }\r\n            case 'staticWeighted': {\r\n                //TODO: BL-123\r\n                break;\r\n            }\r\n            default: {\r\n                isNeverCheck(setCategory);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    QueryList,\r\n    ViewChildren,\r\n} from '@angular/core';\r\nimport {\r\n    AbstractControl,\r\n    ControlValueAccessor,\r\n    FormArray,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators,\r\n} from '@angular/forms';\r\nimport { IonSelect } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { delay, map, switchMap, take, takeUntil, withLatestFrom } from 'rxjs/operators';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\nimport { DEFAULT_WEIGHT_UNIT } from '../../../../constants/shared/default-weight-unit.const';\r\nimport { Exercise } from '../../../../models/training/exercise.model';\r\nimport { NewTraining } from '../../../../models/training/new-training/new-training.model';\r\nimport {\r\n    SelectedCategoriesChanged,\r\n    Set,\r\n} from '../../../../models/training/new-training/single-exercise/set/set.model';\r\nimport { SingleExercise } from '../../../../models/training/new-training/single-exercise/single-exercise.model';\r\nimport {\r\n    ExerciseFormType,\r\n    SingleExerciseFormType,\r\n    SingleExerciseValueType,\r\n} from '../../../../models/training/new-training/single-exercise/single-exercise-form.type';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport * as SingleExerciseValidators from '../../../../validators/training/single-exercise.validators';\r\nimport { NewTrainingStoreService } from '../../../../services/store/training/new-training-store.service';\r\nimport { PreferencesStoreService } from '../../../../services/store/shared/preferences-store.service';\r\nimport { WeightUnit } from '../../../../models/common/preferences.type';\r\nimport { StreamData } from '../../../../models/common/common.model';\r\nimport {\r\n    SetCategoryType,\r\n    SetConstituentExistsType,\r\n} from '../../../../models/training/new-training/single-exercise/set/set.type';\r\nimport { isNeverCheck } from '../../../../helpers/is-never-check.helper';\r\nimport { ExercisesStoreService } from '../../../../services/store/training/exercises-store.service';\r\nimport { SetFormType } from '../../../../models/training/new-training/single-exercise/set/set-form.type';\r\nimport { SetsComponent } from './sets/sets.component';\r\n\r\n@Component({\r\n    selector: 'bl-single-exercise',\r\n    templateUrl: './single-exercise.component.html',\r\n    styleUrls: ['./single-exercise.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [getControlValueAccessor(SingleExerciseComponent), UnsubscribeService],\r\n})\r\nexport class SingleExerciseComponent implements ControlValueAccessor, OnInit, OnDestroy {\r\n    private _isExercisePicker$ = new BehaviorSubject<boolean>(true);\r\n\r\n    isExercisePicker$ = this._isExercisePicker$.asObservable();\r\n    exercisesState$ = this._newTrainingStoreService.trainingState$.pipe(\r\n        map((currentTrainingState: NewTraining) => currentTrainingState.exercises),\r\n    );\r\n    isAddExerciseAllowed$ = this.exercisesState$.pipe(\r\n        delay(0),\r\n        withLatestFrom(this._exercisesStoreService.allExercisesState$),\r\n        map(([exerciseState, allExercises]: [SingleExercise[], StreamData<Exercise[]>]) => {\r\n            if (exerciseState.length > 0) {\r\n                if (this.setsCmpRef) {\r\n                    return (\r\n                        exerciseState.length <= allExercises.Value.length &&\r\n                        this.form.controls[exerciseState.length - 1].controls.exerciseData?.controls\r\n                            .name?.value &&\r\n                        exerciseState.length > 0 &&\r\n                        this.areSetsValid()\r\n                    );\r\n                }\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }),\r\n    );\r\n\r\n    form = new FormArray<FormGroup<SingleExerciseFormType>>([]);\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    editTrainingData: NewTraining;\r\n\r\n    @Input()\r\n    bodyweightControl: FormControl<number>;\r\n\r\n    @Input()\r\n    trainingDate: AbstractControl<string> | null;\r\n\r\n    @Input()\r\n    isSubmitted = false;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Input()\r\n    isApiLoading = false;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @Output()\r\n    exerciseAdded: EventEmitter<UIEvent> = new EventEmitter();\r\n\r\n    @ViewChildren('exercisePicker')\r\n    exercisePickerEls: QueryList<IonSelect>;\r\n\r\n    @ViewChildren(SetsComponent)\r\n    setsCmpRef: QueryList<SetsComponent>;\r\n\r\n    constructor(\r\n        private _newTrainingStoreService: NewTrainingStoreService,\r\n        private _unsubscribeService: UnsubscribeService,\r\n        private _preferencesStoreService: PreferencesStoreService,\r\n        private _exercisesStoreService: ExercisesStoreService,\r\n        private _translateService: TranslateService,\r\n    ) {}\r\n\r\n    get currentWeightUnit(): WeightUnit {\r\n        return this._preferencesStoreService.getPreferences().weightUnit ?? DEFAULT_WEIGHT_UNIT;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.form.setValidators([SingleExerciseValidators.checkDuplicateExerciseName()]);\r\n        this.form.updateValueAndValidity();\r\n\r\n        this._translateService.onLangChange\r\n            .pipe(takeUntil(this._unsubscribeService))\r\n            .subscribe((_) => {\r\n                this._isExercisePicker$.next(false);\r\n                setTimeout(() => this._isExercisePicker$.next(true), 1);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._isExercisePicker$.complete();\r\n    }\r\n\r\n    writeValue(exercises: SingleExercise[]): void {\r\n        if (exercises && exercises?.length > 0) {\r\n            while (this.form.length !== 0) {\r\n                this.form.removeAt(0);\r\n            }\r\n            for (const exercise of exercises) {\r\n                this.addExercise(exercise);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: (formValue: SingleExerciseValueType[]) => void): void {\r\n        this.form.valueChanges.pipe(takeUntil(this._unsubscribeService)).subscribe(fn);\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    onSelectedCategoriesChanged(data: SelectedCategoriesChanged, exerciseIndex: number): void {\r\n        const selectedSetCategoriesValue =\r\n            this.form.controls[exerciseIndex].controls.exerciseData.controls.selectedSetCategories\r\n                .value;\r\n        switch (data.setChangedType) {\r\n            case 'addSet': {\r\n                this.form.controls[\r\n                    exerciseIndex\r\n                ].controls.exerciseData.controls.selectedSetCategories.patchValue(\r\n                    [...selectedSetCategoriesValue, data.setCategory],\r\n                    { emitEvent: false },\r\n                );\r\n                break;\r\n            }\r\n            case 'updateSet': {\r\n                this.form.controls[\r\n                    exerciseIndex\r\n                ].controls.exerciseData.controls.selectedSetCategories.patchValue(\r\n                    [...selectedSetCategoriesValue].map((category: SetCategoryType, i: number) => {\r\n                        if (i === data.setIndex) {\r\n                            category = data.setCategory;\r\n                            return category;\r\n                        }\r\n                        return category;\r\n                    }),\r\n                    { emitEvent: false },\r\n                );\r\n                break;\r\n            }\r\n            case 'deleteSet': {\r\n                this.form.controls[\r\n                    exerciseIndex\r\n                ].controls.exerciseData.controls.selectedSetCategories.patchValue(\r\n                    selectedSetCategoriesValue.filter(\r\n                        (_category: SetCategoryType, i: number) => i !== data.setIndex,\r\n                    ),\r\n                    { emitEvent: false },\r\n                );\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onExerciseNameChange(indexExercise: number, element: IonSelect): void {\r\n        if (element?.value) {\r\n            this._newTrainingStoreService.trainingState$\r\n                .pipe(\r\n                    take(1),\r\n                    switchMap((currentTrainingState: NewTraining) => {\r\n                        const selectedExerciseData = currentTrainingState.exercises[\r\n                            indexExercise\r\n                        ].availableExercises.find(\r\n                            (exercise: Exercise) => exercise.name === (element.value as string),\r\n                        );\r\n                        return this._newTrainingStoreService\r\n                            .updateExerciseChoices(\r\n                                element.value as string,\r\n                                indexExercise,\r\n                                currentTrainingState,\r\n                                selectedExerciseData,\r\n                            )\r\n                            .pipe(map((_) => selectedExerciseData));\r\n                    }),\r\n                )\r\n                .subscribe((selectedExerciseData: Exercise) => {\r\n                    this.form.controls[\r\n                        indexExercise\r\n                    ].controls.exerciseData.controls.imageUrl.patchValue(\r\n                        selectedExerciseData.imageUrl,\r\n                    );\r\n                    this.form.controls[\r\n                        indexExercise\r\n                    ].controls.exerciseData.controls.primaryMuscleGroup.patchValue(\r\n                        selectedExerciseData.primaryMuscleGroup,\r\n                    );\r\n                    this.form.controls[\r\n                        indexExercise\r\n                    ].controls.exerciseData.controls.availableSetCategories.patchValue(\r\n                        selectedExerciseData.availableSetCategories,\r\n                    );\r\n                    this.form.controls[\r\n                        indexExercise\r\n                    ].controls.exerciseData.controls.selectedSetCategories.patchValue(\r\n                        selectedExerciseData.selectedSetCategories,\r\n                    );\r\n                    if (this.bodyweightControl?.errors) {\r\n                        this.bodyweightControl.markAsTouched();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    addExercise(exercise?: SingleExercise, event?: UIEvent): void {\r\n        if (exercise) {\r\n            exercise = {\r\n                ...exercise,\r\n                sets: [...exercise.sets].map((set: Set, index: number) => {\r\n                    const { weight, reps } = this._prepareSet(\r\n                        exercise.exerciseData.selectedSetCategories[index],\r\n                    );\r\n                    if (!weight) {\r\n                        delete set.weight;\r\n                    }\r\n                    if (!reps) {\r\n                        delete set.reps;\r\n                    }\r\n                    return set;\r\n                }),\r\n            };\r\n        }\r\n        this.form.push(\r\n            new FormGroup<SingleExerciseFormType>({\r\n                exerciseData: new FormGroup<ExerciseFormType>({\r\n                    name: new FormControl(exercise?.exerciseData?.name ?? '', [\r\n                        Validators.required,\r\n                    ]),\r\n                    imageUrl: new FormControl(exercise?.exerciseData?.imageUrl ?? ''),\r\n                    primaryMuscleGroup: new FormControl(\r\n                        exercise?.exerciseData?.primaryMuscleGroup ?? '',\r\n                    ),\r\n                    availableSetCategories: new FormControl(\r\n                        exercise?.exerciseData?.availableSetCategories ?? [],\r\n                    ),\r\n                    selectedSetCategories: new FormControl(\r\n                        exercise?.exerciseData?.selectedSetCategories ?? [],\r\n                    ),\r\n                }),\r\n                sets: new FormControl(exercise?.sets ?? [], { nonNullable: true }),\r\n            }),\r\n        );\r\n        if (event) {\r\n            this._newTrainingStoreService\r\n                .addNewExercise(this._getAlreadyUsedExercises())\r\n                .pipe(takeUntil(this._unsubscribeService))\r\n                .subscribe((_) => this.exerciseAdded.next(event));\r\n        }\r\n    }\r\n\r\n    async deleteExercise(indexExercise: number, exerciseName: string): Promise<void> {\r\n        if (exerciseName) {\r\n            this._newTrainingStoreService.trainingState$\r\n                .pipe(\r\n                    take(1),\r\n                    switchMap((currentTrainingState: NewTraining) =>\r\n                        this._newTrainingStoreService.deleteExercise(\r\n                            currentTrainingState,\r\n                            exerciseName,\r\n                        ),\r\n                    ),\r\n                    switchMap((data: [NewTraining, Exercise[]]) => {\r\n                        this.form.removeAt(indexExercise);\r\n                        return this._newTrainingStoreService.pushToAvailableExercises(\r\n                            data[0],\r\n                            data[1],\r\n                        );\r\n                    }),\r\n                )\r\n                .subscribe();\r\n        } else {\r\n            this._newTrainingStoreService.trainingState$\r\n                .pipe(\r\n                    take(1),\r\n                    switchMap((currentTrainingState: NewTraining) =>\r\n                        this._newTrainingStoreService.deleteExercise(\r\n                            currentTrainingState,\r\n                            null,\r\n                            indexExercise,\r\n                        ),\r\n                    ),\r\n                    takeUntil(this._unsubscribeService),\r\n                )\r\n                .subscribe((_) => this.form.removeAt(indexExercise));\r\n        }\r\n    }\r\n\r\n    getExercises(): FormGroup<SingleExerciseFormType>[] {\r\n        return this.form.controls;\r\n    }\r\n\r\n    areSetsValid(): boolean {\r\n        let isFormValid = true;\r\n        this.setsCmpRef.forEach((setCmp: SetsComponent) => {\r\n            const form = setCmp.form;\r\n            if (form?.errors) {\r\n                isFormValid = false;\r\n            }\r\n            form.controls.forEach((group: FormGroup<SetFormType>) => {\r\n                if (group?.errors) {\r\n                    isFormValid = false;\r\n                }\r\n                const weightErrors = group.controls.weight?.errors;\r\n                const repsErrors = group.controls.reps?.errors;\r\n                if (weightErrors) {\r\n                    isFormValid = false;\r\n                }\r\n                if (repsErrors) {\r\n                    isFormValid = false;\r\n                }\r\n            });\r\n        });\r\n        return isFormValid;\r\n    }\r\n\r\n    private _getAlreadyUsedExercises(): string[] {\r\n        const alreadyUsedExercises: string[] = [];\r\n        for (const exercise of this.getExercises()) {\r\n            if (exercise.get('exerciseData.name').value) {\r\n                alreadyUsedExercises.push(exercise.get('exerciseData.name').value);\r\n            }\r\n        }\r\n        return alreadyUsedExercises;\r\n    }\r\n\r\n    private _prepareSet(setCategory: SetCategoryType): SetConstituentExistsType {\r\n        let weight: boolean;\r\n        let reps: boolean;\r\n        switch (setCategory) {\r\n            case 'freeWeighted':\r\n            case 'dynamicWeighted': {\r\n                weight = true;\r\n                reps = true;\r\n                break;\r\n            }\r\n            case 'dynamicBodyweight': {\r\n                weight = false;\r\n                reps = true;\r\n                break;\r\n            }\r\n            case 'staticBodyweight': {\r\n                //TODO: BL-128\r\n                break;\r\n            }\r\n            case 'staticWeighted': {\r\n                //TODO: BL-123\r\n                break;\r\n            }\r\n            default: {\r\n                isNeverCheck(setCategory);\r\n            }\r\n        }\r\n        return {\r\n            weight,\r\n            reps,\r\n        };\r\n    }\r\n}\r\n","import { KeyValue } from '@angular/common';\r\nimport {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IonInput, SegmentChangeEventDetail } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\r\nimport { INPUT_MAX_LENGTH } from '../../../../constants/shared/input-maxlength.const';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport { PeriodFilterType } from '../../../../models/training/past-trainings/past-trainings.model';\r\n\r\n@Component({\r\n    selector: 'bl-past-trainings-filters',\r\n    templateUrl: './past-trainings-filters.component.html',\r\n    styleUrls: ['./past-trainings-filters.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class PastTrainingsFiltersComponent implements AfterViewInit {\r\n    private readonly keyUp$$: Subject<KeyboardEvent> = new Subject<KeyboardEvent>();\r\n\r\n    @Input()\r\n    periodFilter = 'week';\r\n\r\n    @Input()\r\n    periodDisabled = false;\r\n\r\n    @Output()\r\n    readonly trainingEmitted: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    @Output()\r\n    readonly periodEmitted: EventEmitter<PeriodFilterType> = new EventEmitter<PeriodFilterType>();\r\n\r\n    @Output()\r\n    readonly searchEmitted: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    @ViewChild('search', { read: IonInput })\r\n    searchEl: IonInput;\r\n\r\n    searchValue = '';\r\n\r\n    sortOptions: [\r\n        KeyValue<PeriodFilterType, Observable<string>>,\r\n        KeyValue<PeriodFilterType, Observable<string>>,\r\n    ] = [\r\n        {\r\n            key: 'week',\r\n            value: this.translateService.stream('training.past_trainings.show_by_week'),\r\n        },\r\n        {\r\n            key: 'day',\r\n            value: this.translateService.stream('training.past_trainings.show_by_day'),\r\n        },\r\n    ];\r\n\r\n    constructor(\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly route: ActivatedRoute,\r\n    ) {\r\n        const searchQueryParam = this.route.snapshot.queryParamMap?.get('search');\r\n        if (searchQueryParam) {\r\n            this.searchValue = searchQueryParam;\r\n        }\r\n\r\n        this.keyUp$$\r\n            .pipe(\r\n                map((event: Event) => (event.target as HTMLInputElement).value),\r\n                map((value: string) => value?.trim().toLowerCase()),\r\n                filter((value: string) => value.length <= 50),\r\n                debounceTime(500),\r\n                distinctUntilChanged(),\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe((value: string) => this.trainingEmitted.next(value));\r\n    }\r\n\r\n    get inputMaxLength(): number {\r\n        return INPUT_MAX_LENGTH;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            if (this.searchEl) {\r\n                const value = this.searchEl?.value;\r\n                this.searchEmitted.emit(!!value);\r\n            }\r\n        });\r\n    }\r\n\r\n    emitKeyboardEvent($event: KeyboardEvent): void {\r\n        this.keyUp$$.next($event);\r\n    }\r\n\r\n    segmentChanged($event: CustomEvent<SegmentChangeEventDetail>): void {\r\n        this.periodEmitted.emit($event?.detail?.value as PeriodFilterType);\r\n    }\r\n\r\n    openFilterDialog(): void {\r\n        //TODO\r\n    }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport {\r\n    AfterViewChecked,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    OnDestroy,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n    add,\r\n    addDays,\r\n    format,\r\n    getMonth,\r\n    isSameDay,\r\n    isSameMonth,\r\n    isSameWeek,\r\n    startOfDay,\r\n    startOfWeek,\r\n    subDays,\r\n} from 'date-fns';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { delay, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Storage } from '@capacitor/storage';\r\nimport { SharedStoreService } from '../../../services/store/shared/shared-store.service';\r\nimport { ALL_MONTHS } from '../../../helpers/months.helper';\r\nimport { mapStreamData } from '../../../helpers/training/past-trainings/map-stream-data.helper';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { Paginator, PaginatorChanged } from '../../../models/common/paginator.model';\r\nimport {\r\n    DateInterval,\r\n    PastTrainingsQueryParams,\r\n    PastTrainings,\r\n    PeriodFilterType,\r\n} from '../../../models/training/past-trainings/past-trainings.model';\r\nimport {\r\n    QUERY_PARAMS_DATE_FORMAT,\r\n    TEMPLATE_DATE_FORMAT,\r\n} from '../../../constants/training/past-trainings-date-format.const';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport { PastTrainingsService } from '../../../services/api/training/past-trainings.service';\r\nimport { Page } from '../../../models/common/page.type';\r\nimport { isNeverCheck } from '../../../helpers/is-never-check.helper';\r\nimport { PastTrainingsStoreService } from '../../../services/store/training/past-trainings-store.service';\r\nimport { PreferencesStoreService } from '../../../services/store/shared/preferences-store.service';\r\nimport { PreferencesService } from '../../../services/shared/preferences.service';\r\nimport {\r\n    calculateFirstWeekDay,\r\n    calculateLastWeekDay,\r\n    getCurrentDayIndex,\r\n} from '../../../helpers/training/show-by-day.helper';\r\nimport { DayActivatedType } from '../../../models/training/past-trainings/day-activated.type';\r\nimport { INITIAL_PAGE, DEFAULT_SIZE } from '../../../constants/shared/paginator.const';\r\nimport { StorageItems } from '../../../constants/enums/storage-items.enum';\r\nimport { TrainingItemWrapperHeights } from '../../../constants/enums/training-item-wrapper-heights.enum';\r\n\r\n@Component({\r\n    selector: 'bl-past-trainings',\r\n    templateUrl: './past-trainings.component.html',\r\n    styleUrls: ['./past-trainings.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class PastTrainingsComponent implements AfterViewChecked, OnDestroy {\r\n    readonly pageSizeOptions = [1, 3, 5, 10];\r\n    size = DEFAULT_SIZE;\r\n    page = INITIAL_PAGE;\r\n\r\n    searchText = '';\r\n    currentQueryParams: PastTrainingsQueryParams;\r\n    periodFilter = this._preferencesStoreService.getPreferences()?.showByPeriod ?? 'week';\r\n    dayActivated: DayActivatedType = {\r\n        Date: startOfDay(new Date()),\r\n        DayNumber: 0,\r\n    };\r\n    showByDayStartDate: Date;\r\n\r\n    private readonly _isSearch$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    private readonly _isNextPage$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    private readonly _isPreviousPage$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(\r\n        false,\r\n    );\r\n\r\n    readonly isSearch$: Observable<boolean> = this._isSearch$$.asObservable();\r\n    readonly isNextPage$: Observable<boolean> = this._isNextPage$$.asObservable();\r\n    readonly isPreviousPage$: Observable<boolean> = this._isPreviousPage$$.asObservable();\r\n    pastTrainings$: Observable<StreamData<Paginator<PastTrainings>>> | undefined = undefined;\r\n\r\n    @ViewChild('itemWrapper', { read: ElementRef })\r\n    trainingItemWrapper: ElementRef | undefined;\r\n\r\n    @ViewChild('timePeriod', { read: ElementRef })\r\n    set timePeriodEl(timePeriodElement: ElementRef) {\r\n        if (timePeriodElement) {\r\n            const trainingElement = this.trainingItemWrapper?.nativeElement as HTMLDivElement;\r\n            if (trainingElement) {\r\n                this._isSearch$$\r\n                    .pipe(delay(0), takeUntil(this._unsubscribeService))\r\n                    .subscribe(\r\n                        (isSearch) =>\r\n                            (trainingElement.style.maxHeight = `calc(100vh - ${\r\n                                isSearch\r\n                                    ? TrainingItemWrapperHeights.SEARCH_HEIGHT\r\n                                    : TrainingItemWrapperHeights.WEEK_HEIGHT\r\n                            }px)`),\r\n                    );\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor(\r\n        private readonly _pastTrainingsService: PastTrainingsService,\r\n        private readonly _pastTrainingsStoreService: PastTrainingsStoreService,\r\n        private readonly _unsubscribeService: UnsubscribeService,\r\n        private readonly _translateService: TranslateService,\r\n        private readonly _sharedStoreService: SharedStoreService,\r\n        private readonly _preferencesService: PreferencesService,\r\n        private readonly _preferencesStoreService: PreferencesStoreService,\r\n        private readonly _changeDetectorRef: ChangeDetectorRef,\r\n        private readonly _route: ActivatedRoute,\r\n        private readonly _datePipe: DatePipe,\r\n        private readonly _router: Router,\r\n        private readonly _navController: NavController,\r\n    ) {\r\n        this._route.queryParams\r\n            .pipe(takeUntil(this._unsubscribeService))\r\n            .subscribe((params) => (this.currentQueryParams = params));\r\n\r\n        this._sharedStoreService.deletedTraining$$\r\n            .pipe(takeUntil(this._unsubscribeService))\r\n            .subscribe((response: StreamData<Paginator<PastTrainings>>) => {\r\n                this.pastTrainings$ = of(response).pipe(mapStreamData());\r\n                this._changeDetectorRef.markForCheck();\r\n            });\r\n    }\r\n\r\n    get dateFormat(): string {\r\n        return TEMPLATE_DATE_FORMAT;\r\n    }\r\n\r\n    getDayTranslation$(dayName: string): Observable<string> {\r\n        if (dayName) {\r\n            return this._translateService\r\n                .stream(dayName)\r\n                .pipe(map((value) => value?.toLowerCase()));\r\n        }\r\n        return of('');\r\n    }\r\n\r\n    async ionViewWillEnter(): Promise<void> {\r\n        await Storage.remove({ key: StorageItems.QUERY_PARAMS });\r\n        this.initView();\r\n    }\r\n\r\n    async ionViewWillLeave(): Promise<void> {\r\n        await this._pastTrainingsStoreService.emitPastTrainingsQueryParams(this.currentQueryParams);\r\n    }\r\n\r\n    ngAfterViewChecked(): void {\r\n        this._pastTrainingsStoreService.pastTrainingsWrapperScroll$\r\n            .pipe(take(1))\r\n            .subscribe((scrollTop) => {\r\n                if (this.trainingItemWrapper) {\r\n                    (this.trainingItemWrapper.nativeElement as HTMLDivElement).scrollTop =\r\n                        scrollTop;\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._isSearch$$.complete();\r\n        this._isPreviousPage$$.complete();\r\n        this._isNextPage$$.complete();\r\n    }\r\n\r\n    onFiltersSearchEmitted(isSearch: boolean): void {\r\n        this._isSearch$$.next(isSearch);\r\n    }\r\n\r\n    searchEmitted(searchText: string): void {\r\n        this._isSearch$$.next(!!searchText);\r\n        this.page = INITIAL_PAGE;\r\n        this.pastTrainings$ = of(searchText).pipe(\r\n            switchMap((searchText: string) => {\r\n                this.searchText = searchText;\r\n                return this._pastTrainingsService\r\n                    .searchPastTrainings(this.searchText, this.size, this.page)\r\n                    .pipe(\r\n                        tap(async (response: StreamData<Paginator<PastTrainings>>) => {\r\n                            this.showByDayStartDate = new Date();\r\n                            this.updatePageAndSize(response);\r\n                            await this._router.navigate([], {\r\n                                relativeTo: this._route,\r\n                                queryParams: this.handleQueryParams(\r\n                                    response,\r\n                                    searchText?.trim() ?? undefined,\r\n                                ),\r\n                            });\r\n                            this.handlePaginationArrows(response);\r\n                        }),\r\n                        mapStreamData(),\r\n                    );\r\n            }),\r\n        );\r\n    }\r\n\r\n    onPeriodEmitted($event: PeriodFilterType, mondayDate: Date): void {\r\n        if (mondayDate) {\r\n            this.periodFilter = $event;\r\n            if (this.periodFilter === 'day') {\r\n                this.showByDayStartDate = mondayDate;\r\n                this.dayActivated = {\r\n                    Date: this.showByDayStartDate,\r\n                    DayNumber: getCurrentDayIndex(this.showByDayStartDate),\r\n                };\r\n            }\r\n            const currentPreferences = this._preferencesStoreService.getPreferences();\r\n            this._preferencesService\r\n                .setPreferences(\r\n                    {\r\n                        ...currentPreferences,\r\n                        showByPeriod: this.periodFilter,\r\n                    },\r\n                    'showByPeriod',\r\n                )\r\n                .pipe(take(1))\r\n                .subscribe((_) => {\r\n                    this.pastTrainings$ = this._pastTrainingsService\r\n                        .getPastTrainings(\r\n                            startOfWeek(mondayDate, { weekStartsOn: 1 }),\r\n                            this.periodFilter,\r\n                        )\r\n                        .pipe(\r\n                            tap(async (response) => {\r\n                                await this._router.navigate([], {\r\n                                    relativeTo: this._route,\r\n                                    queryParams: this.handleQueryParams(response),\r\n                                });\r\n                            }),\r\n                            mapStreamData(),\r\n                        );\r\n                    this._changeDetectorRef.markForCheck();\r\n                });\r\n        }\r\n    }\r\n\r\n    onDayActivated($event: DayActivatedType): void {\r\n        if (!this._isSearch$$.getValue()) {\r\n            this.dayActivated = $event;\r\n            this.pastTrainings$ = this._pastTrainingsService\r\n                .getPastTrainings($event.Date, 'day')\r\n                .pipe(\r\n                    tap(async (response) => {\r\n                        await this._router.navigate([], {\r\n                            relativeTo: this._route,\r\n                            queryParams: this.handleQueryParams(response),\r\n                        });\r\n                    }),\r\n                    mapStreamData(),\r\n                );\r\n        }\r\n    }\r\n\r\n    onPaginatorChanged($event: PaginatorChanged, dayFilterDate: Date): void {\r\n        if ($event?.IsSearch) {\r\n            this.pastTrainings$ = this._pastTrainingsService\r\n                .searchPastTrainings(\r\n                    this.searchText?.trim()?.toLowerCase() ?? '',\r\n                    $event.Size,\r\n                    $event.Page,\r\n                )\r\n                .pipe(\r\n                    tap(async (response: StreamData<Paginator<PastTrainings>>) => {\r\n                        this.updatePageAndSize(response);\r\n                        await this._router.navigate([], {\r\n                            relativeTo: this._route,\r\n                            queryParams: this.handleQueryParams(response, this.searchText),\r\n                        });\r\n                        this.handlePaginationArrows(response);\r\n                    }),\r\n                    mapStreamData(),\r\n                );\r\n        } else {\r\n            if (this.periodFilter === 'day') {\r\n                this.showByDayStartDate = this.calculateDate(\r\n                    $event.PageType,\r\n                    undefined,\r\n                    $event.EarliestTrainingDate,\r\n                    dayFilterDate,\r\n                );\r\n                this.dayActivated = {\r\n                    Date: this.showByDayStartDate,\r\n                    DayNumber: getCurrentDayIndex(this.showByDayStartDate),\r\n                };\r\n            }\r\n            this.pastTrainings$ = this._pastTrainingsService\r\n                .getPastTrainings(\r\n                    this.periodFilter === 'week'\r\n                        ? this.onPaginatorChangedFilterHandler(this.periodFilter, $event)\r\n                        : this.onPaginatorChangedFilterHandler(\r\n                              this.periodFilter,\r\n                              undefined,\r\n                              this.showByDayStartDate,\r\n                          ),\r\n                    this.periodFilter,\r\n                )\r\n                .pipe(\r\n                    tap(async (response: StreamData<Paginator<PastTrainings>>) => {\r\n                        this.handlePaginationArrows(response);\r\n                        await this._router.navigate([], {\r\n                            relativeTo: this._route,\r\n                            queryParams: this.handleQueryParams(response),\r\n                        });\r\n                    }),\r\n                    mapStreamData(),\r\n                );\r\n        }\r\n    }\r\n\r\n    async onTrainingItemClicked(): Promise<void> {\r\n        if (this.trainingItemWrapper) {\r\n            const scrollTop = (this.trainingItemWrapper.nativeElement as HTMLDivElement).scrollTop;\r\n            await this._pastTrainingsStoreService.emitWrapperScroll(scrollTop);\r\n        }\r\n    }\r\n\r\n    async logNewTraining(): Promise<void> {\r\n        const dayClickedDate = add(this.dayActivated.Date, { hours: 7 });\r\n        this._sharedStoreService.emitDayClicked(dayClickedDate.toISOString());\r\n        await this._navController.navigateForward('/training/new-training');\r\n    }\r\n\r\n    //TODO: align with 'ShowByDay' feature\r\n    tryAgain(): void {\r\n        this.initView();\r\n    }\r\n\r\n    setTimePeriod$(results: PastTrainings): Observable<string> {\r\n        const dateInterval = results.Dates;\r\n        if (dateInterval?.StartDate && dateInterval?.EndDate) {\r\n            const isDay = isSameDay(dateInterval.StartDate, dateInterval.EndDate);\r\n            if (isDay) {\r\n                return this._translateService\r\n                    .stream(results.DayName)\r\n                    .pipe(\r\n                        map((value: string) =>\r\n                            this.generateHeaderTitle(value, dateInterval.StartDate),\r\n                        ),\r\n                    );\r\n            }\r\n            const isWeek = isSameWeek(dateInterval.StartDate, dateInterval.EndDate, {\r\n                weekStartsOn: 1,\r\n            });\r\n            if (isWeek) {\r\n                return this._translateService\r\n                    .stream('common.week')\r\n                    .pipe(\r\n                        map((value: string) =>\r\n                            this.generateHeaderTitle(\r\n                                value,\r\n                                dateInterval.StartDate,\r\n                                dateInterval.EndDate,\r\n                            ),\r\n                        ),\r\n                    );\r\n            }\r\n            const isMonth = isSameMonth(dateInterval.StartDate, dateInterval.EndDate);\r\n            if (isMonth) {\r\n                const month = getMonth(dateInterval.StartDate);\r\n                return this._translateService\r\n                    .stream(`common.months.${ALL_MONTHS[month]}`)\r\n                    .pipe(\r\n                        map((value: string) =>\r\n                            this.generateHeaderTitle(\r\n                                value,\r\n                                dateInterval.StartDate,\r\n                                dateInterval.EndDate,\r\n                            ),\r\n                        ),\r\n                    );\r\n            }\r\n            return this._translateService\r\n                .stream('common.period')\r\n                .pipe(\r\n                    map((value: string) =>\r\n                        this.generateHeaderTitle(\r\n                            value,\r\n                            dateInterval.StartDate,\r\n                            dateInterval.EndDate,\r\n                        ),\r\n                    ),\r\n                );\r\n        } else {\r\n            return of('');\r\n        }\r\n    }\r\n\r\n    private initView(): void {\r\n        this.page = this._route.snapshot.queryParamMap?.get('page')\r\n            ? +this._route.snapshot.queryParamMap.get('page')\r\n            : INITIAL_PAGE;\r\n        this.size = this._route.snapshot.queryParamMap?.get('size')\r\n            ? +this._route.snapshot.queryParamMap.get('size')\r\n            : DEFAULT_SIZE;\r\n        this.searchText = this._route.snapshot.queryParamMap?.get('search');\r\n        if (this.searchText) {\r\n            this.pastTrainings$ = this._pastTrainingsService\r\n                .searchPastTrainings(this.searchText.trim().toLowerCase(), this.size, this.page)\r\n                .pipe(\r\n                    tap((response: StreamData<Paginator<PastTrainings>>) =>\r\n                        this.handlePaginationArrows(response),\r\n                    ),\r\n                    mapStreamData(),\r\n                );\r\n        } else {\r\n            this.periodFilter = this._route.snapshot.queryParamMap?.get(\r\n                'showBy',\r\n            ) as PeriodFilterType;\r\n            if (this.periodFilter === 'day') {\r\n                this.showByDayStartDate = this.getDateTimeQueryParams();\r\n                this.dayActivated = {\r\n                    Date: this.showByDayStartDate,\r\n                    DayNumber: getCurrentDayIndex(this.showByDayStartDate),\r\n                };\r\n            }\r\n            this.pastTrainings$ = this._pastTrainingsService\r\n                .getPastTrainings(this.getDateTimeQueryParams(), this.periodFilter ?? 'week')\r\n                .pipe(\r\n                    tap((response: StreamData<Paginator<PastTrainings>>) =>\r\n                        this.handlePaginationArrows(response),\r\n                    ),\r\n                    mapStreamData(),\r\n                );\r\n        }\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    private onPaginatorChangedFilterHandler(\r\n        periodFilterType: PeriodFilterType,\r\n        $weekEvent?: PaginatorChanged,\r\n        startOfCurrentWeek?: Date,\r\n    ): Date {\r\n        switch (periodFilterType) {\r\n            case 'week': {\r\n                return this.calculateDate(\r\n                    $weekEvent.PageType,\r\n                    $weekEvent.DateInterval,\r\n                    $weekEvent.EarliestTrainingDate,\r\n                );\r\n            }\r\n            case 'day': {\r\n                return addDays(\r\n                    startOfWeek(startOfCurrentWeek, { weekStartsOn: 1 }),\r\n                    this.dayActivated.DayNumber,\r\n                );\r\n            }\r\n            default:\r\n                isNeverCheck(periodFilterType);\r\n        }\r\n    }\r\n\r\n    private updatePageAndSize(response: StreamData<Paginator<PastTrainings>>): void {\r\n        this.page = response?.Value?.CurrentPage ?? INITIAL_PAGE;\r\n        this.size = response?.Value?.Size ?? DEFAULT_SIZE;\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    private calculateDate(\r\n        page: Page,\r\n        dateInterval: DateInterval,\r\n        earliestTrainingDate: string,\r\n        startingDate?: Date,\r\n    ): Date {\r\n        switch (page) {\r\n            case 'Previous': {\r\n                return subDays(startingDate ? startingDate : dateInterval.StartDate, 7);\r\n            }\r\n            case 'Next': {\r\n                return addDays(startingDate ? startingDate : dateInterval.StartDate, 7);\r\n            }\r\n            case 'First': {\r\n                return this.periodFilter === 'week'\r\n                    ? new Date(earliestTrainingDate)\r\n                    : calculateFirstWeekDay(earliestTrainingDate, startingDate);\r\n            }\r\n            case 'Last': {\r\n                return this.periodFilter === 'week'\r\n                    ? new Date()\r\n                    : calculateLastWeekDay(startingDate);\r\n            }\r\n            default:\r\n                return isNeverCheck(page);\r\n        }\r\n    }\r\n\r\n    private handleQueryParams(\r\n        trainingData: StreamData<Paginator<PastTrainings>>,\r\n        searchValue?: string,\r\n    ): PastTrainingsQueryParams {\r\n        return {\r\n            startDate: this.handleSpecificQueryParam(searchValue, trainingData, 'startDate'),\r\n            endDate: this.handleSpecificQueryParam(searchValue, trainingData, 'endDate'),\r\n            search: searchValue ?? undefined,\r\n            page: this.handleSpecificQueryParam(searchValue, trainingData, 'page'),\r\n            size: this.handleSpecificQueryParam(searchValue, trainingData, 'size'),\r\n            showBy: !searchValue ? this.periodFilter : undefined,\r\n        } as PastTrainingsQueryParams;\r\n    }\r\n\r\n    private handleSpecificQueryParam(\r\n        searchValue: string | undefined,\r\n        trainingData: StreamData<Paginator<PastTrainings>>,\r\n        queryParam: keyof PastTrainingsQueryParams,\r\n    ): string | void {\r\n        if (searchValue) {\r\n            if (trainingData?.Value?.TotalCount > 0) {\r\n                if (queryParam === 'page') {\r\n                    return this.page.toString();\r\n                } else if (queryParam === 'startDate') {\r\n                    return format(\r\n                        trainingData?.Value?.Results?.Dates?.StartDate ?? new Date(),\r\n                        QUERY_PARAMS_DATE_FORMAT,\r\n                    );\r\n                } else if (queryParam === 'endDate') {\r\n                    return format(\r\n                        trainingData?.Value?.Results?.Dates?.EndDate ?? new Date(),\r\n                        QUERY_PARAMS_DATE_FORMAT,\r\n                    );\r\n                } else {\r\n                    return this.size.toString();\r\n                }\r\n            } else {\r\n                return undefined;\r\n            }\r\n        } else {\r\n            if (queryParam === 'startDate') {\r\n                return format(\r\n                    trainingData?.Value?.Results?.Dates?.StartDate ?? new Date(),\r\n                    QUERY_PARAMS_DATE_FORMAT,\r\n                );\r\n            } else if (queryParam === 'endDate') {\r\n                return format(\r\n                    trainingData?.Value?.Results?.Dates?.EndDate ?? new Date(),\r\n                    QUERY_PARAMS_DATE_FORMAT,\r\n                );\r\n            } else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handlePaginationArrows(response: StreamData<Paginator<PastTrainings>>): void {\r\n        if (response.Value.Results.EarliestTrainingDate) {\r\n            this._isPreviousPage$$.next(response.Value.Results.IsPreviousWeek ?? false);\r\n            this._isNextPage$$.next(response.Value.Results.IsNextWeek ?? false);\r\n        } else {\r\n            this._isPreviousPage$$.next(!!response.Value.Previous);\r\n            this._isNextPage$$.next(!!response.Value.Next);\r\n        }\r\n    }\r\n\r\n    private getDateTimeQueryParams(): Date {\r\n        const splittedDate = this._route.snapshot.queryParams?.startDate?.split('-') ?? [];\r\n        const utc =\r\n            splittedDate.length > 0\r\n                ? new Date(`${splittedDate[2]}-${splittedDate[1]}-${splittedDate[0]}`).toUTCString()\r\n                : new Date().toUTCString();\r\n        return startOfDay(new Date(utc));\r\n    }\r\n\r\n    private generateHeaderTitle(period: string, startDate: Date, endDate?: Date): string {\r\n        if (endDate) {\r\n            return `\r\n                <strong class=\"header-title--key\">${period}</strong>\r\n                <span class=\"header-title--value\">(${this._datePipe.transform(\r\n                    startDate,\r\n                    this.dateFormat,\r\n                )} - ${this._datePipe.transform(endDate, this.dateFormat)})</span>`;\r\n        } else {\r\n            return `<strong class=\"header-title--key\">${period}</strong>\r\n                <span class=\"header-title--value\">(${this._datePipe.transform(\r\n                    startDate,\r\n                    this.dateFormat,\r\n                )})</span`;\r\n        }\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    Output,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { addDays, startOfDay, startOfWeek } from 'date-fns';\r\nimport { DayActivatedType } from '../../../../models/training/past-trainings/day-activated.type';\r\nimport { getCurrentDayIndex } from '../../../../helpers/training/show-by-day.helper';\r\n\r\n@Component({\r\n    selector: 'bl-show-by-day',\r\n    templateUrl: './show-by-day.component.html',\r\n    styleUrls: ['./show-by-day.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShowByDayComponent implements OnChanges {\r\n    @Input()\r\n    startDate = startOfDay(new Date());\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Output()\r\n    readonly dayActivated: EventEmitter<DayActivatedType> = new EventEmitter<DayActivatedType>();\r\n\r\n    readonly activeDay$$: BehaviorSubject<number> = new BehaviorSubject(1);\r\n    readonly daysOfWeek$: Observable<string[]> = this.translateService\r\n        .stream('weekdays')\r\n        .pipe(map((value) => Object.values(value)));\r\n\r\n    constructor(private readonly translateService: TranslateService) {}\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        const startDate = changes?.startDate?.currentValue as Date;\r\n        if (startDate) {\r\n            this.activeDay$$.next(getCurrentDayIndex(startDate) + 1);\r\n        }\r\n    }\r\n\r\n    onDayActivated(index: number): void {\r\n        const dayNumber = index + 1;\r\n        this.activeDay$$.next(dayNumber);\r\n\r\n        const newDate = addDays(startOfWeek(this.startDate, { weekStartsOn: 1 }), index);\r\n        this.dayActivated.next({ Date: newDate, DayNumber: index });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { NewTraining } from '../../../../../models/training/new-training/new-training.model';\r\nimport { DeleteTrainingActionService } from '../../../../../services/api/training/delete-training-action.service';\r\nimport { TrainingItemActions } from '../../../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport { DeleteTrainingActionData } from '../../../../../models/training/past-trainings/training-actions/training-actions.model';\r\n\r\n@Component({\r\n    selector: 'bl-training-item-actions',\r\n    templateUrl: './training-item-actions.component.html',\r\n    styleUrls: ['./training-item-actions.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TrainingItemActionsComponent {\r\n    @Input()\r\n    action: TrainingItemActions;\r\n\r\n    @Input()\r\n    training: NewTraining;\r\n\r\n    @Input()\r\n    dayIndex: number;\r\n\r\n    @Input()\r\n    weekDays: string[];\r\n\r\n    @Input()\r\n    timeCreated: string;\r\n\r\n    constructor(private readonly deleteTrainingActionService: DeleteTrainingActionService) {}\r\n\r\n    async performAction(action: TrainingItemActions): Promise<void> {\r\n        const data: DeleteTrainingActionData = {\r\n            weekDays: this.weekDays,\r\n            timeCreated: this.timeCreated,\r\n            dayIndex: this.dayIndex,\r\n            training: this.training,\r\n        };\r\n        switch (action) {\r\n            case 'delete':\r\n                await this.deleteTrainingActionService.perform(data);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { format } from 'date-fns';\r\nimport { take } from 'rxjs/operators';\r\nimport { Storage } from '@capacitor/storage';\r\nimport { StorageItems } from '../../../../constants/enums/storage-items.enum';\r\nimport { NewTraining } from '../../../../models/training/new-training/new-training.model';\r\nimport { PastTrainingsQueryParams } from '../../../../models/training/past-trainings/past-trainings.model';\r\nimport { TrainingItemActions } from '../../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport { PastTrainingsStoreService } from '../../../../services/store/training/past-trainings-store.service';\r\n\r\n@Component({\r\n    selector: 'bl-training-item',\r\n    templateUrl: './training-item.component.html',\r\n    styleUrls: ['./training-item.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TrainingItemComponent implements OnInit {\r\n    readonly weekDays: string[] = [\r\n        'sunday',\r\n        'monday',\r\n        'tuesday',\r\n        'wednesday',\r\n        'thursday',\r\n        'friday',\r\n        'saturday',\r\n    ];\r\n\r\n    readonly actions: TrainingItemActions[] = ['delete', 'more'];\r\n\r\n    timeCreated: string;\r\n    dayIndex: number;\r\n\r\n    @Input()\r\n    training: NewTraining;\r\n\r\n    @Output()\r\n    readonly trainingItemClicked: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private readonly _pastTrainingsStoreService: PastTrainingsStoreService,\r\n        private readonly _route: ActivatedRoute,\r\n        private readonly _router: Router,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.timeCreated = format(new Date(this.training.trainingDate), 'HH:mm');\r\n        this.dayIndex = new Date(this.training.trainingDate).getDay();\r\n    }\r\n\r\n    async trainingClicked(): Promise<void> {\r\n        this._route.queryParams.pipe(take(1)).subscribe(async (params: Params) => {\r\n            this.trainingItemClicked.emit();\r\n            await this._pastTrainingsStoreService.emitPastTrainingsQueryParams(\r\n                params as PastTrainingsQueryParams,\r\n            );\r\n            await Storage.set({\r\n                key: StorageItems.QUERY_PARAMS,\r\n                value: JSON.stringify(params as PastTrainingsQueryParams),\r\n            });\r\n            await this._router.navigate(['/training/new-training', this.training._id]);\r\n        });\r\n    }\r\n}\r\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n * \n * @example\n * // Are 4 September and 4 October in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n * \n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week (and month and year)\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n * \n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * var result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both\n\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, undefined, i));\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n"],"names":["ChangeDetectionStrategy","ChangeDetectorRef","Component","ViewChild","ViewChildren","FormControl","FormGroup","Validators","ActivatedRoute","Router","IonContent","ModalController","format","parseISO","BehaviorSubject","from","of","concatMap","delay","distinctUntilChanged","filter","finalize","map","switchMap","take","takeUntil","tap","Storage","TranslateService","SharedStoreService","PastTrainingsService","NewTrainingHandler","mapStreamData","DialogRoles","UnsubscribeService","DateTimePickerComponent","NewTrainingStoreService","NewTrainingService","AuthStoreService","EMPTY_TRAINING","createEmptyExercise","StorageItems","PreferencesStoreService","PastTrainingsStoreService","MESSAGE_DURATION","ToastControllerService","BODYWEIGHT_SET_CATEGORIES","ExercisesStoreService","SingleExerciseComponent","ReorderExercisesComponent","NewTrainingComponent","constructor","_newTrainingStoreService","_newTrainingService","_pastTrainingService","_sharedStoreService","_authStoreService","_unsubscribeService","_preferencesStoreService","_pastTrainingsStoreService","_exercisesStoreService","_toastControllerService","_translateService","_route","_router","_modalController","_changeDetectorRef","_isSubmitted$","asObservable","_isApiLoading$","undefined","preferencesChanged$","isAuth$","editingTraining$","trainingState$","pipe","training","exercises","length","every","exercise","exerciseData","name","sets","currentTrainingState","isBodyweightCategory","some","bodyweightSetCategories","category","selectedSetCategories","includes","newTrainingForm","controls","bodyweight","setValidators","initialBodyweightValidators","required","updateValueAndValidity","pattern","min","max","validators","trainingDate","Date","toISOString","nonNullable","ionViewWillEnter","allExercisesChanged","trainingStream$","params","allExercisesState$","value","getExercises","exercisesData","_","editMode","getPastTraining","response","editTrainingData","Value","updateTrainingState","newTrainingState","userId","emitEditingTraining","_formInit","markForCheck","ionViewDidEnter","ionContent","setTimeout","scrollToBottom","ionViewDidLeave","ngOnDestroy","completeDayClicked","complete","onSubmit","next","valid","_isExerciseFormValid","trainingData","updateTraining","_id","addTraining","subscribe","displayToast","message","instant","Message","duration","GENERAL","color","openReorderModal","modal","create","component","keyboardClose","present","onDidDismiss","role","REORDER_EXERCISES","data","streamData","IsLoading","IsError","openDateTimePicker","componentProps","dateValue","cssClass","mode","SELECT_DATE","updateTrainingDate","patchValue","_setFormattedDate","goToPastTraining","pastTrainingsQueryParams$","navigate","queryParams","remove","key","QUERY_PARAMS","onBodyweightChange","updateBodyweight","Boolean","onExerciseAdded","event","singleExerciseComponents","last","exercisePickerEls","open","tryAgain","goToTop","scrollToTop","getCurrentTrainingState","dayClickedDate","getDayClickedDate","_fillBodyweight","_fillTrainingDate","date","time","split","formattedTodayDate","toString","fillBodyweight","isFormValid","forEach","exerciseForm","form","invalid","areSetsValid","args","read","selector","template","changeDetection","OnPush","providers","newTrainingStoreService","modalController","doReorder","ev","exerciseFrom","reorderedTrainingState","find","_exercise","index","detail","remainingExercises","reorderedExercises","slice","to","reorderExercises","dismiss","onCancel","CANCEL","Input","ChangeSetCategoryComponent","onChange","setCategory","CHANGE_SET_CATEGORY","Output","EventEmitter","isNeverCheck","convertWeightUnit","SetComponent","weightUnit","newWeightUnit","_weightUnit","activeSetCategory","_activeSetCategory","_focusSetConstituent","ngOnChanges","changes","firstChange","currentValue","currentWeightValue","weight","updateSetCategory","setCategoryModalOpened","emit","onChangeSets","reps","setData","exerciseName","exerciseControl","_isSetConstituentValid","setChanged","deleteSet","setDeleted","onSetConstituentKeydown","setConstituent","setConstituentKeydownEmitted","weightElement","setFocus","repsElement","FormArray","EMPTY","getControlValueAccessor","DEFAULT_WEIGHT_UNIT","SetsComponent","ngOnInit","currentWeightUnit","getPreferences","currentPreferences$","preferences","selectedSetCategoriesControl","valueChanges","setCategories","removeAt","_constructFormBasedOnSetCategory","indexExercise","restartSets","writeValue","set","addSet","registerOnChange","fn","registerOnTouched","onTouched","onSetChanged","setIndex","serviceData","setNumber","total","_calculateTotal","setsChanged","onSetConstituentKeydownEmit","currentSetCmpData","setCmps","toArray","previousSetCmpData","onSetDeleted","onUpdateSetCategory","currentSetCategory","availableSetCategoriesControl","canDismiss","updatePrimarySetCategory","selectedCategoriesChanged","setChangedType","group","bodyweightControl","_setWeightValue","editTrainingWeightUnit","_constructSetForm","setControls","_setFormValue","disabled","constructionType","indexSet","Object","assign","push","insert","SetsComponent_1","withLatestFrom","SingleExerciseValidators","_isExercisePicker$","exercisesState$","exerciseState","allExercises","setsCmpRef","checkDuplicateExerciseName","onLangChange","addExercise","onSelectedCategoriesChanged","exerciseIndex","selectedSetCategoriesValue","emitEvent","i","_category","onExerciseNameChange","element","selectedExerciseData","availableExercises","updateExerciseChoices","imageUrl","primaryMuscleGroup","availableSetCategories","errors","markAsTouched","_prepareSet","addNewExercise","_getAlreadyUsedExercises","exerciseAdded","deleteExercise","pushToAvailableExercises","setCmp","weightErrors","repsErrors","alreadyUsedExercises","get","SingleExerciseComponent_1","DatePipe","ElementRef","add","addDays","getMonth","isSameDay","isSameMonth","isSameWeek","startOfDay","startOfWeek","subDays","NavController","ALL_MONTHS","QUERY_PARAMS_DATE_FORMAT","TEMPLATE_DATE_FORMAT","PreferencesService","calculateFirstWeekDay","calculateLastWeekDay","getCurrentDayIndex","INITIAL_PAGE","DEFAULT_SIZE","TrainingItemWrapperHeights","PastTrainingsComponent","_pastTrainingsService","_preferencesService","_datePipe","_navController","showByPeriod","DayNumber","_isSearch$$","_isNextPage$$","_isPreviousPage$$","currentQueryParams","deletedTraining$$","pastTrainings$","timePeriodEl","timePeriodElement","trainingElement","trainingItemWrapper","nativeElement","isSearch","style","maxHeight","SEARCH_HEIGHT","WEEK_HEIGHT","dateFormat","getDayTranslation$","dayName","stream","toLowerCase","initView","ionViewWillLeave","emitPastTrainingsQueryParams","ngAfterViewChecked","pastTrainingsWrapperScroll$","scrollTop","onFiltersSearchEmitted","searchEmitted","searchText","page","searchPastTrainings","size","showByDayStartDate","updatePageAndSize","relativeTo","handleQueryParams","trim","handlePaginationArrows","onPeriodEmitted","$event","mondayDate","periodFilter","dayActivated","currentPreferences","setPreferences","getPastTrainings","weekStartsOn","onDayActivated","getValue","onPaginatorChanged","dayFilterDate","IsSearch","Size","Page","calculateDate","PageType","EarliestTrainingDate","onPaginatorChangedFilterHandler","onTrainingItemClicked","emitWrapperScroll","logNewTraining","hours","emitDayClicked","navigateForward","setTimePeriod$","results","dateInterval","Dates","StartDate","EndDate","isDay","DayName","generateHeaderTitle","isWeek","isMonth","month","snapshot","queryParamMap","getDateTimeQueryParams","periodFilterType","$weekEvent","startOfCurrentWeek","DateInterval","CurrentPage","earliestTrainingDate","startingDate","searchValue","startDate","handleSpecificQueryParam","endDate","search","showBy","queryParam","TotalCount","Results","IsPreviousWeek","IsNextWeek","Previous","Next","splittedDate","utc","toUTCString","period","transform","DeleteTrainingActionService","TrainingItemActionsComponent","deleteTrainingActionService","performAction","action","weekDays","timeCreated","dayIndex","perform","TrainingItemComponent","getDay","trainingClicked","trainingItemClicked","JSON","stringify","toInteger","toDate","requiredArgs","dirtyDate","dirtyAmount","arguments","amount","isNaN","NaN","setDate","getDate","addMonths","years","months","weeks","days","minutes","seconds","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","getTime","daysInWeek","maxTime","Math","pow","millisecondsInMinute","millisecondsInHour","millisecondsInSecond","minTime","minutesInHour","monthsInQuarter","monthsInYear","quartersInYear","secondsInHour","secondsInMinute","getTimezoneOffsetInMilliseconds","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","compareLocalAsc","dateLeft","dateRight","diff","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","differenceInDays","sign","difference","abs","isLastDayNotFull","Number","result","dateLeftStartOfDay","dateRightStartOfDay","dirtyOptions","dateLeftStartOfWeek","dateRightStartOfWeek","argument","options","additionalDigits","RangeError","prototype","call","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","year","timestamp","offset","parseTime","timezone","parseTimezone","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","patterns","dateTimeDelimiter","timeZoneDelimiter","dateRegex","timeRegex","timezoneRegex","dateString","array","timeString","test","substr","token","exec","replace","regex","RegExp","captures","match","parseInt","century","isWeekDate","dayOfYear","parseDateUnit","day","week","dayOfWeek","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","setUTCFullYear","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","isoWeekYear","fourthOfJanuaryDay","getUTCDay","setUTCDate","daysInMonths","isLeapYearIndex","_year","_hours","Subscriber","async","debounceTime","dueTime","scheduler","source","lift","DebounceTimeOperator","subscriber","DebounceTimeSubscriber","destination","debouncedSubscription","lastValue","hasValue","_next","clearDebounce","schedule","dispatchNext","_complete","debouncedNext","unsubscribe","isDate","Notification","absoluteDelay","delayFor","now","DelayOperator","DelaySubscriber","queue","active","errored","dispatch","state","shift","notification","observe","_schedule","scheduleNotification","DelayMessage","createNext","_error","err","error","createComplete","OuterSubscriber","subscribeToResult","project","pop","observables","WithLatestFromOperator","WithLatestFromSubscriber","toRespond","len","values","Array","observable","notifyNext","_outerValue","innerValue","outerIndex","found","indexOf","splice","notifyComplete","_tryProject","apply"],"sourceRoot":"webpack:///","x_google_ignoreList":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]}