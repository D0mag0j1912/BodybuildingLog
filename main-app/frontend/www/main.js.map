{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/constants/shared/default-weight-format.const.ts","./src/app/constants/shared/ion-focus-durations.const.ts","./src/app/constants/shared/message-duration.const.ts","./src/app/constants/shared/paginator.const.ts","./src/app/constants/training/new-training.const.ts","./src/app/constants/training/past-trainings-date-format.const.ts","./src/app/directives/autofocus/autofocus.directive.ts","./src/app/directives/autofocus/autofocus.module.ts","./src/app/directives/pagination/pagination.directive.ts","./src/app/directives/skeleton-loader/skeleton-loader.directive.ts","./src/app/directives/skeleton-loader/skeleton-loader.module.ts","./src/app/guards/auth.guard.ts","./src/app/helpers/control-value-accessor.helper.ts","./src/app/helpers/is-never-check.helper.ts","./src/app/helpers/training/past-trainings/map-past-trainings-dates.helper.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/interceptors/error.interceptor.ts","./src/app/models/common/interfaces/common.model.ts","./src/app/models/common/types/modal-roles.type.ts","./src/app/models/training/shared/set.model.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/navigation.module.ts","./src/app/modules/shared.module.ts","./src/app/pipes/pipes.module.ts","./src/app/pipes/training/new-training/new-training.pipe.ts","./src/app/pipes/training/new-training/round-total-weight/round-total-weight.module.ts","./src/app/pipes/training/new-training/round-total-weight/round-total-weight.pipe.ts","./src/app/pipes/training/past-trainings/map-training-actions.pipe.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.module.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.pipe.ts","./src/app/services/api/auth/auth.service.ts","./src/app/services/api/auth/login.service.ts","./src/app/services/api/auth/signup.service.ts","./src/app/services/api/training/delete-training-action.service.ts","./src/app/services/api/training/training.service.ts","./src/app/services/errors/sentry.service.ts","./src/app/services/shared/loading-controller.service.ts","./src/app/services/shared/not-found-resolver.service.ts","./src/app/services/shared/preferences.service.ts","./src/app/services/shared/toast-controller.service.ts","./src/app/services/shared/unsubscribe.service.ts","./src/app/services/store/auth/auth-store.service.ts","./src/app/services/store/shared/preferences-state.service.ts","./src/app/services/store/shared/shared-store.service.ts","./src/app/services/store/training/training-store.service.ts","./src/app/validators/auth/auth.validators.ts","./src/app/validators/shared/common.validators.ts","./src/app/validators/training/set.validators.ts","./src/app/validators/training/single-exercise.validators.ts","./src/app/views/auth/login/login.component.ts","./src/app/views/auth/signup/signup.component.ts","./src/app/views/navigation/side-nav/languages/languages.component.ts","./src/app/views/navigation/side-nav/side-nav.component.ts","./src/app/views/shared/datetime-picker/datetime-picker.component.ts","./src/app/views/shared/delete-exercise-dialog/delete-exercise-dialog.component.ts","./src/app/views/shared/not-found/not-found.component.ts","./src/app/views/shared/pagination/pagination.component.ts","./src/app/views/shared/skeleton-loader/skeleton-loader.component.ts","./src/app/views/shared/training/sets/sets.component.ts","./src/app/views/shared/training/single-exercise/single-exercise.component.ts","./src/app/views/shared/training/total-weight/total-weight.component.ts","./src/app/views/shared/training/training-actions/delete-training-action/delete-training-action.component.ts","./src/app/views/shared/training/training-actions/more-training-action/more-training-action.component.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm|lazy|/^/.*/.entry/.js$/|include: /.entry/.js$/|exclude: /.system/.entry/.js$/|groupOptions: {}|namespace object"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotFoundResolverService } from './services/shared/not-found-resolver.service';\r\nimport { NotFoundComponent } from './views/shared/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '/auth/login',\r\n        pathMatch: 'full',\r\n    },\r\n    {\r\n        path: 'auth',\r\n        loadChildren: async () => import('./modules/auth/auth.module').then(module => module.AuthModule),\r\n    },\r\n    {\r\n        path: 'training',\r\n        loadChildren: async () => import('./modules/training/training.module').then(module => module.TrainingModule),\r\n        canLoad: [AuthGuard],\r\n    },\r\n    {\r\n        path: 'not-found',\r\n        component: NotFoundComponent,\r\n        resolve: [NotFoundResolverService],\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '/not-found',\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EMPTY } from 'rxjs';\r\nimport { switchMap, take, takeUntil, tap } from 'rxjs/operators';\r\nimport { PreferencesService } from './services/shared/preferences.service';\r\nimport { UnsubscribeService } from './services/shared/unsubscribe.service';\r\nimport { AuthStoreService } from './services/store/auth/auth-store.service';\r\nimport { PreferencesStoreService } from './services/store/shared/preferences-state.service';\r\nimport { SharedStoreService } from './services/store/shared/shared-store.service';\r\nimport { TrainingStoreService } from './services/store/training/training-store.service';\r\n\r\n@Component({\r\n    selector: 'bl-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    constructor(\r\n        private readonly authStoreService: AuthStoreService,\r\n        private readonly trainingStoreService: TrainingStoreService,\r\n        private readonly sharedStoreService: SharedStoreService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly preferencesService: PreferencesService,\r\n        private readonly preferencesStoreService: PreferencesStoreService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.authStoreService.autoLogin();\r\n        this.trainingStoreService.keepTrainingState();\r\n        this.sharedStoreService.keepQueryParams();\r\n\r\n        this.translateService.setDefaultLang('en');\r\n        this.authStoreService.loggedUser$\r\n            .pipe(\r\n                take(1),\r\n                switchMap(loggedUser => {\r\n                    if (loggedUser) {\r\n                        return this.preferencesService.getPreferences(loggedUser._id)\r\n                            .pipe(\r\n                                tap(preferences => this.preferencesStoreService.emitPreferences(preferences)),\r\n                                switchMap(preferences => this.translateService.use(preferences.LanguageCode || 'en')),\r\n                            );\r\n                    }\r\n                    else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe();\r\n    }\r\n}\r\n","import { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { init } from '@sentry/angular';\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\r\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\r\nimport { NavigationModule } from './modules/navigation.module';\r\nimport { SentryService } from './services/errors/sentry.service';\r\n\r\ninit({\r\n    dsn: 'https://b4903b17554c4e40bbada176e50e4719@o997027.ingest.sentry.io/5955490',\r\n});\r\n\r\nexport function httpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n    return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        NavigationModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: httpLoaderFactory,\r\n                deps: [HttpClient],\r\n            },\r\n        }),\r\n        IonicModule.forRoot(),\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi: true,\r\n        }, {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ErrorInterceptor,\r\n            multi: true,\r\n        }, {\r\n            provide: ErrorHandler,\r\n            useClass: SentryService,\r\n        },\r\n        {\r\n            provide: RouteReuseStrategy,\r\n            useClass: IonicRouteStrategy,\r\n        },\r\n        HttpClient,\r\n        AuthGuard,\r\n\r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { WeightFormat } from '../../models/types/preferences.type';\r\n\r\nexport const DEFAULT_WEIGHT_FORMAT: WeightFormat = 'kg';\r\n","\r\nexport enum IonFocusDurations {\r\n    LOGIN = 350,\r\n    SIGNUP = 500,\r\n}\r\n","\r\nexport const MESSAGE_DURATION = Object.freeze({\r\n    GENERAL: 3000,\r\n    ERROR: 5000,\r\n} as const);\r\n","\r\nexport const DEFAULT_SIZE = 3;\r\nexport const INITIAL_PAGE = 1;\r\n","import { Exercise } from '../../models/training/exercise.model';\r\nimport { EditNewTrainingData } from '../../models/training/new-training/edit-training.model';\r\nimport { Training } from '../../models/training/new-training/training.model';\r\nimport { SingleExercise } from '../../models/training/shared/single-exercise.model';\r\n\r\nexport const EMPTY_TRAINING_EDIT: EditNewTrainingData = {\r\n    editedDate: null,\r\n    editTraining: null,\r\n};\r\n\r\nexport const EMPTY_TRAINING: Training = {\r\n    exercises: [],\r\n    _id: '',\r\n    bodyweight: null,\r\n    editMode: false,\r\n    userId: null,\r\n};\r\n\r\nexport const createEmptyExercise = (exercises: Exercise[]): SingleExercise =>\r\n    ({\r\n        exerciseData: { name: null },\r\n        sets: [],\r\n        total: null,\r\n        disabledTooltip: true,\r\n        availableExercises: [ ...exercises ],\r\n    });\r\n","\r\nexport const QUERY_PARAMS_DATE_FORMAT = 'dd-MM-yyyy';\r\nexport const TEMPLATE_DATE_FORMAT = 'dd.MM.yyyy';\r\n","import { AfterViewInit, Directive, Input } from '@angular/core';\r\nimport { IonInput } from '@ionic/angular';\r\n\r\n@Directive({ selector: '[ionFocus]' })\r\nexport class AutofocusDirective implements AfterViewInit {\r\n\r\n    @Input('duration')\r\n    duration = 350;\r\n\r\n    private firstTime = true;\r\n\r\n    constructor(\r\n        private readonly ionInput: IonInput,\r\n    ) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.firstTime) {\r\n            setTimeout(() => {\r\n                this.ionInput?.setFocus();\r\n                this.firstTime = false;\r\n            }, this.duration);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AutofocusDirective } from './autofocus.directive';\r\n\r\n@NgModule({\r\n    declarations: [AutofocusDirective],\r\n    exports: [AutofocusDirective],\r\n})\r\nexport class AutofocusModule { }\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({ selector: 'bl-pagination' })\r\nexport class PaginationDirective {\r\n\r\n    constructor(\r\n        readonly elementRef: ElementRef<HTMLElement>,\r\n        readonly renderer2: Renderer2,\r\n    ) {\r\n        this.renderer2.addClass(this.elementRef.nativeElement as HTMLElement, 'bl-pagination');\r\n    }\r\n}\r\n","import { Directive, Input, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { SkeletonLoaderComponent } from '../../views/shared/skeleton-loader/skeleton-loader.component';\r\n\r\n@Directive({ selector: '[skeleton]' })\r\nexport class SkeletonLoaderDirective implements OnChanges {\r\n\r\n    @Input('skeleton')\r\n    isLoading = false;\r\n\r\n    @Input('skeletonRepeat')\r\n    size = 1;\r\n\r\n    @Input('skeletonWidth')\r\n    width: string;\r\n\r\n    @Input('skeletonHeight')\r\n    height: string;\r\n\r\n    @Input('skeletonBorderRadius')\r\n    borderRadius: string;\r\n\r\n    @Input('skeletonMargin')\r\n    margin: string;\r\n\r\n    @Input('skeletonClassName')\r\n    className: string;\r\n\r\n    constructor(\r\n        private readonly _template: TemplateRef<unknown>,\r\n        private readonly _viewContainerRef: ViewContainerRef,\r\n    ) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes?.isLoading) {\r\n            this._viewContainerRef.clear();\r\n\r\n            if (changes?.isLoading?.currentValue) {\r\n                Array.from({ length: this.size }).forEach(_ => {\r\n                    const ref = this._viewContainerRef.createComponent(SkeletonLoaderComponent);\r\n\r\n                    Object.assign(ref.instance, {\r\n                        width: this.width,\r\n                        height: this.height,\r\n                        borderRadius: this.borderRadius,\r\n                        margin: this.margin,\r\n                        className: this.className,\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this._viewContainerRef.createEmbeddedView(this._template);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SkeletonLoaderDirective } from './skeleton-loader.directive';\r\n\r\n@NgModule({\r\n    declarations: [SkeletonLoaderDirective],\r\n    exports: [SkeletonLoaderDirective],\r\n})\r\nexport class SkeletonLoaderModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanLoad, Route, Router, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthStoreService } from '../services/store/auth/auth-store.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanLoad {\r\n\r\n    constructor(\r\n        private readonly authStoreService: AuthStoreService,\r\n        private readonly router: Router,\r\n    ) { }\r\n\r\n    canLoad(_route: Route): Observable<boolean | UrlTree> {\r\n        return this.authStoreService.isAuth$\r\n            .pipe(\r\n                take(1),\r\n                map((isAuth: boolean) => {\r\n                    if (!isAuth) {\r\n                        return this.router.createUrlTree(['/auth/login']);\r\n                    }\r\n                    return true;\r\n                }),\r\n            );\r\n    }\r\n}\r\n","import { forwardRef, InjectionToken, Type } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { SetsComponent } from '../views/shared/training/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../views/shared/training/single-exercise/single-exercise.component';\r\nimport { TotalWeightComponent } from '../views/shared/training/total-weight/total-weight.component';\r\n\r\nexport type Components = SingleExerciseComponent | SetsComponent | TotalWeightComponent;\r\n\r\nexport function getControlValueAccessor(component: Type<Components>): ControlValueAccessorType {\r\n    return {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => component),\r\n        multi: true,\r\n    };\r\n}\r\n\r\ntype ControlValueAccessorType = {\r\n    provide: InjectionToken<readonly ControlValueAccessor[]>;\r\n    useExisting: Type<Components>;\r\n    multi: boolean;\r\n};\r\n","\r\nexport function isNeverCheck(_x: never): never {\r\n    throw new Error('Didn\\'t expect to get here');\r\n}\r\n","import { startOfDay } from 'date-fns';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { DateInterval, PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\n\r\nexport function mapDateInterval(response: StreamData<Paginator<PastTrainings>>): StreamData<Paginator<PastTrainings>> {\r\n    return {\r\n        ...response,\r\n        Value: {\r\n            ...response.Value,\r\n            Results: {\r\n                ...response.Value.Results,\r\n                Dates: {\r\n                    StartDate: response?.Value?.Results?.Dates?.StartDate ? startOfDay(new Date(response.Value?.Results?.Dates?.StartDate)) : undefined,\r\n                    EndDate: response?.Value?.Results?.Dates?.EndDate ? startOfDay(new Date(response.Value?.Results?.Dates?.EndDate)) : undefined,\r\n                } as DateInterval,\r\n            } as PastTrainings,\r\n        } as Paginator<PastTrainings>,\r\n    };\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthStoreService } from '../services/store/auth/auth-store.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private readonly authStoreService: AuthStoreService,\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        const token = this.authStoreService.getToken();\r\n        const authRequest: HttpRequest<unknown> = request.clone({ headers: request.headers.set('authorization', 'Bearer ' + token) });\r\n        return next.handle(authRequest);\r\n    }\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { captureException } from '@sentry/minimal';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { MESSAGE_DURATION } from '../constants/shared/message-duration.const';\r\nimport { ErrorMessage } from '../models/common/interfaces/common.model';\r\nimport { ToastControllerService } from '../services/shared/toast-controller.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private readonly toastControllerService: ToastControllerService,\r\n        private readonly translateService: TranslateService,\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        return next.handle(request)\r\n            .pipe(\r\n                catchError((error: HttpErrorResponse) => {\r\n                    let errorMessage: string;\r\n                    if (error instanceof HttpErrorResponse) {\r\n                        captureException(error);\r\n                        //TODO: fix for Ionic\r\n                        if (!window.navigator.onLine) {\r\n                            errorMessage = this.translateService.instant('common.errors.internet_required');\r\n                        }\r\n                        else {\r\n                            if ((error.error as ErrorMessage).statusCode === 404) {\r\n                                errorMessage = this.translateService.instant('common.errors.unknown_error');\r\n                            }\r\n                            else {\r\n                                if (Array.isArray((error.error as ErrorMessage).message)) {\r\n                                    errorMessage = this.translateService.instant((error.error as ErrorMessage).message[0].substring(\r\n                                        (error.error as ErrorMessage).message[0].indexOf('@') + 1,\r\n                                        (error.error as ErrorMessage).message[0].length,\r\n                                    ));\r\n                                }\r\n                                else {\r\n                                    errorMessage = this.translateService.instant((error.error as ErrorMessage).message);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        errorMessage = this.translateService.instant('common.errors.unknown_error');\r\n                    }\r\n                    void this.toastControllerService.displayToast({\r\n                        message: errorMessage,\r\n                        duration: MESSAGE_DURATION.ERROR,\r\n                        color: 'danger',\r\n                    });\r\n                    return throwError(error);\r\n                }),\r\n            );\r\n    }\r\n}\r\n","\r\nexport interface ErrorMessage {\r\n    readonly message: string;\r\n    readonly statusCode?: number;\r\n}\r\n\r\nexport interface StreamData<T> {\r\n    IsLoading: boolean;\r\n    IsError: boolean;\r\n    Value?: T;\r\n}\r\n\r\nexport enum LocalStorageItems {\r\n    TRAINING_STATE = 'trainingState',\r\n    USER_DATA = 'userData',\r\n    QUERY_PARAMS = 'queryParams',\r\n}\r\n","\r\nexport enum DialogRoles {\r\n    CANCEL = 'CANCEL',\r\n    DELETE_EXERCISE = 'DELETE_EXERCISE',\r\n    DELETE_TRAINING = 'DELETE_TRAINING',\r\n    SELECT_DATE = 'SELECT_DATE',\r\n    REORDER_EXERCISES = 'REORDER_EXERCISES',\r\n}\r\n","\r\nexport interface Set {\r\n    setNumber: number;\r\n    weightLifted: number;\r\n    reps: number;\r\n    _id?: string;\r\n}\r\n\r\nexport interface SetStateChanged {\r\n    indexExercise: number;\r\n    indexSet: number;\r\n    isWeightLiftedValid?: boolean;\r\n    isRepsValid?: boolean;\r\n    newTotal?: number;\r\n    newSet?: Set;\r\n}\r\n\r\nexport interface SetTrainingData {\r\n    exerciseName: string;\r\n    setNumber: number;\r\n    weightLifted: number;\r\n    reps: number;\r\n    total: number;\r\n}\r\n\r\nexport function createInitialSet(): Set[] {\r\n    const sets: Set[] = [];\r\n    sets.push({\r\n        setNumber: 1,\r\n        weightLifted: null,\r\n        reps: null,\r\n    } as Set);\r\n    return sets;\r\n}\r\n\r\nexport type SetFormValidationErrors =\r\n    'setNotFilled' |\r\n    'setNotEntered' |\r\n    'setNotValid' |\r\n    'repsRequired' |\r\n    'weightLiftedRequired' |\r\n    'min' |\r\n    'max' |\r\n    'pattern' |\r\n    'onlyNumbers';\r\n\r\nexport type FormSetData = {\r\n    setNumber?: number;\r\n    weightLifted?: number;\r\n    reps?: number;\r\n};\r\n\r\nexport type SetConstituent = 'weightLifted' | 'reps';\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from '../../views/auth/login/login.component';\r\nimport { SignupComponent } from '../../views/auth/signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignupComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LoginService } from '../../services/api/auth/login.service';\r\nimport { SignupService } from '../../services/api/auth/signup.service';\r\nimport { LoginComponent } from '../../views/auth/login/login.component';\r\nimport { SignupComponent } from '../../views/auth/signup/signup.component';\r\nimport { SharedModule } from '../shared.module';\r\nimport { AutofocusModule } from '../../directives/autofocus/autofocus.module';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\nconst COMPONENTS = [\r\n    SignupComponent,\r\n    LoginComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    IonicModule,\r\n];\r\n\r\nconst MY_IMPORTS = [\r\n    SharedModule,\r\n    AuthRoutingModule,\r\n    AutofocusModule,\r\n];\r\n\r\nconst SERVICES = [\r\n    SignupService,\r\n    LoginService,\r\n];\r\n\r\n@NgModule({\r\n    declarations: [ ...COMPONENTS ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...MY_IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n    providers: [ ...SERVICES ],\r\n})\r\nexport class AuthModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LanguagesComponent } from '../views/navigation/side-nav/languages/languages.component';\r\nimport { SideNavComponent } from '../views/navigation/side-nav/side-nav.component';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\nconst COMPONENTS = [\r\n    SideNavComponent,\r\n    LanguagesComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    TranslateModule,\r\n    RouterModule,\r\n    IonicModule,\r\n];\r\n\r\nconst IMPORTS = [AuthModule];\r\n\r\n@NgModule({\r\n    declarations: [ ...COMPONENTS ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n})\r\nexport class NavigationModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { RoundTotalWeightModule } from '../pipes/training/new-training/round-total-weight/round-total-weight.module';\r\nimport { ShowAllExercisesModule } from '../pipes/training/past-trainings/show-all-exercises/show-all-exercises.module';\r\nimport { NotFoundResolverService } from '../services/shared/not-found-resolver.service';\r\nimport { DeleteTrainingActionService } from '../services/api/training/delete-training-action.service';\r\nimport { DeleteExerciseDialogComponent } from '../views/shared/delete-exercise-dialog/delete-exercise-dialog.component';\r\nimport { NotFoundComponent } from '../views/shared/not-found/not-found.component';\r\nimport { SetsComponent } from '../views/shared/training/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../views/shared/training/single-exercise/single-exercise.component';\r\nimport { TotalWeightComponent } from '../views/shared/training/total-weight/total-weight.component';\r\nimport { DeleteTrainingActionComponent } from '../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\nimport { MoreTrainingActionComponent } from '../views/shared/training/training-actions/more-training-action/more-training-action.component';\r\nimport { PaginationComponent } from '../views/shared/pagination/pagination.component';\r\nimport { PaginationDirective } from '../directives/pagination/pagination.directive';\r\nimport { DateTimePickerComponent } from '../views/shared/datetime-picker/datetime-picker.component';\r\nimport { SkeletonLoaderComponent } from '../views/shared/skeleton-loader/skeleton-loader.component';\r\nimport { SkeletonLoaderModule } from '../directives/skeleton-loader/skeleton-loader.module';\r\n\r\nconst DIRECTIVES = [PaginationDirective];\r\n\r\nconst COMPONENTS = [\r\n    DeleteExerciseDialogComponent,\r\n    SingleExerciseComponent,\r\n    SetsComponent,\r\n    TotalWeightComponent,\r\n    NotFoundComponent,\r\n    PaginationComponent,\r\n    DateTimePickerComponent,\r\n    SkeletonLoaderComponent,\r\n];\r\n\r\nconst ACTION_COMPONENTS = [\r\n    DeleteTrainingActionComponent,\r\n    MoreTrainingActionComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    IonicModule,\r\n];\r\n\r\nconst IMPORTS = [\r\n    ShowAllExercisesModule,\r\n    PipesModule,\r\n    RoundTotalWeightModule,\r\n    SkeletonLoaderModule,\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ...COMPONENTS,\r\n        ...DIRECTIVES,\r\n        ...ACTION_COMPONENTS,\r\n    ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n    entryComponents: [\r\n        DeleteExerciseDialogComponent,\r\n        DeleteTrainingActionComponent,\r\n        DateTimePickerComponent,\r\n    ],\r\n    providers: [\r\n        NotFoundResolverService,\r\n        DeleteTrainingActionService,\r\n    ],\r\n})\r\nexport class SharedModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { NewTrainingPipe } from './training/new-training/new-training.pipe';\r\nimport { MapTrainingItemActionsPipe } from './training/past-trainings/map-training-actions.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NewTrainingPipe,\r\n        MapTrainingItemActionsPipe,\r\n    ],\r\n    exports: [\r\n        NewTrainingPipe,\r\n        MapTrainingItemActionsPipe,\r\n    ],\r\n})\r\nexport class PipesModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport { Training } from '../../../models/training/new-training/training.model';\r\nimport { TrainingStoreService } from '../../../services/store/training/training-store.service';\r\n\r\n@Pipe({ name: 'newTraining' })\r\nexport class NewTrainingPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private readonly trainingStoreService: TrainingStoreService,\r\n    ) { }\r\n\r\n    transform(\r\n        _value: Observable<Exercise[]>,\r\n        index: number,\r\n        _exerciseChanged: boolean,\r\n    ): Observable<Exercise[]> {\r\n        return this.trainingStoreService.currentTrainingChanged$\r\n            .pipe(\r\n                take(1),\r\n                map((training: Training) => training.exercises[index]?.availableExercises ?? []),\r\n        );\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RoundTotalWeightPipe } from './round-total-weight.pipe';\r\n\r\n@NgModule({\r\n    declarations: [RoundTotalWeightPipe],\r\n    exports: [RoundTotalWeightPipe],\r\n    providers: [RoundTotalWeightPipe],\r\n})\r\nexport class RoundTotalWeightModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DEFAULT_WEIGHT_FORMAT } from '../../../../constants/shared/default-weight-format.const';\r\n\r\n@Pipe({\r\n    name: 'roundTotalWeight',\r\n})\r\nexport class RoundTotalWeightPipe implements PipeTransform {\r\n\r\n    transform(totalWeight: number): string {\r\n        return totalWeight ? `${(Math.round(totalWeight * 100) / 100).toString()} ${DEFAULT_WEIGHT_FORMAT}` : `0 ${DEFAULT_WEIGHT_FORMAT}`;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TrainingItemActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\n\r\ninterface TrainingItemActionsProperties {\r\n    icon: string;\r\n    tooltip: string;\r\n}\r\n\r\n@Pipe({ name: 'mapTrainingItemActions' })\r\n\r\nexport class MapTrainingItemActionsPipe implements PipeTransform {\r\n\r\n    private readonly actionToIcon: { [key: string]: TrainingItemActionsProperties } = {\r\n        'delete': {\r\n            icon: 'trash-sharp',\r\n            tooltip: 'training.past_trainings.buttons.delete_training',\r\n        },\r\n        'more': {\r\n            icon: 'ellipsis-vertical-sharp',\r\n            tooltip: 'TODO',\r\n        },\r\n    };\r\n\r\n    transform(\r\n        action: TrainingItemActions,\r\n        purpose: string,\r\n    ): string {\r\n        if (purpose === 'icon') {\r\n            return this.actionToIcon[action].icon as string;\r\n        }\r\n        else {\r\n            return this.actionToIcon[action].tooltip as string;\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ShowAllExercisesPipe } from './show-all-exercises.pipe';\r\n\r\n@NgModule({\r\n    declarations: [ShowAllExercisesPipe],\r\n    exports: [ShowAllExercisesPipe],\r\n})\r\nexport class ShowAllExercisesModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Training } from '../../../../models/training/new-training/training.model';\r\nimport { SingleExercise } from '../../../../models/training/shared/single-exercise.model';\r\n\r\n@Pipe({ name: 'showAllExercises' })\r\nexport class ShowAllExercisesPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    transform(training: Training): Observable<string> {\r\n        return this.translateService.stream(training.exercises?.map((x: SingleExercise) => x?.exerciseData.name) ?? []).pipe(\r\n            map((value: {[key: string]: string}) => {\r\n                let exercisesToConcat = '';\r\n                Object.values(value).forEach((exerciseName: string, index: number) => {\r\n                    exercisesToConcat += `${index+1}. ${exerciseName}\\n`;\r\n                });\r\n                return exercisesToConcat as string;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { Preferences } from '../../../models/interfaces/preferences.model';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Login, Signup } from '../../../models/auth/auth-data.model';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { LanguageCode, WeightFormat } from '../../../models/types/preferences.type';\r\nimport { PreferencesService } from '../../shared/preferences.service';\r\nimport { AuthStoreService } from '../../store/auth/auth-store.service';\r\nimport { PreferencesStoreService } from '../../store/shared/preferences-state.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly router: Router,\r\n        private readonly authStoreService: AuthStoreService,\r\n        private readonly preferencesService: PreferencesService,\r\n        private readonly preferencesStoreService: PreferencesStoreService,\r\n    ) { }\r\n\r\n    signup(\r\n        language: LanguageCode,\r\n        weightFormat: WeightFormat,\r\n        email: string,\r\n        password: string,\r\n        confirmPassword: string,\r\n    ): Observable<AuthResponseData> {\r\n        const signupData: Signup = {\r\n            Email: email,\r\n            Password: password,\r\n            ConfirmPassword: confirmPassword,\r\n        };\r\n        const preferences: Partial<Preferences> = {\r\n            LanguageCode: language,\r\n            WeightFormat: weightFormat,\r\n        };\r\n        return this.http.post<AuthResponseData>(environment.BACKEND + '/auth/signup', {\r\n            signupData: signupData,\r\n            preferences: preferences,\r\n        });\r\n    }\r\n\r\n    login(\r\n        email: string,\r\n        password: string,\r\n    ): Observable<AuthResponseData> {\r\n        const authData: Login = {\r\n            Email: email,\r\n            Password: password,\r\n        };\r\n        return this.http.post<AuthResponseData>(environment.BACKEND + '/auth/login', authData)\r\n            .pipe(\r\n                tap(async (response: AuthResponseData) => {\r\n                    if (response.Token) {\r\n                        this.authStoreService.emitLoggedUser(response);\r\n                        this.authStoreService.emitIsAuth(true);\r\n                        this.authStoreService.setToken(response.Token);\r\n                        const expiresInDuration = response.ExpiresIn;\r\n                        this.authStoreService.setAuthTimer(expiresInDuration);\r\n                        const now = new Date();\r\n                        const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\r\n                        this.authStoreService.saveLS(\r\n                            this.authStoreService.getToken(),\r\n                            expirationDate,\r\n                            response._id,\r\n                        );\r\n                        await this.router.navigate(['/training/new-training']);\r\n                    }\r\n                }),\r\n                switchMap(response => this.preferencesService.getPreferences(response._id)\r\n                    .pipe(\r\n                        tap(preferences => this.preferencesStoreService.emitPreferences(preferences)),\r\n                        switchMap(_ => of(response)),\r\n                    )),\r\n            );\r\n    }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    constructor(\r\n        private readonly _http: HttpClient,\r\n    ) { }\r\n\r\n    passwordFitsEmail(\r\n        email: string,\r\n        password: string,\r\n    ): Observable<boolean> {\r\n        const params = `?email=${email}&password=${password}`;\r\n        return this._http.get<boolean>(environment.BACKEND + '/auth/check-pass' + params);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n@Injectable()\r\nexport class SignupService {\r\n\r\n    constructor(\r\n        private readonly _http: HttpClient,\r\n    ) { }\r\n\r\n    getEmails(email: string): Observable<boolean> {\r\n        const params = `?email=${email}`;\r\n        return this._http.get<boolean>(environment.BACKEND + '/auth/get_all_emails' + params);\r\n    }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { mapDateInterval } from '../../../helpers/training/past-trainings/map-past-trainings-dates.helper';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator, SearchDataDto } from '../../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { TrainingActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport { DeleteTrainingActionData } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport {\r\n    DeleteTrainingActionComponent,\r\n    DeleteTrainingActionDialogData } from '../../../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\n\r\n@Injectable()\r\nexport class DeleteTrainingActionService implements TrainingActions {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly modalController: ModalController,\r\n        private readonly datePipe: DatePipe,\r\n        private readonly translateService: TranslateService,\r\n    ) { }\r\n\r\n    async perform(data: DeleteTrainingActionData): Promise<void> {\r\n        await this.openDeleteTrainingDialog(data);\r\n    }\r\n\r\n    async openDeleteTrainingDialog(data: DeleteTrainingActionData): Promise<void> {\r\n        const modal = await this.modalController.create({\r\n            component: DeleteTrainingActionComponent,\r\n            componentProps: {\r\n                title$: this.translateService.stream('training.past_trainings.actions.delete_training'),\r\n                dateCreated$: this.translateService.stream(`weekdays.${data.weekDays[data.dayIndex]}`)\r\n                    .pipe(\r\n                        map((value: { [key: string]: string }) => `${value} (${this.datePipe.transform(data.training.trainingDate, 'dd.MM.yyyy')})`),\r\n                    ),\r\n                timeCreated$: of(data.timeCreated),\r\n                training$: of(data.training),\r\n            } as DeleteTrainingActionDialogData,\r\n        });\r\n        await modal.present();\r\n    }\r\n\r\n    deleteTraining(\r\n        trainingId: string,\r\n        deleteTrainingMeta: {\r\n            searchData: SearchDataDto | undefined;\r\n            currentDate: Date | undefined;\r\n        },\r\n    ): Observable<StreamData<Paginator<PastTrainings>>> {\r\n        const params = new HttpParams().set('meta', JSON.stringify(deleteTrainingMeta));\r\n        return this.http.delete<StreamData<Paginator<PastTrainings>>>(environment.BACKEND + `/training/delete_training/${trainingId}`, { params: params })\r\n            .pipe(\r\n                map((response: StreamData<Paginator<PastTrainings>>) => mapDateInterval(response)),\r\n            );\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap, take, tap } from 'rxjs/operators';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { LocalStorageItems } from '../../../models/common/interfaces/common.model';\r\nimport { GeneralResponseData } from '../../../models/interfaces/general-response.model';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport { Training } from '../../../models/training/new-training/training.model';\r\nimport { AuthStoreService } from '../../store/auth/auth-store.service';\r\nimport { TrainingStoreService } from '../../store/training/training-store.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TrainingService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly authStoreService: AuthStoreService,\r\n        private readonly trainingStoreService: TrainingStoreService,\r\n    ) { }\r\n\r\n    getExerciseByName(exerciseName: string): Observable<Exercise> {\r\n        const params = new HttpParams().set('exerciseName', exerciseName);\r\n        return this.http.get<Exercise>(environment.BACKEND + '/training/get_exercise', { params: params });\r\n    }\r\n\r\n    getExercises(): Observable<StreamData<Exercise[]>> {\r\n        return this.http.get<StreamData<Exercise[]>>(environment.BACKEND + '/training/get-exercises')\r\n            .pipe(\r\n                switchMap((response: StreamData<Exercise[]>) => {\r\n                    this.trainingStoreService.emitAllExercises(response);\r\n                    const trainingState: Training = JSON.parse(localStorage.getItem(LocalStorageItems.TRAINING_STATE));\r\n                    if (!trainingState) {\r\n                        return this.authStoreService.loggedUser$\r\n                            .pipe(\r\n                                take(1),\r\n                                tap((authResponseData: AuthResponseData) => {\r\n                                    this.trainingStoreService.updateTrainingState(\r\n                                        undefined,\r\n                                        response.Value,\r\n                                        true,\r\n                                        authResponseData._id,\r\n                                    );\r\n                                }),\r\n                                switchMap(_ => of(response)),\r\n                            );\r\n                    }\r\n                    else {\r\n                        return of(response);\r\n                    }\r\n                }),\r\n            );\r\n    }\r\n\r\n    addTraining(trainingData: Training): Observable<GeneralResponseData> {\r\n        return this.http.post<GeneralResponseData>(environment.BACKEND + '/training/handle_training', { trainingData });\r\n    }\r\n\r\n    updateTraining(\r\n        trainingData: Training,\r\n        trainingId: string,\r\n    ): Observable<GeneralResponseData> {\r\n        return this.http.put<GeneralResponseData>(environment.BACKEND + `/training/handle_training/${trainingId}`, { updatedTrainingData: trainingData });\r\n    }\r\n\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { captureException } from '@sentry/minimal';\r\n\r\n@Injectable()\r\nexport class SentryService implements ErrorHandler {\r\n\r\n    handleError(error: unknown): void {\r\n        captureException(error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController, LoadingOptions } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadingControllerService {\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly loadingController: LoadingController,\r\n    ) { }\r\n\r\n    async displayLoader(options: LoadingOptions): Promise<void> {\r\n        const loading = await this.loadingController.create({\r\n            message: this.translateService.instant(options.message as string),\r\n            keyboardClose: true,\r\n        });\r\n        await loading.present();\r\n    }\r\n\r\n    async dismissLoader(): Promise<void> {\r\n        await this.loadingController.dismiss();\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\n\r\n@Injectable()\r\nexport class NotFoundResolverService implements Resolve<void> {\r\n\r\n    resolve(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): void {\r\n        localStorage.removeItem(LocalStorageItems.TRAINING_STATE);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\nimport { MESSAGE_DURATION } from '../../constants/shared/message-duration.const';\r\nimport { GeneralResponseData } from '../../models/interfaces/general-response.model';\r\nimport { Preferences } from '../../models/interfaces/preferences.model';\r\nimport { PreferenceChangedType } from '../../models/types/preferences.type';\r\nimport { PreferencesStoreService } from '../store/shared/preferences-state.service';\r\nimport { ToastControllerService } from './toast-controller.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PreferencesService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly translateService: TranslateService,\r\n        private readonly toastControllerService: ToastControllerService,\r\n        private readonly preferencesStoreService: PreferencesStoreService,\r\n    ) { }\r\n\r\n    getPreferences(userId: string): Observable<Preferences> {\r\n        return this.http.get<Preferences>(environment.BACKEND + `/preferences/${userId}`);\r\n    }\r\n\r\n    setPreferences(\r\n        preferences: Preferences,\r\n        preferenceChanged: PreferenceChangedType,\r\n    ): Observable<GeneralResponseData> {\r\n        const apiPreferences: Partial<Preferences> = {\r\n            LanguageCode: preferences.LanguageCode,\r\n            WeightFormat: preferences.WeightFormat,\r\n            ShowByPeriod: preferences.ShowByPeriod,\r\n        };\r\n        return this.http.put<GeneralResponseData>(environment.BACKEND + `/preferences/${preferences.UserId}`, {\r\n            preferences: apiPreferences,\r\n            preferenceChanged: preferenceChanged,\r\n        })\r\n        .pipe(\r\n            switchMap((response: GeneralResponseData) =>\r\n                this.translateService.use(preferences.LanguageCode)\r\n                    .pipe(\r\n                        tap(async _ => {\r\n                            this.preferencesStoreService.emitPreferences(preferences);\r\n                            if (response.Message) {\r\n                                await this.toastControllerService.displayToast({\r\n                                    message: this.translateService.instant(response.Message),\r\n                                    duration: MESSAGE_DURATION.GENERAL,\r\n                                    color: 'primary',\r\n                                });\r\n                            }\r\n                        }),\r\n                    ),\r\n            ),\r\n        );\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController, ToastOptions } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastControllerService {\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly toastController: ToastController,\r\n    ) { }\r\n\r\n    async displayToast(options: ToastOptions): Promise<void> {\r\n        const toast = await this.toastController.create({\r\n            message: this.translateService.instant(options?.message as string),\r\n            duration: options.duration,\r\n            color: options.color,\r\n        });\r\n        await toast.present();\r\n    }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UnsubscribeService extends Subject<void> implements OnDestroy {\r\n\r\n    ngOnDestroy(): void {\r\n        this.next();\r\n        this.complete();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { LocalStorageItems } from '../../../models/common/interfaces/common.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthStoreService {\r\n\r\n    private readonly _loggedUser$$: BehaviorSubject<AuthResponseData> = new BehaviorSubject<AuthResponseData>(null);\r\n    readonly loggedUser$: Observable<AuthResponseData> = this._loggedUser$$.asObservable();\r\n\r\n    private readonly _isAuth$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    readonly isAuth$: Observable<boolean> = this._isAuth$$.asObservable();\r\n\r\n    private tokenTimer: NodeJS.Timeout;\r\n    private token: string;\r\n\r\n    constructor(\r\n        private readonly router: Router,\r\n    ) { }\r\n\r\n    getToken(): string {\r\n        return this.token;\r\n    }\r\n\r\n    setToken(token: string): void {\r\n        this.token = token;\r\n    }\r\n\r\n    getLoggedUser(): AuthResponseData {\r\n        return { ...this._loggedUser$$.getValue() };\r\n    }\r\n\r\n    emitLoggedUser(loggedUser: AuthResponseData): void {\r\n        this._loggedUser$$.next(loggedUser);\r\n    }\r\n\r\n    getIsAuth(): boolean {\r\n        return this._isAuth$$.getValue();\r\n    }\r\n\r\n    emitIsAuth(isAuth: boolean): void {\r\n        this._isAuth$$.next(isAuth);\r\n    }\r\n\r\n    autoLogin(): void {\r\n        if (JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA))) {\r\n            const userData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n            if (!userData.Token || !userData.ExpirationDate) {\r\n                return;\r\n            }\r\n            const authData: AuthResponseData = {\r\n                Token: userData.Token,\r\n                ExpirationDate: new Date(userData.ExpirationDate),\r\n                _id: userData._id,\r\n            };\r\n            const now: Date = new Date();\r\n            const expiresIn = authData.ExpirationDate.getTime() - now.getTime();\r\n            if (expiresIn > 0) {\r\n                this.token = userData.Token;\r\n                this.setAuthTimer(expiresIn / 1000);\r\n                this.emitIsAuth(true);\r\n                this.emitLoggedUser(authData);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(): Promise<void> {\r\n        this.token = null;\r\n        this.emitIsAuth(false);\r\n        clearTimeout(this.tokenTimer);\r\n        this.clearData();\r\n        await this.router.navigate(['/auth/login']);\r\n    }\r\n\r\n    setAuthTimer(duration: number): void {\r\n        this.tokenTimer = setTimeout(async () => {\r\n            await this.logout();\r\n        }, duration * 1000);\r\n    }\r\n\r\n    saveLS(\r\n        token: string,\r\n        expirationDate: Date,\r\n        userId: string,\r\n    ): void {\r\n        const userData: AuthResponseData = {\r\n            Token: token,\r\n            ExpirationDate: expirationDate,\r\n            _id: userId,\r\n        };\r\n        localStorage.setItem(LocalStorageItems.USER_DATA, JSON.stringify(userData));\r\n    }\r\n\r\n    private clearData(): void {\r\n        localStorage.removeItem(LocalStorageItems.USER_DATA);\r\n        localStorage.removeItem(LocalStorageItems.TRAINING_STATE);\r\n        localStorage.removeItem(LocalStorageItems.QUERY_PARAMS);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Preferences } from '../../../models/interfaces/preferences.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PreferencesStoreService {\r\n\r\n    private readonly _preferencesChanged$$: BehaviorSubject<Preferences> = new BehaviorSubject(null);\r\n    readonly preferencesChanged$: Observable<Preferences> = this._preferencesChanged$$.asObservable();\r\n\r\n    emitPreferences(preferences: Preferences): void {\r\n        this._preferencesChanged$$.next(preferences);\r\n    }\r\n\r\n    getPreferences(): Preferences {\r\n        return { ...this._preferencesChanged$$.getValue() };\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { LocalStorageItems, StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings, PastTrainingsQueryParams } from '../../../models/training/past-trainings/past-trainings.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SharedStoreService {\r\n\r\n    private readonly _pastTrainingsQueryParams$$: BehaviorSubject<PastTrainingsQueryParams> = new BehaviorSubject<PastTrainingsQueryParams>(null);\r\n    readonly pastTrainingsQueryParams$: Observable<PastTrainingsQueryParams> = this._pastTrainingsQueryParams$$.asObservable();\r\n\r\n    private readonly _editingTraining$$: Subject<boolean> = new Subject<boolean>();\r\n    readonly editingTraining$: Observable<boolean> = this._editingTraining$$.asObservable();\r\n\r\n    readonly deletedTraining$$: Subject<StreamData<Paginator<PastTrainings>>> = new Subject<StreamData<Paginator<PastTrainings>>>();\r\n\r\n    readonly dayClicked$$: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n    completeDayClicked(): void {\r\n        this.dayClicked$$.complete();\r\n    }\r\n\r\n    emitDayClicked(dayClicked: string): void {\r\n        this.dayClicked$$.next(dayClicked);\r\n    }\r\n\r\n    getDayClickedDate(): string | undefined {\r\n        return this.dayClicked$$.getValue();\r\n    }\r\n\r\n    emitEditingTraining(editMode: boolean): void {\r\n        this._editingTraining$$.next(editMode);\r\n    }\r\n\r\n    keepQueryParams(): void {\r\n        const queryParams = JSON.parse(localStorage.getItem(LocalStorageItems.QUERY_PARAMS));\r\n        if (!queryParams) {\r\n            return;\r\n        }\r\n        this._pastTrainingsQueryParams$$.next(queryParams);\r\n    }\r\n\r\n    emitPastTrainingsQueryParams(params: PastTrainingsQueryParams): void {\r\n        this._pastTrainingsQueryParams$$.next(params);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { take, tap, map } from 'rxjs/operators';\r\nimport { LocalStorageItems, StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport { createEmptyExercise, EMPTY_TRAINING } from '../../../constants/training/new-training.const';\r\nimport { Training } from '../../../models/training/new-training/training.model';\r\nimport { SetTrainingData, Set } from '../../../models/training/shared/set.model';\r\nimport { SingleExercise } from '../../../models/training/shared/single-exercise.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TrainingStoreService {\r\n\r\n    private readonly _allExercisesChanged$$: BehaviorSubject<StreamData<Exercise[]>> = new BehaviorSubject<StreamData<Exercise[]>>(null);\r\n    readonly allExercisesChanged$: Observable<StreamData<Exercise[]>> = this._allExercisesChanged$$.asObservable();\r\n\r\n    private readonly _currentTrainingChanged$$: BehaviorSubject<Training> = new BehaviorSubject<Training>(EMPTY_TRAINING);\r\n    readonly currentTrainingChanged$: Observable<Training> = this._currentTrainingChanged$$.asObservable();\r\n\r\n    emitAllExercises(exercises: StreamData<Exercise[]>): void {\r\n        this._allExercisesChanged$$.next(exercises);\r\n    }\r\n\r\n    getCurrentTrainingState(): Training {\r\n        return { ...this._currentTrainingChanged$$.getValue() };\r\n    }\r\n\r\n    addBodyweightToStorage(value: string): void {\r\n        const updatedTraining = {\r\n            ...this._currentTrainingChanged$$.getValue(),\r\n            bodyweight: +value,\r\n        };\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    deleteSet(\r\n        indexExercise: number,\r\n        indexSet: number,\r\n        newTotal: number,\r\n    ): void {\r\n        const updatedTraining: Training = { ...this._currentTrainingChanged$$.getValue() };\r\n        updatedTraining.exercises[indexExercise].sets.splice(indexSet, 1);\r\n        updatedTraining.exercises[indexExercise].sets.map((set: Set) => {\r\n            if (set.setNumber > (indexSet + 1)) {\r\n                set.setNumber--;\r\n            }\r\n        });\r\n        updatedTraining.exercises[indexExercise].total = newTotal;\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    pushToAvailableExercises(\r\n        currentTrainingState: Training,\r\n        toBeAddedExercise: Exercise[],\r\n    ): void {\r\n        const updatedTraining: Training = { ...currentTrainingState };\r\n        updatedTraining.exercises.map((exercise: SingleExercise) => {\r\n            const isDeletedExerciseInAE: Exercise = exercise.availableExercises.find((exercise: Exercise) => exercise._id === toBeAddedExercise[0]._id);\r\n            if (!isDeletedExerciseInAE) {\r\n                exercise.availableExercises.push(toBeAddedExercise[0]);\r\n                exercise.availableExercises.sort(this.compare);\r\n            }\r\n        });\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    deleteExercise(\r\n        currentTrainingState: Training,\r\n        deletedExerciseName?: string,\r\n        indexExercise?: number,\r\n    ): Observable<[Training, Exercise[]]> {\r\n        let updatedExercises: SingleExercise[] = [ ...currentTrainingState.exercises ];\r\n        let updatedTraining: Training;\r\n        if (deletedExerciseName) {\r\n            return this.allExercisesChanged$\r\n                .pipe(\r\n                    take(1),\r\n                    map(value => value.Value),\r\n                    tap(_ => {\r\n                        updatedExercises = updatedExercises.filter((exercise: SingleExercise) => exercise.exerciseData.name !== deletedExerciseName);\r\n                        updatedTraining = {\r\n                            ...currentTrainingState,\r\n                            exercises: updatedExercises,\r\n                        };\r\n                    }),\r\n                    map((allExercises: Exercise[]) =>\r\n                        [\r\n                            updatedTraining,\r\n                            allExercises.filter(exercise => exercise.name === deletedExerciseName),\r\n                        ],\r\n                    ),\r\n                );\r\n        }\r\n        else {\r\n            updatedExercises = updatedExercises.filter((_exercise: SingleExercise, index: number) => index !== indexExercise);\r\n            updatedTraining = {\r\n                ...currentTrainingState,\r\n                exercises: updatedExercises,\r\n            };\r\n            this.saveTrainingData(updatedTraining);\r\n            return of([\r\n                updatedTraining,\r\n                null,\r\n            ]);\r\n        }\r\n    }\r\n\r\n    setsChanged(trainingData: SetTrainingData): void {\r\n        const updatedTraining: Training = { ...this._currentTrainingChanged$$.getValue() };\r\n        const indexOfChangedExercise: number = updatedTraining.exercises.findIndex((singleExercise: SingleExercise) => singleExercise.exerciseData.name === trainingData.exerciseName);\r\n        const indexFoundSet = updatedTraining.exercises[indexOfChangedExercise].sets.findIndex(set => set.setNumber === trainingData.setNumber);\r\n\r\n        if (indexFoundSet > -1) {\r\n            updatedTraining.exercises[indexOfChangedExercise].sets[indexFoundSet] = {\r\n                ...updatedTraining.exercises[indexOfChangedExercise].sets[indexFoundSet],\r\n                weightLifted: trainingData.weightLifted,\r\n                reps: trainingData.reps,\r\n            };\r\n            updatedTraining.exercises[indexOfChangedExercise].total = trainingData.total;\r\n        }\r\n        else {\r\n            updatedTraining.exercises[indexOfChangedExercise].sets.push({\r\n                setNumber: trainingData.setNumber,\r\n                weightLifted: trainingData.weightLifted,\r\n                reps: trainingData.reps,\r\n            });\r\n            updatedTraining.exercises[indexOfChangedExercise].total = trainingData.total;\r\n        }\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    addNewExercise(alreadyUsedExercises: string[]): void {\r\n        const allExercises: Exercise[] = [ ...this._allExercisesChanged$$.getValue().Value ];\r\n        const availableExercises: Exercise[] = allExercises.filter((exercise: Exercise) => alreadyUsedExercises.indexOf(exercise.name) === -1);\r\n        this.updateTrainingState(undefined, availableExercises);\r\n    }\r\n\r\n    updateExerciseChoices(\r\n        selectedExercise: string,\r\n        selectedIndex: number,\r\n        disabledTooltip: boolean,\r\n        trainingToBeUpdated: Training,\r\n        selectedExerciseData: Exercise,\r\n    ): void {\r\n        trainingToBeUpdated.exercises[selectedIndex].exerciseData = selectedExerciseData;\r\n        trainingToBeUpdated.exercises[selectedIndex].disabledTooltip = disabledTooltip;\r\n        trainingToBeUpdated.exercises.forEach((exercise: SingleExercise, index: number) => {\r\n            if (index !== selectedIndex) {\r\n                exercise.availableExercises = exercise.availableExercises.filter((exercise: Exercise) => exercise.name !== selectedExercise);\r\n            }\r\n        });\r\n        this.saveTrainingData({ ...trainingToBeUpdated });\r\n    }\r\n\r\n    keepTrainingState(): void {\r\n        const trainingState: Training = JSON.parse(localStorage.getItem(LocalStorageItems.TRAINING_STATE));\r\n        if (!trainingState) {\r\n            return;\r\n        }\r\n        this._currentTrainingChanged$$.next({ ...trainingState });\r\n    }\r\n\r\n    updateTrainingState(\r\n        newTrainingState?: Training,\r\n        exercises?: Exercise[],\r\n        restartAll?: boolean,\r\n        userId?: string,\r\n    ): void {\r\n        let updatedTraining: Training;\r\n        if (exercises) {\r\n            updatedTraining = this._currentTrainingChanged$$.getValue();\r\n            if (restartAll) {\r\n                updatedTraining = {\r\n                    ...EMPTY_TRAINING,\r\n                    userId: userId,\r\n                };\r\n            }\r\n            updatedTraining.exercises.push(createEmptyExercise(exercises));\r\n        }\r\n        else {\r\n            updatedTraining = newTrainingState;\r\n        }\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    clearTrainingState(): void {\r\n        this.saveTrainingData({ ...EMPTY_TRAINING });\r\n    }\r\n\r\n    private saveTrainingData(updatedTraining: Training): void {\r\n        this._currentTrainingChanged$$.next({ ...updatedTraining });\r\n        localStorage.setItem(LocalStorageItems.TRAINING_STATE, JSON.stringify({ ...updatedTraining }));\r\n    }\r\n\r\n    private compare(\r\n        a: Exercise,\r\n        b: Exercise,\r\n    ): number {\r\n        if (a.name < b.name) {\r\n            return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { EMPTY, of, timer } from 'rxjs';\r\nimport { catchError, finalize, map, switchMap } from 'rxjs/operators';\r\nimport { SignupService } from '../../services/api/auth/signup.service';\r\nimport { LoginService } from '../../services/api/auth/login.service';\r\n\r\nexport function passwordFitsEmail(\r\n    loginService: LoginService,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (group: AbstractControl) =>\r\n        timer(350).pipe(\r\n            switchMap(_ => {\r\n                if (group) {\r\n                    const email: string = group.get('email')?.value;\r\n                    const password: string = group.get('password')?.value;\r\n                    if (!email || !password) {\r\n                        return of(null);\r\n                    }\r\n                    return loginService.passwordFitsEmail(email, password)\r\n                        .pipe(\r\n                            map((response: boolean) => {\r\n                                if (!response) {\r\n                                    return { 'passwordFitsEmail': true };\r\n                                }\r\n                                return null;\r\n                            }),\r\n                            catchError(_ => of(null)),\r\n                            finalize(() => changeDetectorRef.markForCheck()),\r\n                        );\r\n                }\r\n                else {\r\n                    return of(null);\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function isEmailAvailable(\r\n    signupService: SignupService,\r\n    cd: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (control: AbstractControl) =>\r\n        timer(350).pipe(\r\n            switchMap(_ => {\r\n                if (control) {\r\n                    const email: string = control?.value;\r\n                    if (!email) {\r\n                        return EMPTY;\r\n                    }\r\n                    return signupService.getEmails(email.trim().toLowerCase())\r\n                        .pipe(\r\n                            map((response: boolean) => {\r\n                                if (!response) {\r\n                                    return { 'availableEmail': true };\r\n                                }\r\n                                return null;\r\n                            }),\r\n                            catchError(_ => EMPTY),\r\n                            finalize(() => cd.markForCheck()),\r\n                        );\r\n                }\r\n                else {\r\n                    return EMPTY;\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function samePasswords(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            const password: string = group.get('password')?.value;\r\n            const confirmPassword: string = group.get('confirmPassword')?.value;\r\n            if (!password || !confirmPassword) {\r\n                return null;\r\n            }\r\n            else {\r\n                if (password !== confirmPassword) {\r\n                    return { 'equalPass': true };\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function isNumber(): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        if (control.value) {\r\n            if (!isNaN(parseFloat(control.value)) && isFinite(control.value)) {\r\n                return null;\r\n            }\r\n            return { 'onlyNumbers': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { AbstractControl, FormArray, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function allSetsFilled(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            let isSetFilled = true;\r\n            (array as FormArray).controls.forEach((set: AbstractControl) => {\r\n                if (!set.get('weightLifted').value || !set.get('reps').value ||\r\n                    set.get('weightLifted').errors || set.get('reps').errors) {\r\n                    isSetFilled = false;\r\n                }\r\n            });\r\n            if (isSetFilled) {\r\n                return null;\r\n            }\r\n            return { 'setNotFilled': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function isSetValid(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            const weightLifted: AbstractControl = group?.get('weightLifted');\r\n            const reps: AbstractControl = group?.get('reps');\r\n            if (weightLifted && reps) {\r\n                if (!weightLifted.value || !reps.value) {\r\n                    return { 'setNotEntered': true };\r\n                }\r\n                if (!weightLifted.valid || !reps.valid) {\r\n                    return { 'setNotValid': true };\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nexport function bothValuesRequired(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            if (group.get('weightLifted')?.value && !group.get('reps')?.value) {\r\n                return { 'repsRequired': true };\r\n            }\r\n            else if (!group.get('weightLifted')?.value && group.get('reps')?.value) {\r\n                return { 'weightLiftedRequired': true };\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { AbstractControl, FormArray, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\n//TODO: create no empty training validator (exercises.length === 0)\r\nexport function checkExerciseNumber(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            const exerciseNumber = (array as FormArray)?.controls?.length;\r\n            if (exerciseNumber) {\r\n                return null;\r\n            }\r\n            return { 'emptyTraining': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function checkDuplicateExerciseName(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            const exerciseNames: string[] = [];\r\n            for (const group of (array as FormArray).controls) {\r\n                if (exerciseNames.indexOf(group.get('exerciseData.name')?.value) !== -1) {\r\n                    return { 'duplicateExerciseName': group.get('exerciseData.name').value };\r\n                }\r\n                else {\r\n                    exerciseNames.push(group.get('exerciseData.name')?.value);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { catchError, finalize, takeUntil } from 'rxjs/operators';\r\nimport { IonInput } from '@ionic/angular';\r\nimport { EMPTY } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { MESSAGE_DURATION } from '../../../constants/shared/message-duration.const';\r\nimport { AuthService } from '../../../services/api/auth/auth.service';\r\nimport { LoginService } from '../../../services/api/auth/login.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport { IonFocusDurations } from '../../../constants/shared/ion-focus-durations.const';\r\nimport { LoadingControllerService } from '../../../services/shared/loading-controller.service';\r\nimport { ToastControllerService } from '../../../services/shared/toast-controller.service';\r\n\r\ntype FormData = {\r\n    email?: string;\r\n    password?: string;\r\n};\r\n\r\n@Component({\r\n    selector: 'bl-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class LoginComponent {\r\n\r\n    isLoading = false;\r\n\r\n    form: FormGroup;\r\n\r\n    @ViewChild('passwordEl', { read: IonInput })\r\n    private readonly passwordInput: IonInput;\r\n\r\n    constructor(\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly loginService: LoginService,\r\n        private readonly authService: AuthService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly router: Router,\r\n        private readonly loadingControllerService: LoadingControllerService,\r\n        private readonly toastControllerService: ToastControllerService,\r\n    ) {\r\n        this.form = new FormGroup({\r\n            email: new FormControl(null, [\r\n                Validators.required,\r\n                Validators.email,\r\n            ]),\r\n            password: new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20),\r\n            ]),\r\n        }, { asyncValidators: AuthCustomValidators.passwordFitsEmail(\r\n            this.loginService,\r\n            this.changeDetectorRef) });\r\n    }\r\n\r\n    get focusDuration(): number {\r\n        return IonFocusDurations.LOGIN;\r\n    }\r\n\r\n    async onSubmit(): Promise<void> {\r\n        if (!this.form.valid) {\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        await this.loadingControllerService.displayLoader({ message: 'auth.logging_in' });\r\n\r\n        this.authService.login(\r\n            this.accessFormData('email').value as string,\r\n            this.accessFormData('password').value as string,\r\n        ).pipe(\r\n            catchError(_ => EMPTY),\r\n            finalize(async () => {\r\n                this.isLoading = false;\r\n                await this.loadingControllerService.dismissLoader();\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe(async (response: AuthResponseData) => {\r\n            if (response) {\r\n                await this.toastControllerService.displayToast({\r\n                    message: this.translateService.instant(response.Message),\r\n                    duration: MESSAGE_DURATION.GENERAL,\r\n                    color: response.Token ? 'primary' : 'danger',\r\n                });\r\n                await this.router.navigate(['/training/new-training']);\r\n            }\r\n        });\r\n    }\r\n\r\n    accessFormData(formFieldName: keyof FormData): FormControl {\r\n        return this.form.get(formFieldName) as FormControl;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EMPTY } from 'rxjs';\r\nimport { catchError, finalize, takeUntil } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { MESSAGE_DURATION } from '../../../constants/shared/message-duration.const';\r\nimport { LanguageCode, WeightFormat } from '../../../models/types/preferences.type';\r\nimport { AuthService } from '../../../services/api/auth/auth.service';\r\nimport { SignupService } from '../../../services/api/auth/signup.service';\r\nimport { LoadingControllerService } from '../../../services/shared/loading-controller.service';\r\nimport { ToastControllerService } from '../../../services/shared/toast-controller.service';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\nimport { IonFocusDurations } from '../../../constants/shared/ion-focus-durations.const';\r\n\r\ntype FormData = {\r\n    language?: LanguageCode;\r\n    weightFormat?: WeightFormat;\r\n    email?: string;\r\n    password?: string;\r\n    confirmPassword?: string;\r\n};\r\n@Component({\r\n    selector: 'bl-signup',\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class SignupComponent {\r\n\r\n    isLoading = false;\r\n\r\n    form: FormGroup;\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly signupService: SignupService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly loadingControllerService: LoadingControllerService,\r\n        private readonly toastControllerService: ToastControllerService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly router: Router,\r\n    ) {\r\n        this.form = new FormGroup({\r\n            language: new FormControl('en', [Validators.required]),\r\n            weightFormat: new FormControl('kg', [Validators.required]),\r\n            email: new FormControl(null, {\r\n                validators: [Validators.required, Validators.email],\r\n                asyncValidators: [AuthCustomValidators.isEmailAvailable(this.signupService, this.changeDetectorRef)],\r\n            }),\r\n            password: new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)],\r\n            ),\r\n            confirmPassword: new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)],\r\n            ),\r\n        }, { validators: AuthCustomValidators.samePasswords() });\r\n    }\r\n\r\n    get focusDuration(): number {\r\n        return IonFocusDurations.SIGNUP;\r\n    }\r\n\r\n    async onSubmit(): Promise<void> {\r\n        if (!this.form.valid) {\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        await this.loadingControllerService.displayLoader({ message: 'auth.signing_in' });\r\n\r\n        this.authService.signup(\r\n            this.accessFormData('language').value as LanguageCode,\r\n            this.accessFormData('weightFormat').value as WeightFormat,\r\n            this.accessFormData('email').value,\r\n            this.accessFormData('password').value,\r\n            this.accessFormData('confirmPassword').value,\r\n        ).pipe(\r\n            catchError(_ => EMPTY),\r\n            finalize(async () => {\r\n                this.isLoading = false;\r\n                await this.loadingControllerService.dismissLoader();\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n            takeUntil(this.unsubscribeService),\r\n        )\r\n        .subscribe(async response => {\r\n            if (response.Success) {\r\n                await this.toastControllerService.displayToast({\r\n                    message: this.translateService.instant(response.Message),\r\n                    duration: MESSAGE_DURATION.GENERAL,\r\n                    color: response.Success ? 'primary' : 'danger',\r\n                });\r\n                await this.router.navigate(['/auth/login']);\r\n            }\r\n        });\r\n    }\r\n\r\n    accessFormData(formFieldName: keyof FormData): FormControl {\r\n        return this.form.get(formFieldName) as FormControl;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { MenuController, PopoverController } from '@ionic/angular';\r\nimport { Observable } from 'rxjs';\r\nimport { take, switchMap } from 'rxjs/operators';\r\nimport { AuthResponseData } from '../../../../models/auth/auth-data.model';\r\nimport { Preferences } from '../../../../models/interfaces/preferences.model';\r\nimport { LanguageCode } from '../../../../models/types/preferences.type';\r\nimport { PreferencesService } from '../../../../services/shared/preferences.service';\r\nimport { AuthStoreService } from '../../../../services/store/auth/auth-store.service';\r\nimport { PreferencesStoreService } from '../../../../services/store/shared/preferences-state.service';\r\n\r\ninterface LanguageData {\r\n    LanguageCode: LanguageCode;\r\n    ImageUrl: string;\r\n    LanguageName: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'bl-languages',\r\n    templateUrl: './languages.component.html',\r\n    styleUrls: ['./languages.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LanguagesComponent {\r\n\r\n    @Input()\r\n    preferences$: Observable<Preferences>;\r\n\r\n    readonly languageData: Readonly<LanguageData[]> = [\r\n        {\r\n            LanguageCode: 'en',\r\n            ImageUrl: '../../../../assets/images/flags/united-kingdom.png',\r\n            LanguageName: 'languages.english',\r\n        },\r\n        {\r\n            LanguageCode: 'hr',\r\n            ImageUrl: '../../../../assets/images/flags/croatia.png',\r\n            LanguageName: 'languages.croatian',\r\n        },\r\n    ];\r\n\r\n    constructor(\r\n        private readonly preferencesStoreService: PreferencesStoreService,\r\n        private readonly authStoreService: AuthStoreService,\r\n        private readonly navigationService: PreferencesService,\r\n        private readonly popoverController: PopoverController,\r\n        private readonly menuController: MenuController,\r\n    ) { }\r\n\r\n    changeLanguage(language: LanguageCode): void {\r\n        const currentPreferences = this.preferencesStoreService.getPreferences();\r\n        this.authStoreService.loggedUser$\r\n            .pipe(\r\n                take(1),\r\n                switchMap((userData: AuthResponseData) => {\r\n                    const preferences: Preferences = {\r\n                        UserId: userData._id,\r\n                        LanguageCode: language,\r\n                        WeightFormat: 'kg',\r\n                        ShowByPeriod: currentPreferences.ShowByPeriod,\r\n                    };\r\n                    return this.navigationService.setPreferences(\r\n                        preferences,\r\n                        'language',\r\n                    );\r\n                }),\r\n            )\r\n            .subscribe(async _ => {\r\n                await this.popoverController.dismiss();\r\n                await this.menuController.close();\r\n            });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { startOfWeek, startOfDay, endOfWeek, endOfDay, format } from 'date-fns';\r\nimport { Preferences } from '../../../models/interfaces/preferences.model';\r\nimport { AuthStoreService } from '../../../services/store/auth/auth-store.service';\r\nimport { PreferencesStoreService } from '../../../services/store/shared/preferences-state.service';\r\nimport { TrainingStoreService } from '../../../services/store/training/training-store.service';\r\nimport { SharedStoreService } from '../../../services/store/shared/shared-store.service';\r\nimport { PastTrainingsQueryParams } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { QUERY_PARAMS_DATE_FORMAT } from '../../../constants/training/past-trainings-date-format.const';\r\nimport { LanguagesComponent } from './languages/languages.component';\r\n\r\n@Component({\r\n    selector: 'bl-side-nav',\r\n    templateUrl: './side-nav.component.html',\r\n    styleUrls: ['./side-nav.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SideNavComponent {\r\n\r\n    readonly isAuthenticated$: Observable<boolean> = this.authStoreService.isAuth$;\r\n    private readonly preferences$: Observable<Preferences> = this.preferencesStoreService.preferencesChanged$\r\n        .pipe(take(1));\r\n\r\n    constructor(\r\n        private readonly authStoreService: AuthStoreService,\r\n        private readonly sharedStoreService: SharedStoreService,\r\n        private readonly preferencesStoreService: PreferencesStoreService,\r\n        private readonly trainingStoreService: TrainingStoreService,\r\n        private readonly popoverController: PopoverController,\r\n        private readonly router: Router,\r\n    ) { }\r\n\r\n    async onLogout(): Promise<void> {\r\n        this.trainingStoreService.clearTrainingState();\r\n        await this.authStoreService.logout();\r\n    }\r\n\r\n    async goToPastTrainings(): Promise<void> {\r\n        this.sharedStoreService.pastTrainingsQueryParams$\r\n            .pipe(\r\n                take(1),\r\n            )\r\n            .subscribe(async params => {\r\n                let queryParams: PastTrainingsQueryParams;\r\n                if (params) {\r\n                    queryParams = params;\r\n                }\r\n                else {\r\n                    const showByPeriod = this.preferencesStoreService.getPreferences()?.ShowByPeriod ?? 'week';\r\n                    const startDate = startOfWeek(startOfDay(new Date()), { weekStartsOn: 1 });\r\n                    const endDate = showByPeriod === 'week' ? endOfWeek(endOfDay(new Date()), { weekStartsOn: 1 }) : startOfWeek(startOfDay(new Date()), { weekStartsOn: 1 });\r\n                    queryParams = {\r\n                        startDate: format(startDate, QUERY_PARAMS_DATE_FORMAT),\r\n                        endDate: format(endDate, QUERY_PARAMS_DATE_FORMAT),\r\n                        showBy: showByPeriod,\r\n                    };\r\n                }\r\n                await this.router.navigate(['/training/past-trainings'], { queryParams });\r\n            });\r\n    }\r\n\r\n    async openPopover($event: Event): Promise<void> {\r\n        const popover = await this.popoverController.create({\r\n            component: LanguagesComponent,\r\n            event: $event,\r\n            componentProps: { preferences$: this.preferences$ },\r\n            side: 'left',\r\n            keyboardClose: true,\r\n        });\r\n        await popover.present();\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, ViewChild } from '@angular/core';\r\nimport { IonDatetime, ModalController } from '@ionic/angular';\r\nimport { format } from 'date-fns';\r\nimport { DialogRoles } from '../../../models/common/types/modal-roles.type';\r\n\r\n@Component({\r\n    templateUrl: './datetime-picker.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DateTimePickerComponent {\r\n\r\n    maxDate: string = format(new Date(), 'yyyy-MM-dd');\r\n\r\n    @Input()\r\n    dateValue: string;\r\n\r\n    @ViewChild('datetime', { read: IonDatetime })\r\n    dateTimeEl: IonDatetime;\r\n\r\n    constructor(\r\n        private readonly modalController: ModalController,\r\n    ) { }\r\n\r\n    dateChanged(currentDateValue: string): void {\r\n        this.dateValue = currentDateValue;\r\n    }\r\n\r\n    async close(): Promise<void> {\r\n        await this.dateTimeEl?.cancel();\r\n        await this.modalController.dismiss(undefined, DialogRoles.CANCEL);\r\n    }\r\n\r\n    async select(): Promise<void> {\r\n        await this.dateTimeEl?.confirm();\r\n        await this.modalController.dismiss(this.dateValue, DialogRoles.SELECT_DATE);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { Observable } from 'rxjs';\r\nimport { DialogRoles } from '../../../models/common/types/modal-roles.type';\r\n\r\nexport interface DialogData {\r\n    isError: boolean;\r\n    deleteExercise: DeleteExerciseDialogData;\r\n}\r\n\r\nexport interface DeleteExerciseDialogData {\r\n    message$: Observable<string>;\r\n    exerciseName: string;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './delete-exercise-dialog.component.html',\r\n    styleUrls: ['./delete-exercise-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeleteExerciseDialogComponent {\r\n\r\n    @Input()\r\n    isError = false;\r\n\r\n    @Input()\r\n    deleteExercise: DeleteExerciseDialogData;\r\n\r\n    constructor(\r\n        private readonly modalController: ModalController,\r\n    ) { }\r\n\r\n    async onCancel(): Promise<void> {\r\n        await this.modalController.dismiss(false, DialogRoles.CANCEL);\r\n    }\r\n\r\n    async onDeleteExercise(): Promise<void> {\r\n        await this.modalController.dismiss(true, DialogRoles.DELETE_EXERCISE);\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthStoreService } from '../../../services/store/auth/auth-store.service';\r\n\r\n@Component({\r\n    selector: 'bl-not-found',\r\n    templateUrl: './not-found.component.html',\r\n    styleUrls: ['./not-found.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NotFoundComponent {\r\n\r\n    isAuth$: Observable<boolean> = this.authStoreService.isAuth$;\r\n\r\n    constructor(\r\n        private readonly authStoreService: AuthStoreService,\r\n    ) { }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { isNeverCheck } from '../../../helpers/is-never-check.helper';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { Page } from '../../../models/common/types/page.type';\r\nimport { DateInterval, PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { PaginatorChanged } from '../../../models/common/interfaces/paginator.model';\r\nimport { DEFAULT_SIZE, INITIAL_PAGE } from '../../../constants/shared/paginator.const';\r\n\r\n@Component({\r\n    selector: 'bl-pagination',\r\n    templateUrl: './pagination.component.html',\r\n    styleUrls: ['./pagination.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationComponent {\r\n\r\n    readonly pageSizeOptions: number[] = [1, 3, 5, 10];\r\n\r\n    @Input()\r\n    isSearch = false;\r\n\r\n    @Input()\r\n    page: number = INITIAL_PAGE;\r\n\r\n    @Input()\r\n    size: number = DEFAULT_SIZE;\r\n\r\n    @Input()\r\n    isPreviousPage = false;\r\n\r\n    @Input()\r\n    isNextPage = false;\r\n\r\n    @Input()\r\n    data: StreamData<Paginator<PastTrainings>> | undefined = undefined;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Output()\r\n    readonly paginatorChanged: EventEmitter<PaginatorChanged> = new EventEmitter<PaginatorChanged>();\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n    ) { }\r\n\r\n    loadPage(\r\n        page?: Page,\r\n        dateInterval?: DateInterval,\r\n        earliestTrainingDate?: string,\r\n        lastPage?: number,\r\n    ): void {\r\n        if (this.isSearch) {\r\n            if (page) {\r\n                switch (page) {\r\n                    case 'First': {\r\n                        this.page = INITIAL_PAGE;\r\n                        break;\r\n                    }\r\n                    case 'Previous': {\r\n                        this.page--;\r\n                        break;\r\n                    }\r\n                    case 'Next': {\r\n                        this.page++;\r\n                        break;\r\n                    }\r\n                    case 'Last': {\r\n                        this.page = lastPage;\r\n                        break;\r\n                    }\r\n                    default:\r\n                        isNeverCheck(page);\r\n                }\r\n            }\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: true,\r\n            } as PaginatorChanged);\r\n        }\r\n        else {\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: false,\r\n                PageType: page,\r\n                DateInterval: dateInterval,\r\n                EarliestTrainingDate: earliestTrainingDate,\r\n            } as PaginatorChanged);\r\n        }\r\n    }\r\n\r\n    setPageText$(totalPages: number): Observable<string> {\r\n        return this.translateService.stream('common')\r\n            .pipe(\r\n                map((value: { [key: string]: string }) =>\r\n                    `\r\n                        ${value['page']}\r\n                        <strong class=\"primary\">${this.page?.toString() ?? '1'}</strong>\r\n                        ${value['of']}\r\n                        <strong class=\"primary\">${totalPages?.toString() ?? '1'}</strong>\r\n                    `),\r\n            );\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bl-skeleton-loader',\r\n    templateUrl: './skeleton-loader.component.html',\r\n    styleUrls: ['./skeleton-loader.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SkeletonLoaderComponent implements OnInit {\r\n\r\n    width: string;\r\n    height: string;\r\n    borderRadius: string;\r\n    margin: string;\r\n    className: string;\r\n\r\n    constructor(\r\n        private readonly elementRef: ElementRef<HTMLElement>,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        const host = this.elementRef.nativeElement;\r\n        if (this.className) {\r\n            host.classList.add(this.className);\r\n        }\r\n    }\r\n\r\n    styleSkeleton(): { [key: string]: string } {\r\n        return {\r\n            'width': this.width ?? '',\r\n            'height': this.height ?? '',\r\n            'border-radius': this.borderRadius ?? '',\r\n            'margin': this.margin ?? '',\r\n        };\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { IonInput } from '@ionic/angular';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, filter, takeUntil } from 'rxjs/operators';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\nimport { ExerciseStateType } from '../../../../models/training/new-training/training.model';\r\nimport { SetStateChanged } from '../../../../models/training/shared/set.model';\r\nimport { Set, SetConstituent } from '../../../../models/training/shared/set.model';\r\nimport { FormSetData } from '../../../../models/training/shared/set.model';\r\nimport { SetFormValidationErrors } from '../../../../models/training/shared/set.model';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport * as CommonValidators from '../../../../validators/shared/common.validators';\r\nimport * as SetValidators from '../../../../validators/training/set.validators';\r\n\r\n@Component({\r\n    selector: 'bl-sets',\r\n    templateUrl: './sets.component.html',\r\n    styleUrls: ['./sets.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        getControlValueAccessor(SetsComponent),\r\n        UnsubscribeService,\r\n    ],\r\n})\r\nexport class SetsComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n\r\n    readonly form: FormArray = new FormArray([]);\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    isExerciseFormSubmitted$: Observable<boolean> = of(false);\r\n\r\n    @Input()\r\n    exerciseStateChanged$: Observable<ExerciseStateType> = of(null);\r\n\r\n    @Input()\r\n    exerciseNameControl: AbstractControl | null;\r\n\r\n    @Input()\r\n    indexExercise = 0;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Output()\r\n    readonly setAdded: EventEmitter<SetStateChanged> = new EventEmitter<SetStateChanged>();\r\n\r\n    @Output()\r\n    readonly setDeleted: EventEmitter<Partial<SetStateChanged>> = new EventEmitter<Partial<SetStateChanged>>();\r\n\r\n    @Output()\r\n    readonly formStateChanged: EventEmitter<SetFormValidationErrors[]> = new EventEmitter<SetFormValidationErrors[]>();\r\n\r\n    @ViewChildren('weightLiftedEl')\r\n    readonly weightLiftedEl: QueryList<IonInput>;\r\n\r\n    constructor(\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n    ) { }\r\n\r\n    get formErrors(): SetFormValidationErrors[] {\r\n        let errors: SetFormValidationErrors[] = [];\r\n        if (this.form?.errors) {\r\n            const mappedKeys: SetFormValidationErrors[] =\r\n                Object.keys(this.form.errors)\r\n                    .map((key: string) => key as SetFormValidationErrors);\r\n            errors = errors.concat(mappedKeys);\r\n        }\r\n        this.form.controls.forEach((group: AbstractControl) => {\r\n            if (group?.errors) {\r\n                const mappedKeys: SetFormValidationErrors[] =\r\n                    Object.keys(group.errors)\r\n                        .map((key: string) => key as SetFormValidationErrors);\r\n                errors = errors.concat(mappedKeys);\r\n            }\r\n        });\r\n        return errors;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.form.setValidators([SetValidators.allSetsFilled()]);\r\n        this.form.updateValueAndValidity();\r\n        this.formStateChanged.emit(this.formErrors);\r\n\r\n        this.exerciseNameControl.valueChanges\r\n            .pipe(\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe((value: string) => {\r\n                value ? this.accessFormField('weightLifted', 0).enable() : this.accessFormField('weightLifted', 0).disable();\r\n                value ? this.accessFormField('reps', 0).enable() : this.accessFormField('reps', 0).disable();\r\n            });\r\n\r\n        this.exerciseStateChanged$\r\n            .pipe(\r\n                filter(state => state === 'Update'),\r\n                delay(200),\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe(async _ => {\r\n                if (this.weightLiftedEl?.first) {\r\n                    await this.weightLiftedEl.first.setFocus();\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.form.updateValueAndValidity({ emitEvent: true });\r\n    }\r\n\r\n    writeValue(sets: Set[]): void {\r\n        if (sets) {\r\n            if (sets.length > 0) {\r\n                for (const set of sets) {\r\n                    this.addSet(set);\r\n                }\r\n            }\r\n            else {\r\n                this.addSet();\r\n            }\r\n        }\r\n    }\r\n    //Sending parent new form value when form value changes\r\n    registerOnChange(fn: (formValue: Partial<Set[]>) => void): void {\r\n        this.form.valueChanges\r\n            .pipe(\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe((formValue: Partial<Set[]>) => {\r\n                this.formStateChanged.emit(this.formErrors);\r\n                fn(formValue as Partial<Set[]>);\r\n            });\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    getSets(): AbstractControl[] {\r\n        return (this.form as FormArray).controls;\r\n    }\r\n\r\n    addSet(set?: Set): void {\r\n        this.form.push(\r\n            new FormGroup({\r\n                setNumber: new FormControl(set ? (set.setNumber as number) : this.getSets().length + 1, [Validators.required]),\r\n                weightLifted: new FormControl({\r\n                    value: set ? set.weightLifted : null,\r\n                    disabled: this.exerciseNameControl.value ? false : true,\r\n                }, [Validators.min(1),\r\n                    Validators.max(1000),\r\n                    CommonValidators.isNumber()]),\r\n                reps: new FormControl({\r\n                    value: set ? set.reps : null,\r\n                    disabled: this.exerciseNameControl.value ? false : true,\r\n                }, [Validators.min(1),\r\n                    Validators.max(1000),\r\n                    Validators.pattern('^[0-9]*$')]),\r\n            }, {\r\n                validators: [SetValidators.bothValuesRequired(), SetValidators.isSetValid()],\r\n            }),\r\n        );\r\n        of(null)\r\n            .pipe(\r\n                delay(200),\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe(async _ => {\r\n                if (this.weightLiftedEl) {\r\n                    await this.weightLiftedEl.last?.setFocus();\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteSet(indexSet: number): void {\r\n        this.form.removeAt(indexSet);\r\n        this.setDeleted.emit({\r\n            indexExercise: this.indexExercise as number,\r\n            indexSet: indexSet as number,\r\n            newTotal: this.calculateTotal(),\r\n        } as Partial<SetStateChanged>);\r\n    }\r\n\r\n    onChangeSets(indexSet: number): void {\r\n        let total = 0;\r\n        let isWeightLiftedValid = false;\r\n        let isRepsValid = false;\r\n        if (this.accessFormField('weightLifted', indexSet)?.valid && this.accessFormField('weightLifted', indexSet)?.value) {\r\n            isWeightLiftedValid = true;\r\n        }\r\n        if (this.accessFormField('reps', indexSet)?.valid && this.accessFormField('reps', indexSet)?.value) {\r\n            isRepsValid = true;\r\n        }\r\n        if (isWeightLiftedValid && isRepsValid) {\r\n            total = this.calculateTotal();\r\n        }\r\n        this.setAdded.emit({\r\n            indexExercise: this.indexExercise,\r\n            indexSet: indexSet,\r\n            isWeightLiftedValid: isWeightLiftedValid,\r\n            isRepsValid: isRepsValid,\r\n            newTotal: total,\r\n            newSet: {\r\n                setNumber: +this.accessFormField('setNumber', indexSet).value,\r\n                weightLifted: +this.accessFormField('weightLifted', indexSet).value,\r\n                reps: +this.accessFormField('reps', indexSet).value,\r\n            } as Set,\r\n        } as SetStateChanged);\r\n    }\r\n\r\n    accessFormField(\r\n        formField: keyof FormSetData,\r\n        indexSet: number,\r\n    ): AbstractControl {\r\n        return this.form.at(indexSet)?.get(formField);\r\n    }\r\n\r\n    setIonComponentClass(\r\n        set: AbstractControl,\r\n        isExerciseFormSubmitted: boolean,\r\n        exerciseName: string | undefined,\r\n        setConstituent: SetConstituent,\r\n    ): boolean {\r\n        return ((setConstituent === 'weightLifted' ? set.errors?.weightLiftedRequired : set.errors?.repsRequired) && (isExerciseFormSubmitted || !!exerciseName));\r\n    }\r\n\r\n    private calculateTotal(): number {\r\n        let total = 0;\r\n        for (const group of this.getSets()) {\r\n            total += (+group.get('weightLifted')?.value * +group.get('reps')?.value);\r\n        }\r\n        return total;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { IonSelect, ModalController } from '@ionic/angular';\r\nimport { OverlayEventDetail } from '@ionic/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, combineLatest, EMPTY, from, Observable, of, Subject } from 'rxjs';\r\nimport { finalize, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\r\nimport { MESSAGE_DURATION } from '../../../../constants/shared/message-duration.const';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\nimport { GeneralResponseData } from '../../../../models/interfaces/general-response.model';\r\nimport { DEFAULT_WEIGHT_FORMAT } from '../../../../constants/shared/default-weight-format.const';\r\nimport { Exercise } from '../../../../models/training/exercise.model';\r\nimport { EditNewTrainingData } from '../../../../models/training/new-training/edit-training.model';\r\nimport { Training } from '../../../../models/training/new-training/training.model';\r\nimport { createInitialSet, SetFormValidationErrors, SetStateChanged, SetTrainingData } from '../../../../models/training/shared/set.model';\r\nimport { Set } from '../../../../models/training/shared/set.model';\r\nimport { FormControlExerciseData, FormGroupExerciseData, SingleExercise } from '../../../../models/training/shared/single-exercise.model';\r\nimport { FormControlSingleExercise } from '../../../../models/training/shared/single-exercise.model';\r\nimport { RoundTotalWeightPipe } from '../../../../pipes/training/new-training/round-total-weight/round-total-weight.pipe';\r\nimport { ToastControllerService } from '../../../../services/shared/toast-controller.service';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport { TrainingService } from '../../../../services/api/training/training.service';\r\nimport * as SingleExerciseValidators from '../../../../validators/training/single-exercise.validators';\r\nimport { DeleteExerciseDialogData, DeleteExerciseDialogComponent, DialogData } from '../../delete-exercise-dialog/delete-exercise-dialog.component';\r\nimport { DialogRoles } from '../../../../models/common/types/modal-roles.type';\r\nimport { ExerciseStateType } from '../../../../models/training/new-training/training.model';\r\nimport { TrainingStoreService } from '../../../../services/store/training/training-store.service';\r\nimport { EMPTY_TRAINING_EDIT } from '../../../../constants/training/new-training.const';\r\n\r\nconst INITIAL_WEIGHT = 0;\r\n\r\n@Component({\r\n    selector: 'bl-single-exercise',\r\n    templateUrl: './single-exercise.component.html',\r\n    styleUrls: ['./single-exercise.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        getControlValueAccessor(SingleExerciseComponent),\r\n        UnsubscribeService,\r\n    ],\r\n})\r\nexport class SingleExerciseComponent implements ControlValueAccessor {\r\n\r\n    readonly exerciseStateChanged$$: Subject<ExerciseStateType> = new Subject<ExerciseStateType>();\r\n    readonly isSubmitted$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    readonly exercises$: Observable<Exercise[]> | undefined = undefined;\r\n\r\n    readonly form: FormArray = new FormArray([]);\r\n    setErrors: SetFormValidationErrors[] = [];\r\n\r\n    exerciseChanged = false;\r\n    isApiLoading = false;\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    editData: EditNewTrainingData = EMPTY_TRAINING_EDIT;\r\n\r\n    @Input()\r\n    bodyweight: AbstractControl | null;\r\n\r\n    @Input()\r\n    trainingDate: AbstractControl | null;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @Output()\r\n    readonly exerciseAdded: EventEmitter<UIEvent> = new EventEmitter();\r\n\r\n    @ViewChildren('exercisePicker')\r\n    exercisePickerEls: QueryList<IonSelect>;\r\n\r\n    readonly currentExerciseState$: Observable<[SingleExercise[], Exercise[]]> =\r\n        this.exerciseStateChanged$$\r\n            .pipe(\r\n                startWith(undefined as ExerciseStateType),\r\n                switchMap(_ =>\r\n                    combineLatest([\r\n                        this.trainingStoreService.currentTrainingChanged$\r\n                            .pipe(\r\n                                take(1),\r\n                                map((currentTrainingState: Training) => currentTrainingState.exercises),\r\n                            ),\r\n                        this.trainingStoreService.allExercisesChanged$\r\n                            .pipe(\r\n                                take(1),\r\n                                map(value => value?.Value ?? []),\r\n                            ),\r\n                    ]),\r\n                ),\r\n            );\r\n\r\n    constructor(\r\n        private readonly trainingStoreService: TrainingStoreService,\r\n        private readonly trainingService: TrainingService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly toastControllerService: ToastControllerService,\r\n        private readonly modalController: ModalController,\r\n        private readonly roundTotalWeightPipe: RoundTotalWeightPipe,\r\n    ) {\r\n        this.form.setValidators([SingleExerciseValidators.checkDuplicateExerciseName(), SingleExerciseValidators.checkExerciseNumber()]);\r\n        this.form.updateValueAndValidity();\r\n    }\r\n\r\n    writeValue(exercises: SingleExercise[]): void {\r\n        if (exercises) {\r\n            if (exercises.length > 0) {\r\n                while (this.form.length !== 0) {\r\n                    this.form.removeAt(0);\r\n                }\r\n                (exercises as SingleExercise[]).forEach((exercise: SingleExercise, indexExercise: number) => {\r\n                    this.addExercise();\r\n                    if (exercise?.exerciseData?.name) {\r\n                        this.accessFormGroup('exerciseData', 'name', indexExercise).patchValue(exercise.exerciseData.name);\r\n                        this.accessFormGroup('exerciseData', 'imageUrl', indexExercise).patchValue(exercise.exerciseData.imageUrl);\r\n                        this.accessFormGroup('exerciseData', 'primaryMuscleGroup', indexExercise).patchValue(exercise.exerciseData.primaryMuscleGroup);\r\n                        this.accessFormGroup('exerciseData', 'translations', indexExercise).patchValue(exercise.exerciseData.translations);\r\n                        this.accessFormField('sets', indexExercise).patchValue(exercise.sets);\r\n                        this.accessFormField('total', indexExercise).patchValue(exercise?.total ? this.roundTotalWeightPipe.transform(exercise.total) : `0 ${DEFAULT_WEIGHT_FORMAT}`);\r\n                        this.accessFormField('disabledTooltip', indexExercise).patchValue(exercise.disabledTooltip);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: (formValue: Partial<SingleExercise[]>) => void): void {\r\n        this.form.valueChanges\r\n            .pipe(\r\n                takeUntil(this.unsubscribeService),\r\n            ).subscribe(fn);\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    onExerciseNameChange(\r\n        indexExercise: number,\r\n        element: IonSelect,\r\n    ): void {\r\n        if (element?.value) {\r\n            const currentTraining = { ...this.trainingStoreService.getCurrentTrainingState() };\r\n            const selectedExerciseData = currentTraining.exercises[indexExercise].availableExercises.find(exercise => exercise.name === element.value as string);\r\n            this.accessFormGroup('exerciseData', 'imageUrl', indexExercise).patchValue(selectedExerciseData.imageUrl);\r\n            this.accessFormGroup('exerciseData', 'primaryMuscleGroup', indexExercise).patchValue(selectedExerciseData.primaryMuscleGroup);\r\n            this.accessFormGroup('exerciseData', 'translations', indexExercise).patchValue(selectedExerciseData.translations);\r\n            this.trainingStoreService.updateExerciseChoices(\r\n                element.value as string,\r\n                indexExercise,\r\n                this.accessFormField('disabledTooltip', indexExercise).value as boolean,\r\n                currentTraining,\r\n                selectedExerciseData,\r\n            );\r\n            this.exerciseChanged = !this.exerciseChanged;\r\n            this.exerciseStateChanged$$.next('Update');\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    addExercise(event?: UIEvent): void {\r\n        this.form.push(new FormGroup({\r\n            exerciseData: new FormGroup({\r\n                name: new FormControl(null, [Validators.required]),\r\n                imageUrl: new FormControl(null),\r\n                primaryMuscleGroup: new FormControl(null),\r\n                translations: new FormControl(null),\r\n            }),\r\n            sets: new FormControl(createInitialSet()),\r\n            total: new FormControl(this.roundTotalWeightPipe.transform(INITIAL_WEIGHT), [Validators.required]),\r\n            disabledTooltip: new FormControl(true, [Validators.required]),\r\n        }));\r\n\r\n        if (event) {\r\n            this.trainingStoreService.addNewExercise(this.getAlreadyUsedExercises());\r\n            this.exerciseStateChanged$$.next('Add');\r\n            this.exerciseAdded.next(event);\r\n        }\r\n    }\r\n\r\n    async deleteExercise(\r\n        indexExercise: number,\r\n        exerciseName: string,\r\n    ): Promise<void> {\r\n        if (exerciseName) {\r\n            const modal = await this.modalController.create({\r\n                component: DeleteExerciseDialogComponent,\r\n                componentProps: {\r\n                    isError: false,\r\n                    deleteExercise: {\r\n                        message$: this.translateService.stream('training.new_training.delete_exercise_prompt'),\r\n                        exerciseName: exerciseName,\r\n                    } as DeleteExerciseDialogData,\r\n                } as DialogData,\r\n                keyboardClose: true,\r\n                swipeToClose: true,\r\n            });\r\n            await modal.present();\r\n\r\n            from(modal.onDidDismiss<boolean>())\r\n                .pipe(\r\n                    switchMap((response: OverlayEventDetail<boolean>) => {\r\n                        if (response.role === DialogRoles.DELETE_EXERCISE) {\r\n                            return this.trainingStoreService.currentTrainingChanged$\r\n                                .pipe(\r\n                                    take(1),\r\n                                    switchMap((currentTrainingState: Training) =>\r\n                                        this.trainingStoreService.deleteExercise(\r\n                                            currentTrainingState,\r\n                                            exerciseName,\r\n                                        ),\r\n                                    ),\r\n                                );\r\n                        }\r\n                        else {\r\n                            return EMPTY;\r\n                        }\r\n                    }),\r\n                    finalize(() => {\r\n                        this.exerciseStateChanged$$.next('Delete');\r\n                        this.changeDetectorRef.markForCheck();\r\n                    }),\r\n                    takeUntil(this.unsubscribeService),\r\n                )\r\n                .subscribe((data: [Training, Exercise[]]) => {\r\n                    this.exerciseChanged = !this.exerciseChanged;\r\n                    this.form.removeAt(indexExercise);\r\n                    this.trainingStoreService.pushToAvailableExercises(\r\n                        data[0] as Training,\r\n                        data[1] as Exercise[],\r\n                    );\r\n                });\r\n        }\r\n        else {\r\n            this.trainingStoreService.currentTrainingChanged$\r\n                .pipe(\r\n                    take(1),\r\n                    switchMap((currentTrainingState: Training) =>\r\n                        this.trainingStoreService.deleteExercise(\r\n                            currentTrainingState as Training,\r\n                            null,\r\n                            indexExercise,\r\n                        ),\r\n                    ),\r\n                    finalize(() => this.exerciseStateChanged$$.next('Delete')),\r\n                    takeUntil(this.unsubscribeService),\r\n                )\r\n                .subscribe(_ => this.form.removeAt(indexExercise));\r\n        }\r\n    }\r\n\r\n    onChangeSets($event: SetStateChanged): void {\r\n        of(null).pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe(_ => {\r\n            if ($event?.isWeightLiftedValid &&\r\n                $event?.isRepsValid &&\r\n                this.accessFormGroup('exerciseData', 'name', $event.indexExercise).value) {\r\n                    const trainingData: SetTrainingData = {\r\n                        exerciseName: this.accessFormGroup('exerciseData', 'name', $event.indexExercise).value as string,\r\n                        setNumber: $event.newSet.setNumber as number,\r\n                        weightLifted: $event.newSet.weightLifted as number,\r\n                        reps: $event.newSet.reps as number,\r\n                        total: $event.newTotal as number,\r\n                    };\r\n                    this.trainingStoreService.setsChanged(trainingData);\r\n                    this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform($event.newTotal));\r\n            }\r\n            else {\r\n                this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform(0));\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteSet($event: Partial<SetStateChanged>): void {\r\n        this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform($event.newTotal));\r\n        this.trainingStoreService.deleteSet(\r\n            $event.indexExercise as number,\r\n            $event.indexSet as number,\r\n            $event.newTotal as number,\r\n        );\r\n    }\r\n\r\n    getExercises(): AbstractControl[] {\r\n        return (this.form as FormArray).controls;\r\n    }\r\n\r\n    accessFormField(\r\n        formField: keyof FormControlSingleExercise,\r\n        indexExercise: number,\r\n    ): AbstractControl {\r\n        return this.form.at(indexExercise)?.get(formField);\r\n    }\r\n\r\n    accessFormGroup(\r\n        formGroup: keyof FormGroupExerciseData,\r\n        formField: keyof FormControlExerciseData,\r\n        indexExercise: number,\r\n    ): AbstractControl {\r\n        return this.form.at(indexExercise).get(formGroup)?.get(formField);\r\n    }\r\n\r\n    onSetFormChange($event: SetFormValidationErrors[]): void {\r\n        this.setErrors = $event;\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    isAddingExercisesDisabled(\r\n        currentExercisesLength: number,\r\n        allExercisesLength: number,\r\n    ): boolean {\r\n        if (this.getExercises().length > 0) {\r\n            return (currentExercisesLength >= allExercisesLength)\r\n                || ((!this.accessFormGroup('exerciseData', 'name', this.getExercises().length - 1)?.value) && this.getExercises().length > 0)\r\n                || this.setErrors.includes('setNotEntered')\r\n                || this.setErrors.includes('setNotValid');\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.isSubmitted$$.next(true);\r\n        if (!this.form.valid || this.setErrors.length > 0) {\r\n            return;\r\n        }\r\n        this.isApiLoading = true;\r\n\r\n        this.gatherAllFormData().pipe(\r\n            switchMap((apiNewTraining: Training) => {\r\n                if (this.editMode) {\r\n                    return this.trainingService.updateTraining(\r\n                        apiNewTraining,\r\n                        this.editData.editTraining?._id,\r\n                    );\r\n                }\r\n                else {\r\n                    return this.trainingService.addTraining(apiNewTraining);\r\n                }\r\n            }),\r\n            finalize(() => {\r\n                this.isApiLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe(async (response: GeneralResponseData) => {\r\n            await this.toastControllerService.displayToast({\r\n                message: this.translateService.instant(response.Message),\r\n                duration: MESSAGE_DURATION.GENERAL,\r\n                color: 'primary',\r\n            });\r\n        });\r\n    }\r\n\r\n    private gatherAllFormData(): Observable<Training> {\r\n        return this.trainingStoreService.currentTrainingChanged$.pipe(\r\n            take(1),\r\n            map((currentTrainingState: Training) => {\r\n                const exerciseFormData: SingleExercise[] = [];\r\n\r\n                this.getExercises().forEach((_exercise: AbstractControl, indexExercise: number) => {\r\n                    const splittedTotal: string[] = (this.accessFormField('total', indexExercise).value as string).split(' ');\r\n                    const exerciseData: Exercise = {\r\n                        name: this.accessFormGroup('exerciseData', 'name', indexExercise).value as string,\r\n                        imageUrl: this.accessFormGroup('exerciseData', 'imageUrl', indexExercise).value as string,\r\n                        primaryMuscleGroup: this.accessFormGroup('exerciseData', 'primaryMuscleGroup', indexExercise).value as string,\r\n                        translations: this.accessFormGroup('exerciseData', 'translations', indexExercise).value as { hr: string; en: string },\r\n                    };\r\n                    exerciseFormData.push({\r\n                        exerciseData,\r\n                        sets: [],\r\n                        total: +splittedTotal[0],\r\n                        disabledTooltip: this.accessFormField('disabledTooltip', indexExercise).value as boolean,\r\n                        availableExercises: (currentTrainingState.exercises)[indexExercise]?.availableExercises || [],\r\n                    });\r\n\r\n                    const formSetData: Set[] = [];\r\n                    (this.accessFormField('sets', indexExercise).value as Set[]).forEach((set: Set) => {\r\n                        const apiSet: Set = {\r\n                            setNumber: +set.setNumber as number,\r\n                            weightLifted: +set.weightLifted as number,\r\n                            reps: +set.reps as number,\r\n                        };\r\n                        formSetData.push(apiSet);\r\n                    });\r\n                    exerciseFormData[indexExercise].sets = formSetData;\r\n                });\r\n\r\n                return {\r\n                    exercises: exerciseFormData,\r\n                    bodyweight: this.bodyweight.value ? +this.bodyweight.value : null,\r\n                    trainingDate: new Date(this.trainingDate.value) ?? new Date(),\r\n                    editMode: this.editMode,\r\n                    userId: currentTrainingState.userId,\r\n                } as Training;\r\n            }),\r\n            takeUntil(this.unsubscribeService),\r\n        );\r\n    }\r\n\r\n    private getAlreadyUsedExercises(): string[] {\r\n        const alreadyUsedExercises: string[] = [];\r\n        for (const exercise of this.getExercises()) {\r\n            if (exercise.get('exerciseData.name').value) {\r\n                alreadyUsedExercises.push(exercise.get('exerciseData.name').value as string);\r\n            }\r\n        }\r\n        return alreadyUsedExercises as string[];\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\n\r\n@Component({\r\n    selector: 'bl-total-weight',\r\n    templateUrl: './total-weight.component.html',\r\n    styleUrls: ['./total-weight.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [getControlValueAccessor(TotalWeightComponent)],\r\n})\r\nexport class TotalWeightComponent implements ControlValueAccessor {\r\n\r\n    value: string;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    onChange: () => void;\r\n    onTouched: () => void;\r\n\r\n    constructor(\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n    ) { }\r\n\r\n    writeValue(value: string): void {\r\n        this.value = value;\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: () => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { EMPTY, Observable, of } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { Training } from '../../../../../models/training/new-training/training.model';\r\nimport { StreamData } from '../../../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../../../models/common/interfaces/paginator.model';\r\nimport { DialogRoles } from '../../../../../models/common/types/modal-roles.type';\r\nimport { PastTrainings } from '../../../../../models/training/past-trainings/past-trainings.model';\r\nimport { SharedStoreService } from '../../../../../services/store/shared/shared-store.service';\r\nimport { DeleteTrainingActionService } from '../../../../../services/api/training/delete-training-action.service';\r\nimport { SearchDataDto } from '../../../../../models/common/interfaces/paginator.model';\r\nimport { DEFAULT_SIZE, INITIAL_PAGE } from '../../../../../constants/shared/paginator.const';\r\n\r\nexport interface DeleteTrainingActionDialogData {\r\n    readonly title$: Observable<string>;\r\n    readonly dateCreated$: Observable<string>;\r\n    readonly timeCreated$: Observable<string>;\r\n    readonly training$: Observable<Training>;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './delete-training-action.component.html',\r\n    styleUrls: ['./delete-training-action.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeleteTrainingActionComponent {\r\n\r\n    @Input()\r\n    title$: Observable<string> = of('');\r\n\r\n    @Input()\r\n    dateCreated$: Observable<string> = of('');\r\n\r\n    @Input()\r\n    timeCreated$: Observable<string> = of('');\r\n\r\n    @Input()\r\n    training$: Observable<Training>;\r\n\r\n    isLoading = false;\r\n\r\n    constructor(\r\n        private readonly sharedStoreService: SharedStoreService,\r\n        private readonly deleteTrainingActionService: DeleteTrainingActionService,\r\n        private readonly modalController: ModalController,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly route: ActivatedRoute,\r\n    ) { }\r\n\r\n    deleteTraining(trainingId: string): void {\r\n        this.isLoading = true;\r\n        this.deleteTrainingActionService.deleteTraining(\r\n            trainingId,\r\n            this.getDeleteTrainingMeta(),\r\n        ).pipe(\r\n            catchError(_ => EMPTY),\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe(async (response: StreamData<Paginator<PastTrainings>>) => {\r\n            this.sharedStoreService.deletedTraining$$.next(response);\r\n            await this.modalController.dismiss(false, DialogRoles.DELETE_TRAINING);\r\n        });\r\n    }\r\n\r\n    async onCancel(): Promise<void> {\r\n        await this.modalController.dismiss(false, DialogRoles.CANCEL);\r\n    }\r\n\r\n    private getDeleteTrainingMeta(): {\r\n        searchData: SearchDataDto | undefined;\r\n        currentDate: Date | undefined;\r\n    } {\r\n        const isSearch = !!this.route.snapshot.queryParams?.search;\r\n        if (isSearch) {\r\n            const searchValue = (this.route.snapshot.queryParams?.search as string).trim();\r\n            const page = +this.route.snapshot.queryParams?.page ?? INITIAL_PAGE;\r\n            const size = +this.route.snapshot.queryParams?.size ?? DEFAULT_SIZE;\r\n            return {\r\n                searchData: {\r\n                    page: page,\r\n                    size: size,\r\n                    searchValue: searchValue,\r\n                } as SearchDataDto,\r\n                currentDate: undefined,\r\n            };\r\n        }\r\n        else {\r\n            const splittedDate = (this.route.snapshot.queryParams.startDate as string)?.split('-');\r\n            return {\r\n                searchData: undefined,\r\n                currentDate: new Date(`\r\n                    ${splittedDate[2]}-\r\n                    ${splittedDate[1]}-\r\n                    ${splittedDate[0]}\r\n                `),\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bl-more-training-action',\r\n    templateUrl: './more-training-action.component.html',\r\n    styleUrls: ['./more-training-action.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MoreTrainingActionComponent {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n//if using mobile device emulator: http://192.168.0.114:3000\r\nexport const environment = {\r\n    production: false,\r\n    BACKEND: 'http://localhost:3000',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(_err => {\r\n      //TODO\r\n  });\r\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t70079,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t25593,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t13225,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t4812,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t86655,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t44856,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t13059,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t58648,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t98308,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t44690,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t64090,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t36214,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t69447,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t79689,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t18840,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t40749,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t69667,\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t83288,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t35473,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t53634,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t22855,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t495,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t58737,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t99632,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t54446,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t32275,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t48050,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t18994,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t23592,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t35454,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t290,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t92666,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t64816,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t45534,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t94902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t91938,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t14832,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t90668,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t61624,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t19989,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t28902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t70199,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t48395,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t96357,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t38268,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t15269,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t32875,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 50863;\nmodule.exports = webpackAsyncContext;"],"names":["NgModule","PreloadAllModules","RouterModule","AuthGuard","NotFoundResolverService","NotFoundComponent","routes","path","redirectTo","pathMatch","loadChildren","then","module","AuthModule","TrainingModule","canLoad","component","resolve","AppRoutingModule","imports","forRoot","preloadingStrategy","exports","HttpClient","Injectable","Router","of","switchMap","tap","environment","PreferencesService","AuthStoreService","PreferencesStoreService","AuthService","constructor","http","router","authStoreService","preferencesService","preferencesStoreService","signup","language","weightFormat","email","password","confirmPassword","signupData","Email","Password","ConfirmPassword","preferences","LanguageCode","WeightFormat","post","BACKEND","login","authData","pipe","response","Token","emitLoggedUser","emitIsAuth","setToken","expiresInDuration","ExpiresIn","setAuthTimer","now","Date","expirationDate","getTime","saveLS","getToken","_id","navigate","getPreferences","emitPreferences","_","providedIn","DatePipe","HttpParams","ModalController","TranslateService","map","mapDateInterval","DeleteTrainingActionComponent","DeleteTrainingActionService","modalController","datePipe","translateService","perform","data","openDeleteTrainingDialog","modal","create","componentProps","title$","stream","dateCreated$","weekDays","dayIndex","value","transform","training","trainingDate","timeCreated$","timeCreated","training$","present","deleteTraining","trainingId","deleteTrainingMeta","params","set","JSON","stringify","delete","LoadingController","LoadingControllerService","loadingController","displayLoader","options","loading","message","instant","keyboardClose","dismissLoader","dismiss","MESSAGE_DURATION","ToastControllerService","toastControllerService","userId","get","setPreferences","preferenceChanged","apiPreferences","ShowByPeriod","put","UserId","use","Message","displayToast","duration","GENERAL","color","ToastController","toastController","toast","BehaviorSubject","LocalStorageItems","_loggedUser$$","asObservable","_isAuth$$","token","getLoggedUser","getValue","loggedUser","next","getIsAuth","isAuth","autoLogin","parse","localStorage","getItem","USER_DATA","userData","ExpirationDate","expiresIn","logout","clearTimeout","tokenTimer","clearData","setTimeout","setItem","removeItem","TRAINING_STATE","QUERY_PARAMS","ChangeDetectionStrategy","ChangeDetectorRef","Component","ViewChild","FormControl","FormGroup","Validators","catchError","finalize","takeUntil","IonInput","EMPTY","LoginService","AuthCustomValidators","UnsubscribeService","IonFocusDurations","LoginComponent","unsubscribeService","loginService","authService","changeDetectorRef","loadingControllerService","form","required","minLength","maxLength","asyncValidators","passwordFitsEmail","focusDuration","LOGIN","onSubmit","valid","isLoading","accessFormData","markForCheck","subscribe","formFieldName","args","read","selector","template","changeDetection","OnPush","providers","SignupService","SignupComponent","signupService","validators","isEmailAvailable","samePasswords","SIGNUP","Success","Input","MenuController","PopoverController","take","LanguagesComponent","navigationService","popoverController","menuController","ImageUrl","LanguageName","changeLanguage","currentPreferences","loggedUser$","close","startOfWeek","startOfDay","endOfWeek","endOfDay","format","TrainingStoreService","SharedStoreService","QUERY_PARAMS_DATE_FORMAT","SideNavComponent","sharedStoreService","trainingStoreService","isAuth$","preferencesChanged$","onLogout","clearTrainingState","goToPastTrainings","pastTrainingsQueryParams$","queryParams","showByPeriod","_a","_b","startDate","weekStartsOn","endDate","showBy","openPopover","$event","popover","event","preferences$","side","IonDatetime","DialogRoles","DateTimePickerComponent","dateChanged","currentDateValue","dateValue","dateTimeEl","cancel","undefined","CANCEL","select","confirm","SELECT_DATE","DeleteExerciseDialogComponent","onCancel","onDeleteExercise","DELETE_EXERCISE","EventEmitter","Output","ViewChildren","FormArray","delay","filter","getControlValueAccessor","CommonValidators","SetValidators","SetsComponent","formErrors","errors","mappedKeys","Object","keys","key","concat","controls","forEach","group","ngOnInit","setValidators","allSetsFilled","updateValueAndValidity","formStateChanged","emit","exerciseNameControl","valueChanges","accessFormField","enable","disable","exerciseStateChanged$","state","weightLiftedEl","first","setFocus","ngOnChanges","emitEvent","writeValue","sets","length","addSet","registerOnChange","fn","formValue","registerOnTouched","onTouched","getSets","push","setNumber","weightLifted","disabled","min","max","isNumber","reps","pattern","bothValuesRequired","isSetValid","last","deleteSet","indexSet","removeAt","setDeleted","indexExercise","newTotal","calculateTotal","onChangeSets","total","isWeightLiftedValid","isRepsValid","_c","_d","setAdded","newSet","formField","at","setIonComponentClass","isExerciseFormSubmitted","exerciseName","setConstituent","weightLiftedRequired","repsRequired","SetsComponent_1","combineLatest","from","Subject","startWith","DEFAULT_WEIGHT_FORMAT","createInitialSet","RoundTotalWeightPipe","TrainingService","SingleExerciseValidators","EMPTY_TRAINING_EDIT","INITIAL_WEIGHT","SingleExerciseComponent","trainingService","roundTotalWeightPipe","exerciseStateChanged$$","currentTrainingChanged$","currentTrainingState","exercises","allExercisesChanged$","Value","checkDuplicateExerciseName","checkExerciseNumber","exercise","addExercise","exerciseData","name","accessFormGroup","patchValue","imageUrl","primaryMuscleGroup","translations","disabledTooltip","onExerciseNameChange","element","currentTraining","getCurrentTrainingState","selectedExerciseData","availableExercises","find","updateExerciseChoices","exerciseChanged","addNewExercise","getAlreadyUsedExercises","exerciseAdded","deleteExercise","isError","message$","swipeToClose","onDidDismiss","role","pushToAvailableExercises","trainingData","setsChanged","getExercises","formGroup","onSetFormChange","setErrors","isAddingExercisesDisabled","currentExercisesLength","allExercisesLength","includes","isSubmitted$$","isApiLoading","gatherAllFormData","apiNewTraining","editMode","updateTraining","editData","editTraining","addTraining","exerciseFormData","_exercise","splittedTotal","split","formSetData","apiSet","bodyweight","alreadyUsedExercises","SingleExerciseComponent_1","ActivatedRoute","DEFAULT_SIZE","INITIAL_PAGE","deleteTrainingActionService","route","getDeleteTrainingMeta","deletedTraining$$","DELETE_TRAINING","isSearch","snapshot","search","searchValue","trim","page","size","_e","_f","searchData","currentDate","splittedDate","_g"],"sourceRoot":"webpack:///"}