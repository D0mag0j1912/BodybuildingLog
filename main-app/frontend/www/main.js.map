{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/constants/enums/model-roles.enum.ts","./src/app/constants/enums/storage-items.enum.ts","./src/app/constants/shared/default-language.const.ts","./src/app/constants/shared/default-weight-unit.const.ts","./src/app/constants/shared/ion-focus-durations.const.ts","./src/app/constants/shared/message-duration.const.ts","./src/app/constants/shared/paginator.const.ts","./src/app/constants/training/new-training.const.ts","./src/app/constants/training/past-trainings-date-format.const.ts","./src/app/directives/autofocus/autofocus.directive.ts","./src/app/directives/autofocus/autofocus.module.ts","./src/app/directives/pagination/pagination.directive.ts","./src/app/directives/skeleton-loader/skeleton-loader.directive.ts","./src/app/directives/skeleton-loader/skeleton-loader.module.ts","./src/app/guards/auth.guard.ts","./src/app/helpers/is-never-check.helper.ts","./src/app/helpers/training/past-trainings/map-past-trainings-dates.helper.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/interceptors/error.interceptor.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/navigation.module.ts","./src/app/modules/shared.module.ts","./src/app/pipes/pipes.module.ts","./src/app/pipes/shared/sanitize-html/sanitize-html.module.ts","./src/app/pipes/shared/sanitize-html/sanitize-html.pipe.ts","./src/app/pipes/training/new-training/filter-available-exercises.pipe.ts","./src/app/pipes/training/past-trainings/map-training-actions.pipe.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.module.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.pipe.ts","./src/app/services/api/auth/auth.service.ts","./src/app/services/api/auth/login.service.ts","./src/app/services/api/auth/signup.service.ts","./src/app/services/api/training/delete-training-action.service.ts","./src/app/services/errors/sentry.service.ts","./src/app/services/shared/loading-controller.service.ts","./src/app/services/shared/not-found-resolver.service.ts","./src/app/services/shared/preferences.service.ts","./src/app/services/shared/toast-controller.service.ts","./src/app/services/shared/unsubscribe.service.ts","./src/app/services/store/auth/auth-store.service.ts","./src/app/services/store/shared/preferences-store.service.ts","./src/app/services/store/shared/shared-store.service.ts","./src/app/services/store/training/exercises-store.service.ts","./src/app/services/store/training/new-training-store.service.ts","./src/app/services/store/training/past-trainings-store.service.ts","./src/app/validators/auth/auth.validators.ts","./src/app/views/auth/login/login.component.ts","./src/app/views/auth/signup/signup.component.ts","./src/app/views/navigation/preferences/preferences.component.ts","./src/app/views/navigation/side-nav/side-nav.component.ts","./src/app/views/shared/datetime-picker/datetime-picker.component.ts","./src/app/views/shared/not-found/not-found.component.ts","./src/app/views/shared/pagination/pagination.component.ts","./src/app/views/shared/skeleton-loader/skeleton-loader.component.ts","./src/app/views/shared/training/training-actions/delete-training-action/delete-training-action.component.ts","./src/app/views/shared/training/training-actions/more-training-action/more-training-action.component.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object"],"sourcesContent":["import { NgModule, Type } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthModule } from './modules/auth/auth.module';\r\nimport { NotFoundResolverService } from './services/shared/not-found-resolver.service';\r\nimport { NotFoundComponent } from './views/shared/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '/auth/login',\r\n        pathMatch: 'full',\r\n    },\r\n    {\r\n        path: 'auth',\r\n        loadChildren: async (): Promise<Routes | Type<AuthModule>> =>\r\n            import('./modules/auth/auth.module').then((module) => module.AuthModule),\r\n    },\r\n    {\r\n        path: 'training',\r\n        loadChildren: async (): Promise<Routes | Type<AuthModule>> =>\r\n            import('./modules/training/training.module').then((module) => module.TrainingModule),\r\n        canLoad: [AuthGuard],\r\n    },\r\n    {\r\n        path: 'not-found',\r\n        component: NotFoundComponent,\r\n        resolve: [NotFoundResolverService],\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '/not-found',\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { StorageItems } from './constants/enums/storage-items.enum';\r\nimport { UnsubscribeService } from './services/shared/unsubscribe.service';\r\nimport { NewTrainingStoreService } from './services/store/training/new-training-store.service';\r\nimport { PastTrainingsStoreService } from './services/store/training/past-trainings-store.service';\r\n\r\n@Component({\r\n    selector: 'bl-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class AppComponent implements OnInit {\r\n    constructor(\r\n        private readonly _newTrainingStoreService: NewTrainingStoreService,\r\n        private readonly _pastTrainingsStoreService: PastTrainingsStoreService,\r\n        private readonly _translateService: TranslateService,\r\n        private readonly _unsubscribeService: UnsubscribeService,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this._newTrainingStoreService\r\n            .keepTrainingState()\r\n            .pipe(takeUntil(this._unsubscribeService))\r\n            .subscribe();\r\n\r\n        this._pastTrainingsStoreService\r\n            .keepStreamValues([\r\n                StorageItems.PAST_TRAININGS_SCROLL_WRAPPER,\r\n                StorageItems.QUERY_PARAMS,\r\n            ])\r\n            .pipe(takeUntil(this._unsubscribeService))\r\n            .subscribe();\r\n\r\n        this._translateService.setDefaultLang('en');\r\n    }\r\n}\r\n","import { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { init } from '@sentry/angular';\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\r\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\r\nimport { NavigationModule } from './modules/navigation.module';\r\nimport { SentryService } from './services/errors/sentry.service';\r\n\r\ninit({\r\n    dsn: 'https://b4903b17554c4e40bbada176e50e4719@o997027.ingest.sentry.io/5955490',\r\n});\r\n\r\nexport function httpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n    return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n    declarations: [AppComponent],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        NavigationModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: httpLoaderFactory,\r\n                deps: [HttpClient],\r\n            },\r\n        }),\r\n        IonicModule.forRoot(),\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi: true,\r\n        },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ErrorInterceptor,\r\n            multi: true,\r\n        },\r\n        {\r\n            provide: ErrorHandler,\r\n            useClass: SentryService,\r\n        },\r\n        {\r\n            provide: RouteReuseStrategy,\r\n            useClass: IonicRouteStrategy,\r\n        },\r\n        HttpClient,\r\n        AuthGuard,\r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","export enum DialogRoles {\r\n    CANCEL = 'CANCEL',\r\n    DELETE_TRAINING = 'DELETE_TRAINING',\r\n    SELECT_DATE = 'SELECT_DATE',\r\n    REORDER_EXERCISES = 'REORDER_EXERCISES',\r\n    CHANGE_SET_CATEGORY = 'CHANGE_SET_CATEGORY',\r\n}\r\n","export enum StorageItems {\r\n    TRAINING_STATE = 'trainingState',\r\n    USER_DATA = 'userData',\r\n    QUERY_PARAMS = 'queryParams',\r\n    PAST_TRAININGS_SCROLL_WRAPPER = 'pastTrainingsScrollWrapper',\r\n}\r\n","export const DEFAULT_LANGUAGE = 'en';\r\n","import { WeightUnit } from '../../models/common/preferences.type';\r\n\r\nexport const DEFAULT_WEIGHT_UNIT: WeightUnit = 'kg';\r\n","export enum IonFocusDurations {\r\n    LOGIN = 350,\r\n    SIGNUP = 500,\r\n}\r\n","export const MESSAGE_DURATION = Object.freeze({\r\n    GENERAL: 3000,\r\n    ERROR: 5000,\r\n} as const);\r\n","export const DEFAULT_SIZE = 3;\r\nexport const INITIAL_PAGE = 1;\r\n","import { Exercise } from '../../models/training/exercise.model';\r\nimport { NewTraining } from '../../models/training/new-training/new-training.model';\r\nimport { SingleExercise } from '../../models/training/new-training/single-exercise/single-exercise.model';\r\nimport { DEFAULT_WEIGHT_UNIT } from '../shared/default-weight-unit.const';\r\n\r\nexport const TOTAL_INITIAL_WEIGHT = 0;\r\n\r\nexport const createEmptyExercise = (exercises: Exercise[]): SingleExercise => ({\r\n    exerciseData: {\r\n        name: '',\r\n        imageUrl: '',\r\n        primaryMuscleGroup: '',\r\n        translations: {\r\n            hr: '',\r\n            en: '',\r\n        },\r\n        availableSetCategories: ['freeWeighted'],\r\n        selectedSetCategories: [],\r\n    },\r\n    sets: [],\r\n    total: TOTAL_INITIAL_WEIGHT,\r\n    availableExercises: [...exercises],\r\n});\r\n\r\nexport const EMPTY_TRAINING: NewTraining = {\r\n    exercises: [createEmptyExercise([])],\r\n    editMode: false,\r\n    userId: '',\r\n    _id: '',\r\n    bodyweight: null,\r\n    trainingDate: new Date().toISOString(),\r\n    weightUnit: DEFAULT_WEIGHT_UNIT,\r\n};\r\n","export const QUERY_PARAMS_DATE_FORMAT = 'dd-MM-yyyy';\r\nexport const TEMPLATE_DATE_FORMAT = 'dd.MM.yyyy';\r\n","import { AfterViewInit, Directive, Input } from '@angular/core';\r\nimport { IonInput } from '@ionic/angular';\r\n\r\n@Directive({ selector: '[ionFocus]' })\r\nexport class AutofocusDirective implements AfterViewInit {\r\n    @Input('duration')\r\n    duration = 350;\r\n\r\n    private firstTime = true;\r\n\r\n    constructor(private readonly ionInput: IonInput) {}\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.firstTime) {\r\n            setTimeout(() => {\r\n                this.ionInput?.setFocus();\r\n                this.firstTime = false;\r\n            }, this.duration);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AutofocusDirective } from './autofocus.directive';\r\n\r\n@NgModule({\r\n    declarations: [AutofocusDirective],\r\n    exports: [AutofocusDirective],\r\n})\r\nexport class AutofocusModule {}\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({ selector: 'bl-pagination' })\r\nexport class PaginationDirective {\r\n    constructor(readonly elementRef: ElementRef<HTMLElement>, readonly renderer2: Renderer2) {\r\n        this.renderer2.addClass(this.elementRef.nativeElement as HTMLElement, 'bl-pagination');\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    Input,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { SkeletonLoaderComponent } from '../../views/shared/skeleton-loader/skeleton-loader.component';\r\n\r\n@Directive({ selector: '[skeleton]' })\r\nexport class SkeletonLoaderDirective implements OnChanges {\r\n    @Input('skeleton')\r\n    isLoading = false;\r\n\r\n    @Input('skeletonRepeat')\r\n    size = 1;\r\n\r\n    @Input('skeletonWidth')\r\n    width: string;\r\n\r\n    @Input('skeletonHeight')\r\n    height: string;\r\n\r\n    @Input('skeletonBorderRadius')\r\n    borderRadius: string;\r\n\r\n    @Input('skeletonMargin')\r\n    margin: string;\r\n\r\n    @Input('skeletonClassName')\r\n    className: string;\r\n\r\n    constructor(\r\n        private readonly _template: TemplateRef<unknown>,\r\n        private readonly _viewContainerRef: ViewContainerRef,\r\n    ) {}\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes?.isLoading) {\r\n            this._viewContainerRef.clear();\r\n\r\n            if (changes?.isLoading?.currentValue) {\r\n                Array.from({ length: this.size }).forEach((_) => {\r\n                    const ref = this._viewContainerRef.createComponent(SkeletonLoaderComponent);\r\n\r\n                    Object.assign(ref.instance, {\r\n                        width: this.width,\r\n                        height: this.height,\r\n                        borderRadius: this.borderRadius,\r\n                        margin: this.margin,\r\n                        className: this.className,\r\n                    });\r\n                });\r\n            } else {\r\n                this._viewContainerRef.createEmbeddedView(this._template);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SkeletonLoaderDirective } from './skeleton-loader.directive';\r\n\r\n@NgModule({\r\n    declarations: [SkeletonLoaderDirective],\r\n    exports: [SkeletonLoaderDirective],\r\n})\r\nexport class SkeletonLoaderModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanLoad, Route, Router, UrlTree } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { PreferencesService } from '../services/shared/preferences.service';\r\nimport { AuthStoreService } from '../services/store/auth/auth-store.service';\r\nimport { PreferencesStoreService } from '../services/store/shared/preferences-store.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanLoad {\r\n    constructor(\r\n        private _preferencesService: PreferencesService,\r\n        private _preferencesStoreService: PreferencesStoreService,\r\n        private _authStoreService: AuthStoreService,\r\n        private _translateService: TranslateService,\r\n        private _router: Router,\r\n    ) {}\r\n\r\n    canLoad(_route: Route): Observable<boolean | UrlTree> {\r\n        return this._authStoreService.isAuth$.pipe(\r\n            take(1),\r\n            switchMap((isAuth) => {\r\n                if (!isAuth) {\r\n                    return from(this._authStoreService.autoLogin());\r\n                } else {\r\n                    return of(isAuth);\r\n                }\r\n            }),\r\n            switchMap((isAuth) => {\r\n                if (!isAuth) {\r\n                    return of(isAuth);\r\n                } else {\r\n                    return this._authStoreService.loggedUser$.pipe(\r\n                        take(1),\r\n                        switchMap((loggedUser) => {\r\n                            if (loggedUser) {\r\n                                return this._preferencesService.getPreferences(loggedUser._id).pipe(\r\n                                    tap((preferences) =>\r\n                                        this._preferencesStoreService.emitPreferences(preferences),\r\n                                    ),\r\n                                    switchMap((preferences) =>\r\n                                        this._translateService.use(\r\n                                            preferences.languageCode || 'en',\r\n                                        ),\r\n                                    ),\r\n                                    switchMap((_) => of(isAuth)),\r\n                                );\r\n                            } else {\r\n                                return of(isAuth);\r\n                            }\r\n                        }),\r\n                    );\r\n                }\r\n            }),\r\n            map((isAuth) => {\r\n                if (!isAuth) {\r\n                    return this._router.createUrlTree(['/auth/login']);\r\n                }\r\n                return true;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","export function isNeverCheck(_x: never): never {\r\n    throw new Error(\"Didn't expect to get here\");\r\n}\r\n","import { startOfDay } from 'date-fns';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { Paginator } from '../../../models/common/paginator.model';\r\nimport {\r\n    DateInterval,\r\n    PastTrainings,\r\n} from '../../../models/training/past-trainings/past-trainings.model';\r\n\r\nexport function mapDateInterval(\r\n    response: StreamData<Paginator<PastTrainings>>,\r\n): StreamData<Paginator<PastTrainings>> {\r\n    return {\r\n        ...response,\r\n        Value: {\r\n            ...response.Value,\r\n            Results: {\r\n                ...response.Value.Results,\r\n                Dates: {\r\n                    StartDate: response?.Value?.Results?.Dates?.StartDate\r\n                        ? startOfDay(new Date(response.Value?.Results?.Dates?.StartDate))\r\n                        : undefined,\r\n                    EndDate: response?.Value?.Results?.Dates?.EndDate\r\n                        ? startOfDay(new Date(response.Value?.Results?.Dates?.EndDate))\r\n                        : undefined,\r\n                } as DateInterval,\r\n            } as PastTrainings,\r\n        } as Paginator<PastTrainings>,\r\n    };\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthStoreService } from '../services/store/auth/auth-store.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private readonly authStoreService: AuthStoreService) {}\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        const token = this.authStoreService.getToken();\r\n        const authRequest: HttpRequest<unknown> = request.clone({\r\n            headers: request.headers.set('authorization', 'Bearer ' + token),\r\n        });\r\n        return next.handle(authRequest);\r\n    }\r\n}\r\n","import {\r\n    HttpErrorResponse,\r\n    HttpEvent,\r\n    HttpHandler,\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { captureException } from '@sentry/minimal';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { MESSAGE_DURATION } from '../constants/shared/message-duration.const';\r\nimport { ErrorMessage } from '../models/common/common.model';\r\nimport { ToastControllerService } from '../services/shared/toast-controller.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(\r\n        private readonly toastControllerService: ToastControllerService,\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        return next.handle(request).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                let errorMessage: string;\r\n                if (error instanceof HttpErrorResponse) {\r\n                    captureException(error);\r\n                    //TODO: fix for Ionic\r\n                    if (!window.navigator.onLine) {\r\n                        errorMessage = this.translateService.instant(\r\n                            'common.errors.internet_required',\r\n                        );\r\n                    } else {\r\n                        if ((error.error as ErrorMessage).statusCode === 404) {\r\n                            errorMessage = this.translateService.instant(\r\n                                'common.errors.unknown_error',\r\n                            );\r\n                        } else {\r\n                            if (Array.isArray((error.error as ErrorMessage).message)) {\r\n                                errorMessage = this.translateService.instant(\r\n                                    (error.error as ErrorMessage).message[0].substring(\r\n                                        (error.error as ErrorMessage).message[0].indexOf('@') + 1,\r\n                                        (error.error as ErrorMessage).message[0].length,\r\n                                    ),\r\n                                );\r\n                                if (/\\d/.test(errorMessage)) {\r\n                                    errorMessage = errorMessage.substring(\r\n                                        errorMessage.search(/\\d/) + 2,\r\n                                        errorMessage.length,\r\n                                    );\r\n                                }\r\n                            } else {\r\n                                errorMessage = this.translateService.instant(\r\n                                    (error.error as ErrorMessage).message,\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    errorMessage = this.translateService.instant('common.errors.unknown_error');\r\n                }\r\n                void this.toastControllerService.displayToast({\r\n                    message: errorMessage,\r\n                    duration: MESSAGE_DURATION.ERROR,\r\n                    color: 'danger',\r\n                });\r\n                return throwError(error);\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from '../../views/auth/login/login.component';\r\nimport { SignupComponent } from '../../views/auth/signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignupComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LoginService } from '../../services/api/auth/login.service';\r\nimport { SignupService } from '../../services/api/auth/signup.service';\r\nimport { LoginComponent } from '../../views/auth/login/login.component';\r\nimport { SignupComponent } from '../../views/auth/signup/signup.component';\r\nimport { SharedModule } from '../shared.module';\r\nimport { AutofocusModule } from '../../directives/autofocus/autofocus.module';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\nconst COMPONENTS = [SignupComponent, LoginComponent];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    IonicModule,\r\n];\r\n\r\nconst MY_IMPORTS = [SharedModule, AuthRoutingModule, AutofocusModule];\r\n\r\nconst SERVICES = [SignupService, LoginService];\r\n\r\n@NgModule({\r\n    declarations: [...COMPONENTS],\r\n    imports: [...EXTERNAL_IMPORTS, ...MY_IMPORTS],\r\n    exports: [...COMPONENTS],\r\n    providers: [...SERVICES],\r\n})\r\nexport class AuthModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PreferencesComponent } from '../views/navigation/preferences/preferences.component';\r\nimport { SideNavComponent } from '../views/navigation/side-nav/side-nav.component';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\nconst COMPONENTS = [SideNavComponent, PreferencesComponent];\r\n\r\nconst EXTERNAL_IMPORTS = [CommonModule, TranslateModule, RouterModule, IonicModule];\r\n\r\nconst IMPORTS = [AuthModule];\r\n\r\n@NgModule({\r\n    declarations: [...COMPONENTS],\r\n    imports: [...EXTERNAL_IMPORTS, ...IMPORTS],\r\n    exports: [...COMPONENTS],\r\n})\r\nexport class NavigationModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { ShowAllExercisesModule } from '../pipes/training/past-trainings/show-all-exercises/show-all-exercises.module';\r\nimport { NotFoundResolverService } from '../services/shared/not-found-resolver.service';\r\nimport { DeleteTrainingActionService } from '../services/api/training/delete-training-action.service';\r\nimport { NotFoundComponent } from '../views/shared/not-found/not-found.component';\r\nimport { DeleteTrainingActionComponent } from '../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\nimport { MoreTrainingActionComponent } from '../views/shared/training/training-actions/more-training-action/more-training-action.component';\r\nimport { PaginationComponent } from '../views/shared/pagination/pagination.component';\r\nimport { PaginationDirective } from '../directives/pagination/pagination.directive';\r\nimport { DateTimePickerComponent } from '../views/shared/datetime-picker/datetime-picker.component';\r\nimport { SkeletonLoaderComponent } from '../views/shared/skeleton-loader/skeleton-loader.component';\r\nimport { SkeletonLoaderModule } from '../directives/skeleton-loader/skeleton-loader.module';\r\nimport { SanitizeHtmlModule } from '../pipes/shared/sanitize-html/sanitize-html.module';\r\n\r\nconst DIRECTIVES = [PaginationDirective];\r\n\r\nconst COMPONENTS = [\r\n    NotFoundComponent,\r\n    PaginationComponent,\r\n    DateTimePickerComponent,\r\n    SkeletonLoaderComponent,\r\n];\r\n\r\nconst ACTION_COMPONENTS = [DeleteTrainingActionComponent, MoreTrainingActionComponent];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    IonicModule,\r\n];\r\n\r\nconst IMPORTS = [ShowAllExercisesModule, PipesModule, SkeletonLoaderModule, SanitizeHtmlModule];\r\n\r\n@NgModule({\r\n    declarations: [...COMPONENTS, ...DIRECTIVES, ...ACTION_COMPONENTS],\r\n    imports: [...EXTERNAL_IMPORTS, ...IMPORTS],\r\n    exports: [...COMPONENTS],\r\n    providers: [NotFoundResolverService, DeleteTrainingActionService],\r\n})\r\nexport class SharedModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { FilterAvailableExercisesPipe } from './training/new-training/filter-available-exercises.pipe';\r\nimport { MapTrainingItemActionsPipe } from './training/past-trainings/map-training-actions.pipe';\r\n\r\n@NgModule({\r\n    declarations: [FilterAvailableExercisesPipe, MapTrainingItemActionsPipe],\r\n    exports: [FilterAvailableExercisesPipe, MapTrainingItemActionsPipe],\r\n})\r\nexport class PipesModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SanitizePipe } from './sanitize-html.pipe';\r\n\r\n@NgModule({\r\n    declarations: [SanitizePipe],\r\n    exports: [SanitizePipe],\r\n})\r\nexport class SanitizeHtmlModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'sanitizeHtml' })\r\nexport class SanitizePipe implements PipeTransform {\r\n    constructor(private readonly _sanitizer: DomSanitizer) {}\r\n\r\n    transform(value: string): SafeHtml {\r\n        return this._sanitizer.bypassSecurityTrustHtml(value);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport { SingleExercise } from '../../../models/training/new-training/single-exercise/single-exercise.model';\r\n\r\n@Pipe({ name: 'filterAvailableExercises' })\r\nexport class FilterAvailableExercisesPipe implements PipeTransform {\r\n    transform(currentExerciseState: SingleExercise[], index: number): Exercise[] {\r\n        return currentExerciseState[index].availableExercises;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TrainingItemActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\n\r\ninterface TrainingItemActionsProperties {\r\n    icon: string;\r\n    tooltip: string;\r\n}\r\n\r\n@Pipe({ name: 'mapTrainingItemActions' })\r\nexport class MapTrainingItemActionsPipe implements PipeTransform {\r\n    private readonly actionToIcon: { [key: string]: TrainingItemActionsProperties } = {\r\n        delete: {\r\n            icon: 'trash-sharp',\r\n            tooltip: 'training.past_trainings.buttons.delete_training',\r\n        },\r\n        more: {\r\n            icon: 'ellipsis-vertical-sharp',\r\n            tooltip: 'TODO',\r\n        },\r\n    };\r\n\r\n    transform(action: TrainingItemActions, purpose: string): string {\r\n        if (purpose === 'icon') {\r\n            return this.actionToIcon[action].icon as string;\r\n        } else {\r\n            return this.actionToIcon[action].tooltip as string;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { ShowAllExercisesPipe } from './show-all-exercises.pipe';\n\n@NgModule({\n    declarations: [ShowAllExercisesPipe],\n    exports: [ShowAllExercisesPipe],\n})\nexport class ShowAllExercisesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NewTraining } from '../../../../models/training/new-training/new-training.model';\r\nimport { SingleExercise } from '../../../../models/training/new-training/single-exercise/single-exercise.model';\r\n\r\n@Pipe({ name: 'showAllExercises' })\r\nexport class ShowAllExercisesPipe implements PipeTransform {\r\n    constructor(private readonly translateService: TranslateService) {}\r\n\r\n    transform(training: NewTraining): Observable<string> {\r\n        return this.translateService\r\n            .stream(training.exercises?.map((x: SingleExercise) => x?.exerciseData.name) ?? [])\r\n            .pipe(\r\n                map((value: { [key: string]: string }) => {\r\n                    let exercisesToConcat = '';\r\n                    Object.values(value).forEach((exerciseName: string, index: number) => {\r\n                        exercisesToConcat += `${index + 1}. ${exerciseName}\\n`;\r\n                    });\r\n                    return exercisesToConcat as string;\r\n                }),\r\n            );\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Preferences } from '../../../models/common/preferences.model';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { AuthModel } from '../../../models/auth/auth-data.model';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { LanguageCode, WeightUnit } from '../../../models/common/preferences.type';\r\nimport { AuthStoreService } from '../../store/auth/auth-store.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _router: Router,\r\n        private _authStoreService: AuthStoreService,\r\n    ) {}\r\n\r\n    signup(\r\n        language: LanguageCode,\r\n        weightUnit: WeightUnit,\r\n        email: string,\r\n        password: string,\r\n        confirmPassword: string,\r\n    ): Observable<AuthResponseData> {\r\n        const signupData: AuthModel = {\r\n            email: email,\r\n            password: password,\r\n            confirmPassword: confirmPassword,\r\n        };\r\n        const preferences: Partial<Preferences> = {\r\n            languageCode: language,\r\n            weightUnit: weightUnit,\r\n        };\r\n        return this._http.post<AuthResponseData>(environment.BACKEND + '/auth/signup', {\r\n            signupData: signupData,\r\n            preferences: preferences,\r\n        });\r\n    }\r\n\r\n    login(email: string, password: string): Observable<AuthResponseData> {\r\n        const authData: Partial<AuthModel> = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        return this._http\r\n            .post<AuthResponseData>(environment.BACKEND + '/auth/login', authData)\r\n            .pipe(\r\n                tap(async (response: AuthResponseData) => {\r\n                    if (response.Token) {\r\n                        this._authStoreService.emitLoggedUser(response);\r\n                        this._authStoreService.emitIsAuth(true);\r\n                        this._authStoreService.setToken(response.Token);\r\n                        const expiresInDuration = response.ExpiresIn;\r\n                        this._authStoreService.setAuthTimer(expiresInDuration);\r\n                        const now = new Date();\r\n                        const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\r\n                        await this._authStoreService.saveLS(\r\n                            this._authStoreService.getToken(),\r\n                            expirationDate,\r\n                            response._id,\r\n                        );\r\n                        await this._router.navigate(['/training/new-training']);\r\n                    }\r\n                }),\r\n            );\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n@Injectable()\r\nexport class LoginService {\r\n    constructor(private readonly _http: HttpClient) {}\r\n\r\n    passwordFitsEmail(email: string, password: string): Observable<boolean> {\r\n        const params = `?email=${email}&password=${password}`;\r\n        return this._http.get<boolean>(environment.BACKEND + '/auth/check-pass' + params);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n@Injectable()\r\nexport class SignupService {\r\n    constructor(private readonly _http: HttpClient) {}\r\n\r\n    getEmails(email: string): Observable<boolean> {\r\n        const params = `?email=${email}`;\r\n        return this._http.get<boolean>(environment.BACKEND + '/auth/get-all-emails' + params);\r\n    }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { mapDateInterval } from '../../../helpers/training/past-trainings/map-past-trainings-dates.helper';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { Paginator, SearchDataDto } from '../../../models/common/paginator.model';\r\nimport { PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { TrainingActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport { DeleteTrainingActionData } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport {\r\n    DeleteTrainingActionComponent,\r\n    DeleteTrainingActionDialogData,\r\n} from '../../../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\n\r\n@Injectable()\r\nexport class DeleteTrainingActionService implements TrainingActions {\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly modalController: ModalController,\r\n        private readonly datePipe: DatePipe,\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    async perform(data: DeleteTrainingActionData): Promise<void> {\r\n        await this.openDeleteTrainingDialog(data);\r\n    }\r\n\r\n    async openDeleteTrainingDialog(data: DeleteTrainingActionData): Promise<void> {\r\n        const modal = await this.modalController.create({\r\n            component: DeleteTrainingActionComponent,\r\n            componentProps: {\r\n                title$: this.translateService.stream(\r\n                    'training.past_trainings.actions.delete_training',\r\n                ),\r\n                dateCreated$: this.translateService\r\n                    .stream(`weekdays.${data.weekDays[data.dayIndex]}`)\r\n                    .pipe(\r\n                        map(\r\n                            (value: { [key: string]: string }) =>\r\n                                `${value} (${this.datePipe.transform(\r\n                                    data.training.trainingDate,\r\n                                    'dd.MM.yyyy',\r\n                                )})`,\r\n                        ),\r\n                    ),\r\n                timeCreated$: of(data.timeCreated),\r\n                training$: of(data.training),\r\n            } as DeleteTrainingActionDialogData,\r\n        });\r\n        await modal.present();\r\n    }\r\n\r\n    deleteTraining(\r\n        trainingId: string,\r\n        deleteTrainingMeta: {\r\n            searchData: SearchDataDto | undefined;\r\n            currentDate: Date | undefined;\r\n        },\r\n    ): Observable<StreamData<Paginator<PastTrainings>>> {\r\n        const params = new HttpParams().set('meta', JSON.stringify(deleteTrainingMeta));\r\n        return this.http\r\n            .delete<StreamData<Paginator<PastTrainings>>>(\r\n                environment.BACKEND + `/training/delete-training/${trainingId}`,\r\n                { params: params },\r\n            )\r\n            .pipe(\r\n                map((response: StreamData<Paginator<PastTrainings>>) => mapDateInterval(response)),\r\n            );\r\n    }\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { captureException } from '@sentry/minimal';\r\n\r\n@Injectable()\r\nexport class SentryService implements ErrorHandler {\r\n    handleError(error: unknown): void {\r\n        captureException(error);\r\n        throw error;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController, LoadingOptions } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadingControllerService {\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly loadingController: LoadingController,\r\n    ) {}\r\n\r\n    async displayLoader(options: LoadingOptions): Promise<void> {\r\n        const loading = await this.loadingController.create({\r\n            message: this.translateService.instant(options.message as string),\r\n            keyboardClose: true,\r\n        });\r\n        await loading.present();\r\n    }\r\n\r\n    async dismissLoader(): Promise<void> {\r\n        await this.loadingController.dismiss();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Storage } from '@capacitor/storage';\r\nimport { from, Observable } from 'rxjs';\r\nimport { StorageItems } from '../../constants/enums/storage-items.enum';\r\n\r\n@Injectable()\r\nexport class NotFoundResolverService implements Resolve<void> {\r\n    resolve(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): Observable<void> {\r\n        return from(Storage.remove({ key: StorageItems.TRAINING_STATE }));\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\nimport { MESSAGE_DURATION } from '../../constants/shared/message-duration.const';\r\nimport { GeneralResponseData } from '../../models/common/general-response.model';\r\nimport { Preferences } from '../../models/common/preferences.model';\r\nimport { PreferenceChangedType } from '../../models/common/preferences.type';\r\nimport { PreferencesStoreService } from '../store/shared/preferences-store.service';\r\nimport { NewTrainingStoreService } from '../store/training/new-training-store.service';\r\nimport { ToastControllerService } from './toast-controller.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PreferencesService {\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _translateService: TranslateService,\r\n        private _toastControllerService: ToastControllerService,\r\n        private _preferencesStoreService: PreferencesStoreService,\r\n        private _newTrainingStoreService: NewTrainingStoreService,\r\n    ) {}\r\n\r\n    getPreferences(userId: string): Observable<Preferences> {\r\n        return this._http.get<Preferences>(environment.BACKEND + `/preferences/${userId}`);\r\n    }\r\n\r\n    setPreferences(\r\n        preferences: Preferences,\r\n        preferenceChanged: PreferenceChangedType,\r\n    ): Observable<GeneralResponseData> {\r\n        const apiPreferences: Partial<Preferences> = {\r\n            languageCode: preferences.languageCode,\r\n            weightUnit: preferences.weightUnit,\r\n            showByPeriod: preferences.showByPeriod,\r\n        };\r\n        let apiResponse: GeneralResponseData;\r\n        return this._http\r\n            .put<GeneralResponseData>(environment.BACKEND + `/preferences/${preferences.userId}`, {\r\n                preferences: apiPreferences,\r\n                preferenceChanged: preferenceChanged,\r\n            })\r\n            .pipe(\r\n                switchMap((response: GeneralResponseData) => {\r\n                    apiResponse = response;\r\n                    return this._translateService.use(preferences.languageCode).pipe(\r\n                        tap(async (_) => {\r\n                            this._preferencesStoreService.emitPreferences(preferences);\r\n                            if (response.Message) {\r\n                                await this._toastControllerService.displayToast({\r\n                                    message: this._translateService.instant(response.Message),\r\n                                    duration: MESSAGE_DURATION.GENERAL,\r\n                                    color: 'primary',\r\n                                });\r\n                            }\r\n                        }),\r\n                        switchMap((_) => {\r\n                            if (preferenceChanged === 'weightUnit') {\r\n                                return this._newTrainingStoreService\r\n                                    .updateWeightUnit(apiPreferences.weightUnit)\r\n                                    .pipe(switchMap((_) => of(apiResponse)));\r\n                            }\r\n                            return of(apiResponse);\r\n                        }),\r\n                    );\r\n                }),\r\n            );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController, ToastOptions } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastControllerService {\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly toastController: ToastController,\r\n    ) {}\r\n\r\n    async displayToast(options: ToastOptions): Promise<void> {\r\n        const toast = await this.toastController.create({\r\n            message: this.translateService.instant(options?.message as string),\r\n            duration: options.duration,\r\n            color: options.color,\r\n        });\r\n        await toast.present();\r\n    }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UnsubscribeService extends Subject<void> implements OnDestroy {\r\n    ngOnDestroy(): void {\r\n        this.next();\r\n        this.complete();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, from, Observable } from 'rxjs';\r\nimport { Storage } from '@capacitor/storage';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { StorageItems } from '../../../constants/enums/storage-items.enum';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthStoreService {\r\n    private readonly _loggedUser$$: BehaviorSubject<AuthResponseData> =\r\n        new BehaviorSubject<AuthResponseData>(null);\r\n    readonly loggedUser$: Observable<AuthResponseData> = this._loggedUser$$.asObservable();\r\n\r\n    private readonly _isAuth$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    readonly isAuth$: Observable<boolean> = this._isAuth$$.asObservable();\r\n\r\n    private tokenTimer: NodeJS.Timeout;\r\n    private token: string;\r\n\r\n    constructor(private readonly router: Router) {}\r\n\r\n    getToken(): string {\r\n        return this.token;\r\n    }\r\n\r\n    setToken(token: string): void {\r\n        this.token = token;\r\n    }\r\n\r\n    getLoggedUser(): AuthResponseData {\r\n        return { ...this._loggedUser$$.getValue() };\r\n    }\r\n\r\n    emitLoggedUser(loggedUser: AuthResponseData): void {\r\n        this._loggedUser$$.next(loggedUser);\r\n    }\r\n\r\n    getIsAuth(): boolean {\r\n        return this._isAuth$$.getValue();\r\n    }\r\n\r\n    emitIsAuth(isAuth: boolean): void {\r\n        this._isAuth$$.next(isAuth);\r\n    }\r\n\r\n    autoLogin(): Observable<boolean> {\r\n        return from(Storage.get({ key: StorageItems.USER_DATA })).pipe(\r\n            map((storedData) => {\r\n                if (!storedData || !storedData?.value) {\r\n                    return false;\r\n                }\r\n                const userData: AuthResponseData = JSON.parse(storedData.value);\r\n                if (!userData.Token || !userData.ExpirationDate) {\r\n                    return false;\r\n                }\r\n                const authData: Partial<AuthResponseData> = {\r\n                    Token: userData.Token,\r\n                    ExpirationDate: new Date(userData.ExpirationDate),\r\n                    _id: userData._id,\r\n                };\r\n                const now = new Date();\r\n                const expiresIn = authData.ExpirationDate.getTime() - now.getTime();\r\n                if (expiresIn > 0) {\r\n                    this.token = userData.Token;\r\n                    this.setAuthTimer(expiresIn / 1000);\r\n                    this.emitIsAuth(true);\r\n                    this.emitLoggedUser(authData);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    async logout(): Promise<void> {\r\n        this.token = null;\r\n        this.emitIsAuth(false);\r\n        clearTimeout(this.tokenTimer);\r\n        await this.clearData();\r\n        await this.router.navigate(['/auth/login']);\r\n    }\r\n\r\n    setAuthTimer(duration: number): void {\r\n        this.tokenTimer = setTimeout(async () => {\r\n            await this.logout();\r\n        }, duration * 1000);\r\n    }\r\n\r\n    async saveLS(token: string, expirationDate: Date, userId: string): Promise<void> {\r\n        const userData: AuthResponseData = {\r\n            Token: token,\r\n            ExpirationDate: expirationDate,\r\n            _id: userId,\r\n        };\r\n        await Storage.set({\r\n            key: StorageItems.USER_DATA,\r\n            value: JSON.stringify(userData),\r\n        });\r\n    }\r\n\r\n    private async clearData(): Promise<void> {\r\n        await Storage.remove({ key: StorageItems.USER_DATA });\r\n        await Storage.remove({ key: StorageItems.TRAINING_STATE });\r\n        await Storage.remove({ key: StorageItems.QUERY_PARAMS });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Preferences } from '../../../models/common/preferences.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PreferencesStoreService {\r\n    private readonly _preferencesChanged$$: BehaviorSubject<Preferences> = new BehaviorSubject(\r\n        null,\r\n    );\r\n    readonly preferencesChanged$: Observable<Preferences> =\r\n        this._preferencesChanged$$.asObservable();\r\n\r\n    emitPreferences(preferences: Preferences): void {\r\n        this._preferencesChanged$$.next(preferences);\r\n    }\r\n\r\n    getPreferences(): Preferences {\r\n        return { ...this._preferencesChanged$$.getValue() };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { Paginator } from '../../../models/common/paginator.model';\r\nimport { PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SharedStoreService {\r\n    private readonly _editingTraining$$: Subject<boolean> = new Subject<boolean>();\r\n    readonly editingTraining$: Observable<boolean> = this._editingTraining$$.asObservable();\r\n\r\n    readonly deletedTraining$$: Subject<StreamData<Paginator<PastTrainings>>> = new Subject<\r\n        StreamData<Paginator<PastTrainings>>\r\n    >();\r\n\r\n    readonly _dayClicked$: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n    completeDayClicked(): void {\r\n        this._dayClicked$.complete();\r\n    }\r\n\r\n    emitDayClicked(dayClicked: string): void {\r\n        this._dayClicked$.next(dayClicked);\r\n    }\r\n\r\n    getDayClickedDate(): string | undefined {\r\n        return this._dayClicked$.getValue();\r\n    }\r\n\r\n    emitEditingTraining(editMode: boolean): void {\r\n        this._editingTraining$$.next(editMode);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ExercisesStoreService {\r\n    private readonly _allExercisesState$: BehaviorSubject<StreamData<Exercise[]>> =\r\n        new BehaviorSubject<StreamData<Exercise[]>>(null);\r\n    readonly allExercisesState$: Observable<StreamData<Exercise[]>> =\r\n        this._allExercisesState$.asObservable();\r\n\r\n    emitAllExercises(exercises: StreamData<Exercise[]>): void {\r\n        this._allExercisesState$.next(exercises);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, from, Observable, of } from 'rxjs';\r\nimport { take, tap, map, switchMap, concatMap } from 'rxjs/operators';\r\nimport { Storage } from '@capacitor/storage';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport {\r\n    createEmptyExercise,\r\n    EMPTY_TRAINING,\r\n    TOTAL_INITIAL_WEIGHT,\r\n} from '../../../constants/training/new-training.const';\r\nimport { NewTraining } from '../../../models/training/new-training/new-training.model';\r\nimport {\r\n    SetTrainingData,\r\n    Set,\r\n} from '../../../models/training/new-training/single-exercise/set/set.model';\r\nimport { SingleExercise } from '../../../models/training/new-training/single-exercise/single-exercise.model';\r\nimport { StorageItems } from '../../../constants/enums/storage-items.enum';\r\nimport { PreferencesStoreService } from '../shared/preferences-store.service';\r\nimport { DEFAULT_WEIGHT_UNIT } from '../../../constants/shared/default-weight-unit.const';\r\nimport { WeightUnit } from '../../../models/common/preferences.type';\r\nimport { Preferences } from '../../../models/common/preferences.model';\r\nimport { SetCategoryType } from '../../../models/training/new-training/single-exercise/set/set.type';\r\nimport { isNeverCheck } from '../../../helpers/is-never-check.helper';\r\nimport { ExercisesStoreService } from './exercises-store.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NewTrainingStoreService {\r\n    private readonly _trainingState$: BehaviorSubject<NewTraining> =\r\n        new BehaviorSubject<NewTraining>(EMPTY_TRAINING);\r\n    readonly trainingState$: Observable<NewTraining> = this._trainingState$.asObservable();\r\n\r\n    constructor(\r\n        private _preferencesStoreService: PreferencesStoreService,\r\n        private _exercisesStoreService: ExercisesStoreService,\r\n    ) {}\r\n\r\n    getCurrentTrainingState(): NewTraining {\r\n        return { ...this._trainingState$.getValue() };\r\n    }\r\n\r\n    updateWeightUnit(weightUnit: WeightUnit): Observable<void> {\r\n        return this._trainingState$.pipe(\r\n            take(1),\r\n            switchMap((trainingState: NewTraining) => {\r\n                const updatedTraining = {\r\n                    ...trainingState,\r\n                    weightUnit,\r\n                };\r\n                return this.saveTrainingData(updatedTraining);\r\n            }),\r\n        );\r\n    }\r\n\r\n    updateTrainingDate(trainingDate: string): Observable<void> {\r\n        return this._trainingState$.pipe(\r\n            take(1),\r\n            switchMap((trainingState: NewTraining) => {\r\n                const updatedTraining = {\r\n                    ...trainingState,\r\n                    trainingDate,\r\n                };\r\n                return this.saveTrainingData(updatedTraining);\r\n            }),\r\n        );\r\n    }\r\n\r\n    updateBodyweight(bodyweight: number): Observable<void> {\r\n        return this._trainingState$.pipe(\r\n            take(1),\r\n            map((trainingState: NewTraining) => {\r\n                const updatedTraining: NewTraining = {\r\n                    ...trainingState,\r\n                    bodyweight,\r\n                    exercises: [...trainingState.exercises].map((exercise: SingleExercise) => {\r\n                        let total = 0;\r\n                        exercise.sets.forEach((set: Set, index: number) => {\r\n                            switch (exercise.exerciseData.selectedSetCategories[index]) {\r\n                                case 'freeWeighted': {\r\n                                    total = total + set.weight * set.reps;\r\n                                    break;\r\n                                }\r\n                                case 'dynamicBodyweight': {\r\n                                    total = total + set.reps * bodyweight;\r\n                                    break;\r\n                                }\r\n                                case 'dynamicWeighted': {\r\n                                    total = total + (bodyweight + set.weight) * set.reps;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        });\r\n                        return {\r\n                            ...exercise,\r\n                            total,\r\n                        };\r\n                    }),\r\n                };\r\n                return updatedTraining;\r\n            }),\r\n            switchMap((updatedTraining: NewTraining) => this.saveTrainingData(updatedTraining)),\r\n        );\r\n    }\r\n\r\n    updatePrimarySetCategory(\r\n        indexExercise: number,\r\n        indexSet: number,\r\n        setCategory: SetCategoryType,\r\n    ): Observable<void> {\r\n        return this._trainingState$.pipe(\r\n            take(1),\r\n            map((trainingState: NewTraining) => {\r\n                let updatedSet: Set;\r\n                switch (setCategory) {\r\n                    case 'freeWeighted':\r\n                    case 'dynamicWeighted': {\r\n                        updatedSet = { setNumber: indexSet + 1, weight: null, reps: null };\r\n                        break;\r\n                    }\r\n                    case 'dynamicBodyweight': {\r\n                        updatedSet = { setNumber: indexSet + 1, reps: null };\r\n                        break;\r\n                    }\r\n                    case 'staticBodyweight': {\r\n                        //TODO: BL-128\r\n                        break;\r\n                    }\r\n                    case 'staticWeighted': {\r\n                        //TODO: BL-123\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        isNeverCheck(setCategory);\r\n                    }\r\n                }\r\n                const updatedTraining: NewTraining = {\r\n                    ...trainingState,\r\n                    exercises: [...trainingState.exercises].map(\r\n                        (exercise: SingleExercise, i: number) => {\r\n                            if (indexExercise === i) {\r\n                                return {\r\n                                    ...exercise,\r\n                                    exerciseData: {\r\n                                        ...exercise.exerciseData,\r\n                                        selectedSetCategories: [\r\n                                            ...exercise.exerciseData.selectedSetCategories,\r\n                                        ].map((category: SetCategoryType, j: number) => {\r\n                                            if (indexSet === j) {\r\n                                                return setCategory;\r\n                                            }\r\n                                            return category;\r\n                                        }),\r\n                                    },\r\n                                    sets: [...exercise.sets].map((set: Set, k: number) => {\r\n                                        if (indexSet === k) {\r\n                                            return updatedSet;\r\n                                        }\r\n                                        return set;\r\n                                    }),\r\n                                };\r\n                            }\r\n                            return exercise;\r\n                        },\r\n                    ),\r\n                };\r\n                return updatedTraining;\r\n            }),\r\n            concatMap((updatedTraining: NewTraining) => this.saveTrainingData(updatedTraining)),\r\n        );\r\n    }\r\n\r\n    addSet(\r\n        indexExercise: number,\r\n        setCategory: SetCategoryType,\r\n        setNumber: number,\r\n    ): Observable<SetCategoryType> {\r\n        return this._trainingState$.pipe(\r\n            take(1),\r\n            map((trainingState: NewTraining) => {\r\n                const updatedTraining = {\r\n                    ...trainingState,\r\n                    exercises: [...trainingState.exercises].map(\r\n                        (exercise: SingleExercise, i: number) => {\r\n                            if (i === indexExercise) {\r\n                                let set: Set;\r\n                                switch (setCategory) {\r\n                                    case 'freeWeighted':\r\n                                    case 'dynamicWeighted': {\r\n                                        set = { setNumber, weight: null, reps: null };\r\n                                        break;\r\n                                    }\r\n                                    case 'dynamicBodyweight': {\r\n                                        set = { setNumber, reps: null };\r\n                                        break;\r\n                                    }\r\n                                    case 'staticBodyweight': {\r\n                                        //TODO: BL-128\r\n                                        break;\r\n                                    }\r\n                                    case 'staticWeighted': {\r\n                                        //TODO: BL-123\r\n                                        break;\r\n                                    }\r\n                                    default: {\r\n                                        isNeverCheck(setCategory);\r\n                                    }\r\n                                }\r\n                                return {\r\n                                    ...exercise,\r\n                                    sets: [...exercise.sets, set],\r\n                                    exerciseData: {\r\n                                        ...exercise.exerciseData,\r\n                                        selectedSetCategories: [\r\n                                            ...exercise.exerciseData.selectedSetCategories,\r\n                                            setCategory,\r\n                                        ],\r\n                                    },\r\n                                };\r\n                            }\r\n                            return exercise;\r\n                        },\r\n                    ),\r\n                };\r\n                return updatedTraining;\r\n            }),\r\n            concatMap((updatedTraining: NewTraining) =>\r\n                this.saveTrainingData(updatedTraining).pipe(map((_) => setCategory)),\r\n            ),\r\n        );\r\n    }\r\n\r\n    deleteSet(indexExercise: number, indexSet: number, newTotal: number): Observable<void> {\r\n        return this._trainingState$.pipe(\r\n            take(1),\r\n            map((trainingState: NewTraining) => {\r\n                const updatedTraining = {\r\n                    ...trainingState,\r\n                    exercises: [...trainingState.exercises].map(\r\n                        (exercise: SingleExercise, i: number) => {\r\n                            if (i === indexExercise) {\r\n                                return {\r\n                                    ...exercise,\r\n                                    sets: [...exercise.sets]\r\n                                        .filter((_set: Set, i: number) => i !== indexSet)\r\n                                        .map((set: Set) => {\r\n                                            if (set.setNumber > indexSet + 1) {\r\n                                                return {\r\n                                                    ...set,\r\n                                                    setNumber: set.setNumber - 1,\r\n                                                };\r\n                                            }\r\n                                            return set;\r\n                                        }),\r\n                                    total: newTotal,\r\n                                    exerciseData: {\r\n                                        ...exercise.exerciseData,\r\n                                        selectedSetCategories:\r\n                                            exercise.exerciseData.selectedSetCategories.filter(\r\n                                                (_category: SetCategoryType, i: number) =>\r\n                                                    i !== indexSet,\r\n                                            ),\r\n                                    },\r\n                                };\r\n                            }\r\n                            return exercise;\r\n                        },\r\n                    ),\r\n                };\r\n                return updatedTraining;\r\n            }),\r\n            concatMap((updatedTraining: NewTraining) => this.saveTrainingData(updatedTraining)),\r\n        );\r\n    }\r\n\r\n    pushToAvailableExercises(\r\n        currentTrainingState: NewTraining,\r\n        toBeAddedExercise: Exercise[],\r\n    ): Observable<void> {\r\n        let updatedTraining: NewTraining = { ...currentTrainingState };\r\n        updatedTraining = {\r\n            ...updatedTraining,\r\n            exercises: [...updatedTraining.exercises].map((exercise) => {\r\n                const isDeletedExerciseInAE = exercise.availableExercises.find(\r\n                    (exercise) => exercise._id === toBeAddedExercise[0]._id,\r\n                );\r\n                if (!isDeletedExerciseInAE) {\r\n                    return {\r\n                        ...exercise,\r\n                        availableExercises: [\r\n                            ...exercise.availableExercises,\r\n                            toBeAddedExercise[0],\r\n                        ].sort(this.compare),\r\n                    };\r\n                }\r\n                return exercise;\r\n            }),\r\n        };\r\n        return this.saveTrainingData(updatedTraining);\r\n    }\r\n\r\n    deleteExercise(\r\n        currentTrainingState: NewTraining,\r\n        deletedExerciseName?: string,\r\n        indexExercise?: number,\r\n    ): Observable<[NewTraining, Exercise[]]> {\r\n        let updatedTraining: NewTraining;\r\n        if (deletedExerciseName) {\r\n            return this._exercisesStoreService.allExercisesState$.pipe(\r\n                take(1),\r\n                map((value) => value.Value),\r\n                tap((_) => {\r\n                    updatedTraining = {\r\n                        ...currentTrainingState,\r\n                        exercises: currentTrainingState.exercises.filter(\r\n                            (exercise) => exercise.exerciseData.name !== deletedExerciseName,\r\n                        ),\r\n                    };\r\n                }),\r\n                map((allExercises: Exercise[]) => [\r\n                    updatedTraining,\r\n                    allExercises.filter((exercise) => exercise.name === deletedExerciseName),\r\n                ]),\r\n            );\r\n        } else {\r\n            updatedTraining = {\r\n                ...currentTrainingState,\r\n                exercises: currentTrainingState.exercises.filter(\r\n                    (_exercise: SingleExercise, index: number) => index !== indexExercise,\r\n                ),\r\n            };\r\n            const response = [updatedTraining, [] as Exercise[]] as [NewTraining, Exercise[]];\r\n            return this.saveTrainingData(updatedTraining).pipe(switchMap((_) => of(response)));\r\n        }\r\n    }\r\n\r\n    setsChanged(trainingData: SetTrainingData): Observable<void> {\r\n        let updatedTraining: NewTraining = this._trainingState$.getValue();\r\n        const indexOfChangedExercise = updatedTraining.exercises.findIndex(\r\n            (singleExercise: SingleExercise) =>\r\n                singleExercise.exerciseData.name === trainingData.exerciseName,\r\n        );\r\n        const indexFoundSet = updatedTraining.exercises[indexOfChangedExercise].sets.findIndex(\r\n            (set: Set) => set.setNumber === trainingData.setNumber,\r\n        );\r\n\r\n        if (indexFoundSet > -1) {\r\n            updatedTraining = {\r\n                ...updatedTraining,\r\n                exercises: [...updatedTraining.exercises].map(\r\n                    (exercise: SingleExercise, i: number) => {\r\n                        if (i === indexOfChangedExercise) {\r\n                            return {\r\n                                ...exercise,\r\n                                sets: [...exercise.sets].map((set: Set, j: number) => {\r\n                                    if (j === indexFoundSet) {\r\n                                        let updatedSet: Set;\r\n                                        if (trainingData?.weight) {\r\n                                            updatedSet = {\r\n                                                ...set,\r\n                                                weight: trainingData.weight,\r\n                                                reps: trainingData.reps,\r\n                                            };\r\n                                        } else {\r\n                                            updatedSet = {\r\n                                                ...set,\r\n                                                reps: trainingData.reps,\r\n                                            };\r\n                                        }\r\n                                        return updatedSet;\r\n                                    }\r\n                                    return set;\r\n                                }),\r\n                                total: trainingData.total,\r\n                            };\r\n                        }\r\n                        return exercise;\r\n                    },\r\n                ),\r\n            };\r\n        } else {\r\n            let newSet: Set;\r\n            if (trainingData.weight) {\r\n                newSet = {\r\n                    setNumber: trainingData.setNumber,\r\n                    weight: trainingData.weight,\r\n                    reps: trainingData.reps,\r\n                } as Set;\r\n            } else {\r\n                newSet = {\r\n                    setNumber: trainingData.setNumber,\r\n                    reps: trainingData.reps,\r\n                } as Set;\r\n            }\r\n            updatedTraining = {\r\n                ...updatedTraining,\r\n                exercises: [...updatedTraining.exercises].map(\r\n                    (exercise: SingleExercise, i: number) => {\r\n                        if (i === indexOfChangedExercise) {\r\n                            return {\r\n                                ...exercise,\r\n                                sets: [...exercise.sets, newSet],\r\n                                total: trainingData.total,\r\n                            };\r\n                        }\r\n                        return exercise;\r\n                    },\r\n                ),\r\n            };\r\n        }\r\n        return this.saveTrainingData(updatedTraining);\r\n    }\r\n\r\n    restartSets(indexExercise: number, setCategory: SetCategoryType): Observable<SetCategoryType> {\r\n        return this._trainingState$.pipe(\r\n            take(1),\r\n            map((currentTrainingState: NewTraining) => {\r\n                let set: Set;\r\n                switch (setCategory) {\r\n                    case 'freeWeighted':\r\n                    case 'dynamicWeighted': {\r\n                        set = { setNumber: 1, weight: null, reps: null };\r\n                        break;\r\n                    }\r\n                    case 'dynamicBodyweight': {\r\n                        set = { setNumber: 1, reps: null };\r\n                        break;\r\n                    }\r\n                    case 'staticBodyweight': {\r\n                        //TODO: BL-128\r\n                        break;\r\n                    }\r\n                    case 'staticWeighted': {\r\n                        //TODO: BL-123\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        isNeverCheck(setCategory);\r\n                    }\r\n                }\r\n                const updatedTraining = {\r\n                    ...currentTrainingState,\r\n                    exercises: [...currentTrainingState.exercises].map(\r\n                        (exercise: SingleExercise, index: number) => {\r\n                            if (index === indexExercise) {\r\n                                return {\r\n                                    ...exercise,\r\n                                    sets: [set],\r\n                                    total: TOTAL_INITIAL_WEIGHT,\r\n                                };\r\n                            }\r\n                            return exercise;\r\n                        },\r\n                    ),\r\n                };\r\n                return updatedTraining;\r\n            }),\r\n            concatMap((updatedTraining: NewTraining) => this.saveTrainingData(updatedTraining)),\r\n            concatMap((_) => of(setCategory)),\r\n        );\r\n    }\r\n\r\n    addNewExercise(alreadyUsedExercises: string[]): Observable<void> {\r\n        return this._exercisesStoreService.allExercisesState$.pipe(\r\n            take(1),\r\n            map((streamData: StreamData<Exercise[]>) =>\r\n                streamData.Value.filter(\r\n                    (exercise) => alreadyUsedExercises.indexOf(exercise.name) === -1,\r\n                ),\r\n            ),\r\n            concatMap((availableExercises: Exercise[]) =>\r\n                this.updateTrainingState(undefined, availableExercises),\r\n            ),\r\n        );\r\n    }\r\n\r\n    updateExerciseChoices(\r\n        selectedExercise: string,\r\n        selectedIndex: number,\r\n        trainingToBeUpdated: NewTraining,\r\n        selectedExerciseData: Exercise,\r\n    ): Observable<void> {\r\n        const previousSelectedExercise: Exercise =\r\n            trainingToBeUpdated.exercises[selectedIndex].exerciseData;\r\n        const updatedTraining: NewTraining = {\r\n            ...trainingToBeUpdated,\r\n            exercises: [...trainingToBeUpdated.exercises].map(\r\n                (exercise: SingleExercise, i: number) => {\r\n                    if (i === selectedIndex) {\r\n                        return {\r\n                            ...exercise,\r\n                            exerciseData: selectedExerciseData,\r\n                        };\r\n                    } else {\r\n                        let availableExercises: Exercise[];\r\n                        if (previousSelectedExercise.name) {\r\n                            availableExercises = [\r\n                                ...exercise.availableExercises,\r\n                                previousSelectedExercise,\r\n                            ].sort(this.compare);\r\n                        } else {\r\n                            availableExercises = [...exercise.availableExercises].sort(\r\n                                this.compare,\r\n                            );\r\n                        }\r\n                        return {\r\n                            ...exercise,\r\n                            availableExercises: availableExercises.filter(\r\n                                (exercise: Exercise) => exercise.name !== selectedExercise,\r\n                            ),\r\n                        };\r\n                    }\r\n                },\r\n            ),\r\n        };\r\n        return this.saveTrainingData(updatedTraining);\r\n    }\r\n\r\n    keepTrainingState(): Observable<boolean> {\r\n        return from(Storage.get({ key: StorageItems.TRAINING_STATE })).pipe(\r\n            map((storedData) => {\r\n                if (!storedData || !storedData?.value) {\r\n                    return false;\r\n                }\r\n                const trainingState: NewTraining = JSON.parse(storedData.value);\r\n                this._trainingState$.next({ ...trainingState });\r\n                return true;\r\n            }),\r\n        );\r\n    }\r\n\r\n    updateTrainingState(\r\n        newTrainingState?: NewTraining,\r\n        exercises?: Exercise[],\r\n        restartAll?: boolean,\r\n        userId?: string,\r\n    ): Observable<void> {\r\n        return combineLatest([\r\n            this.trainingState$,\r\n            this._preferencesStoreService.preferencesChanged$,\r\n        ]).pipe(\r\n            take(1),\r\n            map(([currentTrainingState, currentPreferences]: [NewTraining, Preferences]) => {\r\n                let updatedTraining: NewTraining;\r\n                if (exercises) {\r\n                    updatedTraining = currentTrainingState;\r\n                    if (restartAll) {\r\n                        const weightUnit = currentPreferences?.weightUnit ?? DEFAULT_WEIGHT_UNIT;\r\n                        updatedTraining = {\r\n                            ...EMPTY_TRAINING,\r\n                            userId,\r\n                            weightUnit,\r\n                        };\r\n                    }\r\n                    updatedTraining = {\r\n                        ...updatedTraining,\r\n                        exercises: [...updatedTraining.exercises, createEmptyExercise(exercises)],\r\n                    };\r\n                } else {\r\n                    updatedTraining = newTrainingState;\r\n                }\r\n                return updatedTraining;\r\n            }),\r\n            switchMap((updatedTraining: NewTraining) => this.saveTrainingData(updatedTraining)),\r\n        );\r\n    }\r\n\r\n    private saveTrainingData(updatedTraining: NewTraining): Observable<void> {\r\n        this._trainingState$.next(updatedTraining);\r\n        return from(\r\n            Storage.set({\r\n                key: StorageItems.TRAINING_STATE,\r\n                value: JSON.stringify(updatedTraining),\r\n            }),\r\n        ).pipe(take(1));\r\n    }\r\n\r\n    private compare(a: Exercise, b: Exercise): number {\r\n        if (a.name < b.name) {\r\n            return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GetResult, Storage } from '@capacitor/storage';\r\nimport { BehaviorSubject, combineLatest, from, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { StorageItems } from '../../../constants/enums/storage-items.enum';\r\nimport { PastTrainingsQueryParams } from '../../../models/training/past-trainings/past-trainings.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PastTrainingsStoreService {\r\n    private readonly _pastTrainingsQueryParams$$: BehaviorSubject<PastTrainingsQueryParams> =\r\n        new BehaviorSubject<PastTrainingsQueryParams>(null);\r\n    readonly pastTrainingsQueryParams$: Observable<PastTrainingsQueryParams> =\r\n        this._pastTrainingsQueryParams$$.asObservable();\r\n\r\n    private readonly _pastTrainingsWrapperScroll$$: BehaviorSubject<number> =\r\n        new BehaviorSubject<number>(0);\r\n    readonly pastTrainingsWrapperScroll$: Observable<number> =\r\n        this._pastTrainingsWrapperScroll$$.asObservable();\r\n\r\n    async emitPastTrainingsQueryParams(params: PastTrainingsQueryParams): Promise<void> {\r\n        this._pastTrainingsQueryParams$$.next(params);\r\n        await Storage.set({\r\n            key: StorageItems.QUERY_PARAMS,\r\n            value: JSON.stringify(params),\r\n        });\r\n    }\r\n\r\n    async emitWrapperScroll(scrollTop: number): Promise<void> {\r\n        this._pastTrainingsWrapperScroll$$.next(scrollTop);\r\n        await Storage.set({\r\n            key: StorageItems.PAST_TRAININGS_SCROLL_WRAPPER,\r\n            value: JSON.stringify(scrollTop),\r\n        });\r\n    }\r\n\r\n    keepStreamValues(storageItems: StorageItems[]): Observable<boolean> {\r\n        const storageStreams: Observable<GetResult>[] = [];\r\n        for (const key of storageItems) {\r\n            storageStreams.push(from(Storage.get({ key })));\r\n        }\r\n        return combineLatest(storageStreams).pipe(\r\n            map((storedData) => {\r\n                const isStoredData = storedData.every((item) => !!item?.value);\r\n                if (!storedData || !storedData.length || !isStoredData) {\r\n                    return false;\r\n                }\r\n                storedData.forEach((item, index) => {\r\n                    if (item?.value) {\r\n                        const parsedData = JSON.parse(item.value);\r\n                        const selectedStorageItem = storageItems.find((_item, i) => i === index);\r\n                        switch (selectedStorageItem) {\r\n                            case 'pastTrainingsScrollWrapper': {\r\n                                this._pastTrainingsWrapperScroll$$.next(parsedData);\r\n                                break;\r\n                            }\r\n                            case 'queryParams': {\r\n                                this._pastTrainingsQueryParams$$.next(parsedData);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                return true;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { EMPTY, of, timer } from 'rxjs';\r\nimport { catchError, finalize, map, switchMap } from 'rxjs/operators';\r\nimport { SignupService } from '../../services/api/auth/signup.service';\r\nimport { LoginService } from '../../services/api/auth/login.service';\r\n\r\nexport function passwordFitsEmail(\r\n    loginService: LoginService,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (group: AbstractControl) =>\r\n        timer(350).pipe(\r\n            switchMap((_) => {\r\n                if (group) {\r\n                    const email: string = group.get('email')?.value;\r\n                    const password: string = group.get('password')?.value;\r\n                    if (!email || !password) {\r\n                        return of(null);\r\n                    }\r\n                    return loginService.passwordFitsEmail(email, password).pipe(\r\n                        map((response: boolean) => {\r\n                            if (!response) {\r\n                                return { passwordFitsEmail: true };\r\n                            }\r\n                            return null;\r\n                        }),\r\n                        catchError((_) => of(null)),\r\n                        finalize(() => changeDetectorRef.detectChanges()),\r\n                    );\r\n                } else {\r\n                    return of(null);\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function isEmailAvailable(\r\n    signupService: SignupService,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (control: AbstractControl<string>) =>\r\n        timer(350).pipe(\r\n            switchMap((_) => {\r\n                if (control) {\r\n                    const email = control?.value;\r\n                    if (!email) {\r\n                        return EMPTY;\r\n                    }\r\n                    return signupService.getEmails(email.trim().toLowerCase()).pipe(\r\n                        map((response: boolean) => {\r\n                            if (!response) {\r\n                                return { availableEmail: true };\r\n                            }\r\n                            return null;\r\n                        }),\r\n                        catchError((_) => EMPTY),\r\n                        finalize(() => changeDetectorRef.detectChanges()),\r\n                    );\r\n                } else {\r\n                    return EMPTY;\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function samePasswords(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            const password: string = group.get('password')?.value;\r\n            const confirmPassword: string = group.get('confirmPassword')?.value;\r\n            if (!password || !confirmPassword) {\r\n                return null;\r\n            } else {\r\n                if (password !== confirmPassword) {\r\n                    return { equalPass: true };\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n","import { ChangeDetectorRef, Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { EMPTY } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { AuthService } from '../../../services/api/auth/auth.service';\r\nimport { LoginService } from '../../../services/api/auth/login.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\nimport { IonFocusDurations } from '../../../constants/shared/ion-focus-durations.const';\r\nimport { LoadingControllerService } from '../../../services/shared/loading-controller.service';\r\n\r\n@Component({\r\n    selector: 'bl-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent {\r\n    isLoading = false;\r\n\r\n    focusDuration = IonFocusDurations.LOGIN;\r\n    form = new FormGroup(\r\n        {\r\n            email: new FormControl('', [Validators.required, Validators.email]),\r\n            password: new FormControl('', [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20),\r\n            ]),\r\n        },\r\n        {\r\n            asyncValidators: AuthCustomValidators.passwordFitsEmail(\r\n                this._loginService,\r\n                this._changeDetectorRef,\r\n            ),\r\n        },\r\n    );\r\n\r\n    constructor(\r\n        private _loginService: LoginService,\r\n        private _authService: AuthService,\r\n        private _loadingControllerService: LoadingControllerService,\r\n        private _router: Router,\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n    ) {}\r\n\r\n    async onSubmit(): Promise<void> {\r\n        if (!this.form.valid) {\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        await this._loadingControllerService.displayLoader({ message: 'auth.logging_in' });\r\n\r\n        this._authService\r\n            .login(this.form.controls.email.value, this.form.controls.password.value)\r\n            .pipe(\r\n                catchError((_) => EMPTY),\r\n                finalize(async () => {\r\n                    this.isLoading = false;\r\n                    await this._loadingControllerService.dismissLoader();\r\n                }),\r\n            )\r\n            .subscribe(async (response: AuthResponseData) => {\r\n                if (response) {\r\n                    await this._router.navigate(['/training/new-training']);\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EMPTY } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { MESSAGE_DURATION } from '../../../constants/shared/message-duration.const';\r\nimport { LanguageCode, WeightUnit } from '../../../models/common/preferences.type';\r\nimport { AuthService } from '../../../services/api/auth/auth.service';\r\nimport { SignupService } from '../../../services/api/auth/signup.service';\r\nimport { LoadingControllerService } from '../../../services/shared/loading-controller.service';\r\nimport { ToastControllerService } from '../../../services/shared/toast-controller.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\nimport { IonFocusDurations } from '../../../constants/shared/ion-focus-durations.const';\r\nimport { DEFAULT_WEIGHT_UNIT } from '../../../constants/shared/default-weight-unit.const';\r\nimport { DEFAULT_LANGUAGE } from '../../../constants/shared/default-language.const';\r\n\r\n@Component({\r\n    selector: 'bl-signup',\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.scss'],\r\n})\r\nexport class SignupComponent {\r\n    isLoading = false;\r\n\r\n    focusDuration = IonFocusDurations.SIGNUP;\r\n    form = new FormGroup(\r\n        {\r\n            language: new FormControl<LanguageCode>(DEFAULT_LANGUAGE, [Validators.required]),\r\n            weightUnit: new FormControl<WeightUnit>(DEFAULT_WEIGHT_UNIT, [Validators.required]),\r\n            email: new FormControl('', {\r\n                validators: [Validators.required, Validators.email],\r\n                asyncValidators: [\r\n                    AuthCustomValidators.isEmailAvailable(\r\n                        this._signupService,\r\n                        this._changeDetectorRef,\r\n                    ),\r\n                ],\r\n            }),\r\n            password: new FormControl('', [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20),\r\n            ]),\r\n            confirmPassword: new FormControl('', [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20),\r\n            ]),\r\n        },\r\n        { validators: AuthCustomValidators.samePasswords() },\r\n    );\r\n\r\n    constructor(\r\n        private _authService: AuthService,\r\n        private _signupService: SignupService,\r\n        private _translateService: TranslateService,\r\n        private _loadingControllerService: LoadingControllerService,\r\n        private _toastControllerService: ToastControllerService,\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _router: Router,\r\n    ) {}\r\n\r\n    async onSubmit(): Promise<void> {\r\n        if (!this.form.valid) {\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        await this._loadingControllerService.displayLoader({ message: 'auth.signing_in' });\r\n\r\n        this._authService\r\n            .signup(\r\n                this.form.controls.language.value,\r\n                this.form.controls.weightUnit.value,\r\n                this.form.controls.email.value,\r\n                this.form.controls.password.value,\r\n                this.form.controls.confirmPassword.value,\r\n            )\r\n            .pipe(\r\n                catchError((_) => EMPTY),\r\n                finalize(async () => {\r\n                    this.isLoading = false;\r\n                    await this._loadingControllerService.dismissLoader();\r\n                }),\r\n            )\r\n            .subscribe(async (response) => {\r\n                if (response.Success) {\r\n                    await this._toastControllerService.displayToast({\r\n                        message: this._translateService.instant(response.Message),\r\n                        duration: MESSAGE_DURATION.GENERAL,\r\n                        color: response.Success ? 'primary' : 'danger',\r\n                    });\r\n                    await this._router.navigate(['/auth/login']);\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { PopoverController, MenuController } from '@ionic/angular';\r\nimport { take, switchMap } from 'rxjs/operators';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { Preferences } from '../../../models/common/preferences.model';\r\nimport {\r\n    LanguageCode,\r\n    PreferenceChangedType,\r\n    WeightUnit,\r\n} from '../../../models/common/preferences.type';\r\nimport { PreferencesService } from '../../../services/shared/preferences.service';\r\nimport { AuthStoreService } from '../../../services/store/auth/auth-store.service';\r\nimport { PreferencesStoreService } from '../../../services/store/shared/preferences-store.service';\r\n\r\ninterface LanguageData {\r\n    LanguageCode: LanguageCode;\r\n    ImageUrl: string;\r\n    LanguageName: string;\r\n}\r\n\r\ninterface UnitData {\r\n    UnitName: string;\r\n    WeightUnit: WeightUnit;\r\n}\r\n\r\n@Component({\r\n    selector: 'bl-preferences',\r\n    templateUrl: './preferences.component.html',\r\n    styleUrls: ['./preferences.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PreferencesComponent {\r\n    @Input()\r\n    preferences: Preferences;\r\n\r\n    @Input()\r\n    preferenceType: PreferenceChangedType = 'language';\r\n\r\n    readonly languageData: Readonly<LanguageData[]> = [\r\n        {\r\n            LanguageCode: 'en',\r\n            ImageUrl: '../../../../assets/images/flags/united-kingdom.png',\r\n            LanguageName: 'languages.english',\r\n        },\r\n        {\r\n            LanguageCode: 'hr',\r\n            ImageUrl: '../../../../assets/images/flags/croatia.png',\r\n            LanguageName: 'languages.croatian',\r\n        },\r\n    ];\r\n\r\n    readonly unitData: UnitData[] = [\r\n        {\r\n            UnitName: 'units.kilograms',\r\n            WeightUnit: 'kg',\r\n        },\r\n        {\r\n            UnitName: 'units.pounds',\r\n            WeightUnit: 'lbs',\r\n        },\r\n    ];\r\n\r\n    constructor(\r\n        private readonly preferencesStoreService: PreferencesStoreService,\r\n        private readonly authStoreService: AuthStoreService,\r\n        private readonly preferencesService: PreferencesService,\r\n        private readonly popoverController: PopoverController,\r\n        private readonly menuController: MenuController,\r\n    ) {}\r\n\r\n    changePreference(preference: LanguageCode | WeightUnit): void {\r\n        const currentPreferences = this.preferencesStoreService.getPreferences();\r\n        this.authStoreService.loggedUser$\r\n            .pipe(\r\n                take(1),\r\n                switchMap((userData: AuthResponseData) => {\r\n                    const preferences: Preferences = {\r\n                        userId: userData._id,\r\n                        languageCode:\r\n                            this.preferenceType === 'language'\r\n                                ? (preference as LanguageCode)\r\n                                : currentPreferences.languageCode,\r\n                        weightUnit:\r\n                            this.preferenceType === 'weightUnit'\r\n                                ? (preference as WeightUnit)\r\n                                : currentPreferences.weightUnit,\r\n                        showByPeriod: currentPreferences.showByPeriod,\r\n                    };\r\n                    return this.preferencesService.setPreferences(preferences, this.preferenceType);\r\n                }),\r\n            )\r\n            .subscribe(async (_) => {\r\n                await this.popoverController.dismiss();\r\n                await this.menuController.close();\r\n            });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { from, Observable } from 'rxjs';\r\nimport { share, switchMap, take } from 'rxjs/operators';\r\nimport { startOfWeek, startOfDay, endOfWeek, endOfDay, format } from 'date-fns';\r\nimport { Preferences } from '../../../models/common/preferences.model';\r\nimport { AuthStoreService } from '../../../services/store/auth/auth-store.service';\r\nimport { PreferencesStoreService } from '../../../services/store/shared/preferences-store.service';\r\nimport { PastTrainingsQueryParams } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { QUERY_PARAMS_DATE_FORMAT } from '../../../constants/training/past-trainings-date-format.const';\r\nimport { PreferencesComponent } from '../preferences/preferences.component';\r\nimport { PreferenceChangedType } from '../../../models/common/preferences.type';\r\nimport { PastTrainingsStoreService } from '../../../services/store/training/past-trainings-store.service';\r\n\r\n@Component({\r\n    selector: 'bl-side-nav',\r\n    templateUrl: './side-nav.component.html',\r\n    styleUrls: ['./side-nav.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SideNavComponent {\r\n    readonly isAuthenticated$: Observable<boolean> = this._authStoreService.isAuth$.pipe(share());\r\n    private readonly preferences$: Observable<Preferences> =\r\n        this._preferencesStoreService.preferencesChanged$.pipe(take(1));\r\n\r\n    constructor(\r\n        private readonly _authStoreService: AuthStoreService,\r\n        private readonly _pastTrainingsStoreService: PastTrainingsStoreService,\r\n        private readonly _preferencesStoreService: PreferencesStoreService,\r\n        private readonly _popoverController: PopoverController,\r\n        private readonly _router: Router,\r\n    ) {}\r\n\r\n    async onLogout(): Promise<void> {\r\n        await this._authStoreService.logout();\r\n    }\r\n\r\n    async goToPastTrainings(): Promise<void> {\r\n        this._pastTrainingsStoreService.pastTrainingsQueryParams$\r\n            .pipe(take(1))\r\n            .subscribe(async (params) => {\r\n                let queryParams: PastTrainingsQueryParams;\r\n                if (params) {\r\n                    queryParams = params;\r\n                } else {\r\n                    const showByPeriod =\r\n                        this._preferencesStoreService.getPreferences()?.showByPeriod ?? 'week';\r\n                    const startDate = startOfWeek(startOfDay(new Date()), { weekStartsOn: 1 });\r\n                    const endDate =\r\n                        showByPeriod === 'week'\r\n                            ? endOfWeek(endOfDay(new Date()), { weekStartsOn: 1 })\r\n                            : startOfWeek(startOfDay(new Date()), { weekStartsOn: 1 });\r\n                    queryParams = {\r\n                        startDate: format(startDate, QUERY_PARAMS_DATE_FORMAT),\r\n                        endDate: format(endDate, QUERY_PARAMS_DATE_FORMAT),\r\n                        showBy: showByPeriod,\r\n                    };\r\n                }\r\n                await this._router.navigate(['/training/past-trainings'], { queryParams });\r\n            });\r\n    }\r\n\r\n    openPreferencePopover($event: Event, preferenceType: PreferenceChangedType): void {\r\n        $event.stopPropagation();\r\n        this.preferences$\r\n            .pipe(\r\n                switchMap((preferences) =>\r\n                    from(\r\n                        this._popoverController.create({\r\n                            component: PreferencesComponent,\r\n                            event: $event,\r\n                            componentProps: {\r\n                                preferences,\r\n                                preferenceType,\r\n                            },\r\n                            side: 'left',\r\n                            keyboardClose: true,\r\n                        }),\r\n                    ),\r\n                ),\r\n                switchMap((popover) => from(popover.present())),\r\n            )\r\n            .subscribe();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, ViewChild } from '@angular/core';\r\nimport { IonDatetime, ModalController } from '@ionic/angular';\r\nimport { format, subMonths } from 'date-fns';\r\nimport { DialogRoles } from '../../../constants/enums/model-roles.enum';\r\n\r\n@Component({\r\n    templateUrl: './datetime-picker.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DateTimePickerComponent {\r\n    maxDate = format(new Date(), 'yyyy-MM-dd');\r\n    minDate = format(subMonths(new Date(), 2), 'yyyy-MM-dd');\r\n\r\n    @Input()\r\n    dateValue: string;\r\n\r\n    @ViewChild('datetime', { read: IonDatetime })\r\n    dateTimeEl: IonDatetime;\r\n\r\n    constructor(private readonly modalController: ModalController) {}\r\n\r\n    dateChanged(currentDateValue: string): void {\r\n        this.dateValue = currentDateValue;\r\n    }\r\n\r\n    async close(): Promise<void> {\r\n        await this.dateTimeEl?.cancel();\r\n        await this.modalController.dismiss(undefined, DialogRoles.CANCEL);\r\n    }\r\n\r\n    async select(): Promise<void> {\r\n        await this.dateTimeEl?.confirm();\r\n        await this.modalController.dismiss(this.dateValue, DialogRoles.SELECT_DATE);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthStoreService } from '../../../services/store/auth/auth-store.service';\r\n\r\n@Component({\r\n    selector: 'bl-not-found',\r\n    templateUrl: './not-found.component.html',\r\n    styleUrls: ['./not-found.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NotFoundComponent {\r\n    isAuth$: Observable<boolean> = this.authStoreService.isAuth$;\r\n\r\n    constructor(private readonly authStoreService: AuthStoreService) {}\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { isNeverCheck } from '../../../helpers/is-never-check.helper';\r\nimport { StreamData } from '../../../models/common/common.model';\r\nimport { Paginator } from '../../../models/common/paginator.model';\r\nimport { Page } from '../../../models/common/page.type';\r\nimport {\r\n    DateInterval,\r\n    PastTrainings,\r\n} from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { PaginatorChanged } from '../../../models/common/paginator.model';\r\nimport { DEFAULT_SIZE, INITIAL_PAGE } from '../../../constants/shared/paginator.const';\r\n\r\n@Component({\r\n    selector: 'bl-pagination',\r\n    templateUrl: './pagination.component.html',\r\n    styleUrls: ['./pagination.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationComponent {\r\n    readonly pageSizeOptions: number[] = [1, 3, 5, 10];\r\n\r\n    @Input()\r\n    isSearch = false;\r\n\r\n    @Input()\r\n    page: number = INITIAL_PAGE;\r\n\r\n    @Input()\r\n    size: number = DEFAULT_SIZE;\r\n\r\n    @Input()\r\n    isPreviousPage = false;\r\n\r\n    @Input()\r\n    isNextPage = false;\r\n\r\n    @Input()\r\n    data: StreamData<Paginator<PastTrainings>> | undefined = undefined;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Output()\r\n    readonly paginatorChanged: EventEmitter<PaginatorChanged> = new EventEmitter<PaginatorChanged>();\r\n\r\n    constructor(private readonly translateService: TranslateService) {}\r\n\r\n    loadPage(\r\n        page?: Page,\r\n        dateInterval?: DateInterval,\r\n        earliestTrainingDate?: string,\r\n        lastPage?: number,\r\n    ): void {\r\n        if (this.isSearch) {\r\n            if (page) {\r\n                switch (page) {\r\n                    case 'First': {\r\n                        this.page = INITIAL_PAGE;\r\n                        break;\r\n                    }\r\n                    case 'Previous': {\r\n                        this.page--;\r\n                        break;\r\n                    }\r\n                    case 'Next': {\r\n                        this.page++;\r\n                        break;\r\n                    }\r\n                    case 'Last': {\r\n                        this.page = lastPage;\r\n                        break;\r\n                    }\r\n                    default:\r\n                        isNeverCheck(page);\r\n                }\r\n            }\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: true,\r\n            } as PaginatorChanged);\r\n        } else {\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: false,\r\n                PageType: page,\r\n                DateInterval: dateInterval,\r\n                EarliestTrainingDate: earliestTrainingDate,\r\n            } as PaginatorChanged);\r\n        }\r\n    }\r\n\r\n    setPageText$(totalPages: number): Observable<string> {\r\n        return this.translateService.stream('common').pipe(\r\n            map(\r\n                (value: { [key: string]: string }) =>\r\n                    `\r\n                        ${value['page']}\r\n                        <strong class=\"primary\">${this.page?.toString() ?? '1'}</strong>\r\n                        ${value['of']}\r\n                        <strong class=\"primary\">${totalPages?.toString() ?? '1'}</strong>\r\n                    `,\r\n            ),\r\n        );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bl-skeleton-loader',\r\n    templateUrl: './skeleton-loader.component.html',\r\n    styleUrls: ['./skeleton-loader.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SkeletonLoaderComponent implements OnInit {\r\n    width: string;\r\n    height: string;\r\n    borderRadius: string;\r\n    margin: string;\r\n    className: string;\r\n\r\n    constructor(private readonly elementRef: ElementRef<HTMLElement>) {}\r\n\r\n    ngOnInit(): void {\r\n        const host = this.elementRef.nativeElement;\r\n        if (this.className) {\r\n            host.classList.add(this.className);\r\n        }\r\n    }\r\n\r\n    styleSkeleton(): { [key: string]: string } {\r\n        return {\r\n            width: this.width ?? '',\r\n            height: this.height ?? '',\r\n            'border-radius': this.borderRadius ?? '',\r\n            margin: this.margin ?? '',\r\n        };\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { EMPTY, Observable, of } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { NewTraining } from '../../../../../models/training/new-training/new-training.model';\r\nimport { StreamData } from '../../../../../models/common/common.model';\r\nimport { Paginator } from '../../../../../models/common/paginator.model';\r\nimport { DialogRoles } from '../../../../../constants/enums/model-roles.enum';\r\nimport { PastTrainings } from '../../../../../models/training/past-trainings/past-trainings.model';\r\nimport { SharedStoreService } from '../../../../../services/store/shared/shared-store.service';\r\nimport { DeleteTrainingActionService } from '../../../../../services/api/training/delete-training-action.service';\r\nimport { SearchDataDto } from '../../../../../models/common/paginator.model';\r\nimport { DEFAULT_SIZE, INITIAL_PAGE } from '../../../../../constants/shared/paginator.const';\r\n\r\nexport interface DeleteTrainingActionDialogData {\r\n    readonly title$: Observable<string>;\r\n    readonly dateCreated$: Observable<string>;\r\n    readonly timeCreated$: Observable<string>;\r\n    readonly training$: Observable<NewTraining>;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './delete-training-action.component.html',\r\n    styleUrls: ['./delete-training-action.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeleteTrainingActionComponent {\r\n    @Input()\r\n    title$: Observable<string> = of('');\r\n\r\n    @Input()\r\n    dateCreated$: Observable<string> = of('');\r\n\r\n    @Input()\r\n    timeCreated$: Observable<string> = of('');\r\n\r\n    @Input()\r\n    training$: Observable<NewTraining>;\r\n\r\n    isLoading = false;\r\n\r\n    constructor(\r\n        private readonly sharedStoreService: SharedStoreService,\r\n        private readonly deleteTrainingActionService: DeleteTrainingActionService,\r\n        private readonly modalController: ModalController,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly route: ActivatedRoute,\r\n    ) {}\r\n\r\n    deleteTraining(trainingId: string): void {\r\n        this.isLoading = true;\r\n        this.deleteTrainingActionService\r\n            .deleteTraining(trainingId, this.getDeleteTrainingMeta())\r\n            .pipe(\r\n                catchError((_) => EMPTY),\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                }),\r\n            )\r\n            .subscribe(async (response: StreamData<Paginator<PastTrainings>>) => {\r\n                this.sharedStoreService.deletedTraining$$.next(response);\r\n                await this.modalController.dismiss(false, DialogRoles.DELETE_TRAINING);\r\n            });\r\n    }\r\n\r\n    async onCancel(): Promise<void> {\r\n        await this.modalController.dismiss(false, DialogRoles.CANCEL);\r\n    }\r\n\r\n    private getDeleteTrainingMeta(): {\r\n        searchData: SearchDataDto | undefined;\r\n        currentDate: Date | undefined;\r\n    } {\r\n        const isSearch = !!this.route.snapshot.queryParams?.search;\r\n        if (isSearch) {\r\n            const searchValue = (this.route.snapshot.queryParams?.search as string).trim();\r\n            const page = +this.route.snapshot.queryParams?.page ?? INITIAL_PAGE;\r\n            const size = +this.route.snapshot.queryParams?.size ?? DEFAULT_SIZE;\r\n            return {\r\n                searchData: {\r\n                    page: page,\r\n                    size: size,\r\n                    searchValue: searchValue,\r\n                } as SearchDataDto,\r\n                currentDate: undefined,\r\n            };\r\n        } else {\r\n            const splittedDate = (this.route.snapshot.queryParams.startDate as string)?.split('-');\r\n            return {\r\n                searchData: undefined,\r\n                currentDate: new Date(`\r\n                    ${splittedDate[2]}-\r\n                    ${splittedDate[1]}-\r\n                    ${splittedDate[0]}\r\n                `),\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n    selector: 'bl-more-training-action',\n    templateUrl: './more-training-action.component.html',\n    styleUrls: ['./more-training-action.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MoreTrainingActionComponent {}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n//if using mobile device emulator: http://192.168.0.114:3000\r\nexport const environment = {\r\n    production: false,\r\n    BACKEND: 'http://192.168.0.114:3000',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(_err => {\r\n      //TODO\r\n  });\r\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t79,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t5593,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t3225,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t4812,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t6655,\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t4856,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t3059,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t8648,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t8308,\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t4690,\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t4090,\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t6214,\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t9447,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t7950,\n\t\t\"default-node_modules_ionic_core_dist_esm_parse-26477881_js-node_modules_ionic_core_dist_esm_t-6bed99\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t9689,\n\t\t\"default-node_modules_ionic_core_dist_esm_parse-26477881_js-node_modules_ionic_core_dist_esm_t-6bed99\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t8840,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t749,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t9667,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t3288,\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t5473,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t3634,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t2855,\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t495,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t8737,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t9632,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t4446,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t2275,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t8050,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t8994,\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t3592,\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t5454,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t290,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t2666,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t4816,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t5534,\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t4902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t1938,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t4832,\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t668,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t1624,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t9989,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t8902,\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t199,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t8395,\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t6357,\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t8268,\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t5269,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t2875,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 863;\nmodule.exports = webpackAsyncContext;"],"names":["NgModule","PreloadAllModules","RouterModule","AuthGuard","NotFoundResolverService","NotFoundComponent","routes","path","redirectTo","pathMatch","loadChildren","then","module","AuthModule","TrainingModule","canLoad","component","resolve","AppRoutingModule","imports","forRoot","preloadingStrategy","exports","HttpClient","Injectable","Router","tap","environment","AuthStoreService","AuthService","constructor","_http","_router","_authStoreService","signup","language","weightUnit","email","password","confirmPassword","signupData","preferences","languageCode","post","BACKEND","login","authData","pipe","response","Token","emitLoggedUser","emitIsAuth","setToken","expiresInDuration","ExpiresIn","setAuthTimer","now","Date","expirationDate","getTime","saveLS","getToken","_id","navigate","providedIn","DatePipe","HttpParams","ModalController","TranslateService","of","map","mapDateInterval","DeleteTrainingActionComponent","DeleteTrainingActionService","http","modalController","datePipe","translateService","perform","data","openDeleteTrainingDialog","modal","create","componentProps","title$","stream","dateCreated$","weekDays","dayIndex","value","transform","training","trainingDate","timeCreated$","timeCreated","training$","present","deleteTraining","trainingId","deleteTrainingMeta","params","set","JSON","stringify","delete","LoadingController","LoadingControllerService","loadingController","displayLoader","options","loading","message","instant","keyboardClose","dismissLoader","dismiss","switchMap","MESSAGE_DURATION","PreferencesStoreService","NewTrainingStoreService","ToastControllerService","PreferencesService","_translateService","_toastControllerService","_preferencesStoreService","_newTrainingStoreService","getPreferences","userId","get","setPreferences","preferenceChanged","apiPreferences","showByPeriod","apiResponse","put","use","_","emitPreferences","Message","displayToast","duration","GENERAL","color","updateWeightUnit","ToastController","toastController","toast","BehaviorSubject","from","Storage","StorageItems","router","_loggedUser$$","asObservable","_isAuth$$","token","getLoggedUser","getValue","loggedUser","next","getIsAuth","isAuth","autoLogin","key","USER_DATA","storedData","userData","parse","ExpirationDate","expiresIn","logout","clearTimeout","tokenTimer","clearData","setTimeout","remove","TRAINING_STATE","QUERY_PARAMS","combineLatest","PastTrainingsStoreService","_pastTrainingsQueryParams$$","_pastTrainingsWrapperScroll$$","emitPastTrainingsQueryParams","emitWrapperScroll","scrollTop","PAST_TRAININGS_SCROLL_WRAPPER","keepStreamValues","storageItems","storageStreams","push","isStoredData","every","item","length","forEach","index","parsedData","selectedStorageItem","find","_item","i","ChangeDetectorRef","Component","FormControl","FormGroup","Validators","catchError","finalize","EMPTY","LoginService","AuthCustomValidators","IonFocusDurations","LoginComponent","_loginService","_authService","_loadingControllerService","_changeDetectorRef","LOGIN","required","minLength","maxLength","asyncValidators","passwordFitsEmail","onSubmit","form","valid","isLoading","controls","subscribe","selector","template","SignupService","DEFAULT_WEIGHT_UNIT","DEFAULT_LANGUAGE","SignupComponent","_signupService","SIGNUP","validators","isEmailAvailable","samePasswords","Success","ChangeDetectionStrategy","Input","PopoverController","MenuController","take","PreferencesComponent","preferencesStoreService","authStoreService","preferencesService","popoverController","menuController","LanguageCode","ImageUrl","LanguageName","UnitName","WeightUnit","changePreference","preference","currentPreferences","loggedUser$","preferenceType","close","changeDetection","OnPush","share","startOfWeek","startOfDay","endOfWeek","endOfDay","format","QUERY_PARAMS_DATE_FORMAT","SideNavComponent","_pastTrainingsStoreService","_popoverController","isAuth$","preferencesChanged$","onLogout","goToPastTrainings","pastTrainingsQueryParams$","queryParams","startDate","weekStartsOn","endDate","showBy","openPreferencePopover","$event","stopPropagation","preferences$","event","side","popover","ViewChild","IonDatetime","subMonths","DialogRoles","DateTimePickerComponent","dateChanged","currentDateValue","dateValue","dateTimeEl","cancel","undefined","CANCEL","select","confirm","SELECT_DATE","args","read","ActivatedRoute","SharedStoreService","DEFAULT_SIZE","INITIAL_PAGE","sharedStoreService","deleteTrainingActionService","changeDetectorRef","route","getDeleteTrainingMeta","markForCheck","deletedTraining$$","DELETE_TRAINING","onCancel","isSearch","snapshot","search","searchValue","trim","page","size","searchData","currentDate","splittedDate","split"],"sourceRoot":"webpack:///","x_google_ignoreList":[62]}