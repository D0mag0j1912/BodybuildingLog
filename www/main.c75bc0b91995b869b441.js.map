{"version":3,"sources":["./src/app/views/auth/login/login.component.ts","./src/app/modules/auth/auth.module.ts","./src/app/views/shared/training/sets/sets.component.html","./src/app/helpers/error-matchers/exercise-name-error-state-matcher.helper.ts","./src/app/helpers/training/past-trainings/map-past-trainings-dates.helper.ts","./src/app/pipes/training/new-training/round-total-weight/round-total-weight.module.ts","./src/app/views/shared/training/training-actions/delete-training-action/delete-training-action.component.ts","./src/app/services/auth/signup.service.ts","./src/app/validators/training/set.validators.ts","./src/app/helpers/control-value-accessor.helper.ts","./src/app/views/navigation/side-nav/side-nav.component.html","./src/app/views/shared/not-found/not-found.component.ts","./src/app/pipes/training/new-training/round-total-weight/round-total-weight.pipe.ts","./src/app/modules/navigation.module.ts","./src/app/views/shared/dialog/dialog.component.html","./src/app/models/training/new-training/empty-training.model.ts","./src/app/views/auth/signup/signup.component.html","./src/app/services/auth/auth.service.ts","./src/app/views/shared/pagination/pagination.component.html","./src/app/validators/training/single-exercise.validators.ts","./src/environments/environment.prod.ts","./src/app/services/errors/sentry.service.ts","./src/app/views/shared/training/training-actions/delete-training-action/delete-training-action.component.html","./src/app/views/navigation/header/header.component.scss","./src/app/views/shared/not-found/not-found.component.html","./src/app/views/auth/signup/signup.component.scss","./src/app/views/shared/dialog/dialog.component.scss","./src/app/views/shared/training/total-weight/total-weight.component.ts","./src/app/views/shared/training/total-weight/total-weight.component.html","./src/app/views/auth/login/login.component.html","./src/app/services/training/new-training.service.ts","./src/app/helpers/is-never-check.helper.ts","./src/app/views/shared/pagination/pagination.component.scss","./src/app/views/shared/pagination/pagination.component.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/validators/shared/common.validators.ts","./src/app/app.component.ts","./src/app/views/auth/login/login.component.scss","./src/app/services/auth/login.service.ts","./src/app/views/shared/training/training-actions/more-training-action/more-training-action.component.ts","./src/app/guards/auth.guard.ts","./src/app/app.component.html","./src/app/models/common/interfaces/common.model.ts","./src/app/models/training/past-trainings/past-trainings.model.ts","./src/app/validators/auth/auth.validators.ts","./src/app/app.module.ts","./src/app/views/shared/training/sets/sets.component.ts","./src/app/views/shared/training/training-actions/more-training-action/more-training-action.component.html","./src/app/views/auth/signup/signup.component.ts","./src/app/constants/spinner-size.const.ts","./src/app/views/navigation/header/header.component.html","./src/app/pipes/training/past-trainings/map-training-actions.pipe.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.module.ts","./src/app/pipes/training/new-training/new-training.pipe.ts","./src/app/views/shared/dialog/dialog.component.ts","./src/app/models/training/shared/set.model.ts","./src/app/services/shared/unsubscribe.service.ts","./src/app/services/shared/shared.service.ts","./src/app/pipes/pipes.module.ts","./src/app/views/shared/training/training-actions/delete-training-action/delete-training-action.component.scss","./src/app/services/shared/navigation.service.ts","./src/app/views/shared/training/single-exercise/single-exercise.component.html","./src/app/modules/shared.module.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/views/shared/training/single-exercise/single-exercise.component.scss","./src/app/views/shared/training/total-weight/total-weight.component.scss","./src/app/views/shared/training/sets/sets.component.scss","./src/app/helpers/dates.helper.ts","./src/app/helpers/error-matchers/form-error-state-matcher.helper.ts","./src/app/constants/snack-bar-duration.const.ts","./src/app/services/shared/not-found-resolver.service.ts","./src/app/services/training/training-actions/delete-training-action.service.ts","./src/app/views/navigation/header/header.component.ts","./src/app/views/shared/training/single-exercise/single-exercise.component.ts","./src/app/views/shared/training/training-actions/more-training-action/more-training-action.component.scss","./src/app/interceptors/error.interceptor.ts","./src/app/views/navigation/side-nav/side-nav.component.ts","./src/app/models/common/interfaces/paginator.model.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.pipe.ts","./src/app/views/shared/not-found/not-found.component.scss","./src/app/app.component.scss","./src/app/views/navigation/side-nav/side-nav.component.scss","./src/main.ts","./src/app/models/preferences.model.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.c75bc0b91995b869b441.js","sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { AuthResponseData } from 'src/app/models/auth/auth-data.model';\r\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\r\nimport { FormErrorStateMatcher } from '../../../helpers/error-matchers/form-error-state-matcher.helper';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { LoginService } from '../../../services/auth/login.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\n\r\ntype FormData = {\r\n    email?: string;\r\n    password?: string;\r\n};\r\n\r\n@Component({\r\n    selector: 'bl-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LoginComponent implements AfterViewInit {\r\n\r\n    isLoading = false;\r\n\r\n    form: FormGroup;\r\n    formErrorStateMatcher: FormErrorStateMatcher = new FormErrorStateMatcher();\r\n\r\n    @ViewChild('emailRef', {\r\n        read: ElementRef,\r\n    })\r\n    private readonly emailInput: ElementRef;\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly loginService: LoginService,\r\n        private readonly authService: AuthService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly snackBar: MatSnackBar,\r\n    ) {\r\n        this.form = new FormGroup({\r\n            'email': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.email,\r\n            ]),\r\n            'password': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20),\r\n            ]),\r\n        }, { asyncValidators: AuthCustomValidators.passwordFitsEmail(\r\n            this.loginService,\r\n            this.changeDetectorRef) });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => (<HTMLInputElement>this.emailInput.nativeElement).focus());\r\n    }\r\n\r\n    onSubmit(): void {\r\n        if (!this.form.valid) {\r\n            this.snackBar.open(this.translateService.instant('auth.errors.invalid_form'), null, {\r\n                duration: SNACK_BAR_DURATION.ERROR,\r\n                panelClass: 'app__snackbar-error',\r\n            });\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n\r\n        this.authService.login(\r\n            this.accessFormData('email').value as string,\r\n            this.accessFormData('password').value as string,\r\n        ).pipe(\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe((response: AuthResponseData) => {\r\n            if(response) {\r\n                this.snackBar.open(this.translateService.instant(response.Message as string), null, {\r\n                    duration: SNACK_BAR_DURATION.GENERAL,\r\n                    panelClass: response.Token ? 'app__snackbar' : 'app__snackbar-error',\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    accessFormData(formFieldName: keyof FormData): FormControl {\r\n        return this.form.get(formFieldName) as FormControl;\r\n    }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\nimport { LoginService } from '../../services/auth/login.service';\r\nimport { SignupService } from '../../services/auth/signup.service';\r\nimport { LoginComponent } from '../../views/auth/login/login.component';\r\nimport { SignupComponent } from '../../views/auth/signup/signup.component';\r\nimport { SharedModule } from '../shared.module';\r\n\r\nconst COMPONENTS = [\r\n    SignupComponent,\r\n    LoginComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n];\r\n\r\nconst MY_IMPORTS = [\r\n    MaterialModule,\r\n    SharedModule,\r\n];\r\n\r\nconst SERVICES = [\r\n    SignupService,\r\n    LoginService,\r\n    AuthService,\r\n];\r\n\r\n@NgModule({\r\n    declarations: [ ...COMPONENTS ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...MY_IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n    providers: [ ...SERVICES ],\r\n})\r\nexport class AuthModule {}\r\n","export default \"<form\\r\\n    [formGroup]=\\\"$any(form)\\\"\\r\\n    autocomplete=\\\"off\\\">\\r\\n    <ng-container *ngFor=\\\"let set of getSets(); let j = index\\\">\\r\\n        <ng-container [formGroupName]=\\\"j\\\">\\r\\n            <div\\r\\n                class=\\\"sets\\\"\\r\\n                [class.sets--after-first]=\\\"j > 0\\\">\\r\\n                <mat-form-field\\r\\n                    appearance=\\\"outline\\\"\\r\\n                    class=\\\"sets-weight-lifted\\\">\\r\\n                    <mat-label class=\\\"label\\\">\\r\\n                        {{ 'training.new_training.weight_lifted' | translate }}\\r\\n                    </mat-label>\\r\\n                    <input\\r\\n                        matInput\\r\\n                        type=\\\"text\\\"\\r\\n                        formControlName=\\\"weightLifted\\\"\\r\\n                        [errorStateMatcher]=\\\"formErrorStateMatcher\\\"\\r\\n                        (input)=\\\"onChangeSets(j)\\\"\\r\\n                        (blur)=\\\"onTouched()\\\">\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"(set.errors?.weightLiftedRequired && ((isExerciseFormSubmitted$ | async) || exerciseNameControl?.value))\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.weight_lifted_required' | translate }}\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"set.errors?.setNotEntered\\r\\n                            && (isExerciseFormSubmitted$ | async)\\r\\n                            && !set.errors?.weightLiftedRequired\\r\\n                            && !set.errors?.repsRequired\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.set_required' | translate }}\\r\\n                    </mat-error>\\r\\n                    <mat-hint\\r\\n                        *ngIf=\\\"accessFormField('weightLifted', j).value\\r\\n                            && accessFormField('weightLifted', j).valid\\r\\n                            && accessFormField('reps', j).value\\r\\n                            && accessFormField('reps', j).valid\\r\\n                            && !set.errors?.weightLiftedRequired\\r\\n                            && !set.errors?.repsRequired\\r\\n                            && !editMode\\\"\\r\\n                        class=\\\"sets-success\\\">\\r\\n                        {{ 'training.new_training.set_saved' | translate }}\\r\\n                    </mat-hint>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"accessFormField('weightLifted', j).errors?.onlyNumbers\\r\\n                            && !accessFormField('weightLifted', j).errors?.min\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.only_numbers' | translate }}\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"accessFormField('weightLifted', j).errors?.min\\r\\n                            && !accessFormField('weightLifted', j).errors?.onlyNumbers\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.weight_lifted_min' | translate }}\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"accessFormField('weightLifted', j).errors?.max\\r\\n                            && !accessFormField('weightLifted', j).errors?.onlyNumbers\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.weight_lifted_max' | translate }}\\r\\n                    </mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field\\r\\n                    appearance=\\\"outline\\\"\\r\\n                    class=\\\"sets-reps\\\">\\r\\n                    <mat-label class=\\\"label\\\">\\r\\n                        {{ 'training.new_training.reps_performed' | translate }}\\r\\n                    </mat-label>\\r\\n                    <input\\r\\n                        matInput\\r\\n                        type=\\\"text\\\"\\r\\n                        formControlName=\\\"reps\\\"\\r\\n                        [errorStateMatcher]=\\\"formErrorStateMatcher\\\"\\r\\n                        (input)=\\\"onChangeSets(j)\\\"\\r\\n                        (blur)=\\\"onTouched()\\\">\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"(set.errors?.repsRequired && ((isExerciseFormSubmitted$ | async) || exerciseNameControl?.value))\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.reps_required' | translate }}\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"accessFormField('reps', j).errors?.pattern\\r\\n                            && !accessFormField('reps', j).errors?.onlyNumbers\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.only_positive' | translate }}\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"accessFormField('reps', j).errors?.min\\r\\n                            && !accessFormField('reps', j).errors?.onlyNumbers\\r\\n                            && !accessFormField('reps', j).errors?.pattern\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.reps_min' | translate }}\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"accessFormField('reps', j).errors?.max\\r\\n                            && !accessFormField('reps', j).errors?.onlyNumbers\\r\\n                            && !accessFormField('reps', j).errors?.pattern\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.reps_max' | translate }}\\r\\n                    </mat-error>\\r\\n                </mat-form-field>\\r\\n                <div\\r\\n                    class=\\\"delete-set-wrapper\\\"\\r\\n                    matTooltipPosition=\\\"above\\\"\\r\\n                    [matTooltip]=\\\"showDeleteSetTooltip(j) | async\\\"\\r\\n                    [matTooltipClass]=\\\"j > 0 ? 'tooltip' : 'tooltip-error'\\\">\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        class=\\\"button-delete-sets\\\"\\r\\n                        [disabled]=\\\"j === 0 || isLoading\\\"\\r\\n                        (click)=\\\"deleteSet(j)\\\">\\r\\n                        <mat-icon class=\\\"icon-delete-sets\\\">\\r\\n                            delete\\r\\n                        </mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </ng-container>\\r\\n</form>\\r\\n<div class=\\\"add-sets\\\">\\r\\n    <div\\r\\n        matTooltipClass=\\\"tooltip\\\"\\r\\n        [matTooltip]=\\\"showAddSetTooltip(form.errors?.setNotFilled) | async\\\">\\r\\n        <button\\r\\n            type=\\\"button\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            mat-raised-button\\r\\n            class=\\\"add-sets-button\\\"\\r\\n            [disabled]=\\\"!exerciseNameControl.value || form.errors?.setNotFilled\\\"\\r\\n            (click)=\\\"addSet()\\\">\\r\\n            {{ 'training.new_training.buttons.add_set' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nexport class ExerciseNameErrorStateMatcher implements ErrorStateMatcher {\r\n\r\n    isErrorState(\r\n        control: FormControl,\r\n        form: FormGroupDirective | NgForm,\r\n    ): boolean {\r\n        const isSubmitted = form?.submitted;\r\n        return (form?.invalid && isSubmitted) ||\r\n            (control?.invalid && (control?.dirty || control?.touched || isSubmitted));\r\n    }\r\n}\r\n","import { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { DateInterval, PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\n\r\nexport function mapDateInterval(response: StreamData<Paginator<PastTrainings>>): StreamData<Paginator<PastTrainings>> {\r\n    return {\r\n        ...response,\r\n        Value: {\r\n            ...response.Value,\r\n            Results: {\r\n                ...response.Value.Results,\r\n                Dates: {\r\n                    StartDate: new Date(response.Value?.Results?.Dates?.StartDate ?? null),\r\n                    EndDate: new Date(response.Value?.Results?.Dates?.EndDate ?? null),\r\n                } as DateInterval,\r\n            } as PastTrainings,\r\n        } as Paginator<PastTrainings>,\r\n    };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RoundTotalWeightPipe } from './round-total-weight.pipe';\r\n\r\n@NgModule({\r\n    declarations: [RoundTotalWeightPipe],\r\n    exports: [RoundTotalWeightPipe],\r\n    providers: [RoundTotalWeightPipe],\r\n})\r\nexport class RoundTotalWeightModule {}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { Training } from 'src/app/models/training/new-training/new-training.model';\r\nimport { SNACK_BAR_DURATION } from '../../../../../constants/snack-bar-duration.const';\r\nimport { StreamData } from '../../../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings } from '../../../../../models/training/past-trainings/past-trainings.model';\r\nimport { SharedService } from '../../../../../services/shared/shared.service';\r\n\r\nexport interface DeleteTrainingActionDialogData {\r\n    readonly title$: Observable<string>;\r\n    readonly dateCreated$: Observable<string>;\r\n    readonly timeCreated$: Observable<string>;\r\n    readonly training$: Observable<Training>;\r\n    deleteTrainingFn(\r\n        trainingId: string,\r\n        currentDate: Date,\r\n    ): Observable<StreamData<Paginator<PastTrainings>>>;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './delete-training-action.component.html',\r\n    styleUrls: ['./delete-training-action.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeleteTrainingActionComponent {\r\n\r\n    isLoading = false;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public readonly data: DeleteTrainingActionDialogData,\r\n        private readonly dialogRef: MatDialogRef<DeleteTrainingActionComponent>,\r\n        private readonly translateService: TranslateService,\r\n        private readonly sharedService: SharedService,\r\n        private readonly snackBar: MatSnackBar,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly route: ActivatedRoute,\r\n    ) {}\r\n\r\n    deleteTraining(trainingId: string): void {\r\n        this.isLoading = true;\r\n        this.data.deleteTrainingFn(\r\n            trainingId as string,\r\n            new Date(`\r\n                ${this.getSplittedCurrentDate()[2]}-\r\n                ${this.getSplittedCurrentDate()[1]}-\r\n                ${this.getSplittedCurrentDate()[0]}\r\n            `) as Date,\r\n        ).pipe(\r\n            catchError(_ => EMPTY),\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe((response: StreamData<Paginator<PastTrainings>>) => {\r\n            this.sharedService.deletedTraining$$.next(response);\r\n            this.snackBar.open(this.translateService.instant(response?.Value?.Results?.Message ?? ''), null, {\r\n                duration: SNACK_BAR_DURATION.GENERAL,\r\n                panelClass: 'app__snackbar',\r\n            });\r\n            this.dialogRef.close();\r\n        });\r\n    }\r\n\r\n    private getSplittedCurrentDate(): string[] {\r\n        return (this.route.snapshot.queryParams.startDate as string)?.split('-');\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SignupService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n    ){}\r\n\r\n    getEmails(email: string): Observable<boolean> {\r\n        const params = `?email=${email}`;\r\n        return this.http.get<boolean>(environment.BACKEND + '/get_all_emails' + params);\r\n    }\r\n}\r\n","import { AbstractControl, FormArray, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function allSetsFilled(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if(array) {\r\n            let isSetFilled = true;\r\n            (array as FormArray).controls.forEach((set: AbstractControl) => {\r\n                if(!set.get('weightLifted').value || !set.get('reps').value\r\n                    || set.get('weightLifted').errors || set.get('reps').errors) {\r\n                    isSetFilled = false;\r\n                }\r\n            });\r\n            if(isSetFilled) {\r\n                return null;\r\n            }\r\n            return { 'setNotFilled': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function isSetValid(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            const weightLifted: AbstractControl = group?.get('weightLifted');\r\n            const reps: AbstractControl = group?.get('reps');\r\n            if (weightLifted && reps) {\r\n                if (!weightLifted.value || !reps.value) {\r\n                    return { 'setNotEntered': true };\r\n                }\r\n                if (!weightLifted.valid || !reps.valid) {\r\n                    return { 'setNotValid': true };\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nexport function bothValuesRequired(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            if (group.get('weightLifted')?.value && !group.get('reps')?.value) {\r\n                return { 'repsRequired': true };\r\n            }\r\n            else if (!group.get('weightLifted')?.value && group.get('reps')?.value) {\r\n                return { 'weightLiftedRequired': true };\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { forwardRef, InjectionToken, Type } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { SetsComponent } from '../views/shared/training/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../views/shared/training/single-exercise/single-exercise.component';\r\nimport { TotalWeightComponent } from '../views/shared/training/total-weight/total-weight.component';\r\n\r\nexport type Components = SingleExerciseComponent | SetsComponent | TotalWeightComponent;\r\n\r\nexport function getControlValueAccessor(component: Type<Components>): ControlValueAccessorType {\r\n    return {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => component),\r\n        multi: true,\r\n    };\r\n}\r\n\r\ntype ControlValueAccessorType = {\r\n    provide: InjectionToken<readonly ControlValueAccessor[]>;\r\n    useExisting: Type<Components>;\r\n    multi: boolean;\r\n};\r\n","export default \"<mat-nav-list>\\r\\n    <a\\r\\n        *ngIf=\\\"!(isAuthenticated$ | async)\\\"\\r\\n        mat-list-item\\r\\n        routerLink=\\\"/login\\\"\\r\\n        (click)=\\\"onCloseSideNav()\\\">\\r\\n        <mat-icon class=\\\"icon\\\">login</mat-icon>\\r\\n        <span class=\\\"caption\\\">\\r\\n            {{ 'navigation.login' | translate }}\\r\\n        </span>\\r\\n    </a>\\r\\n    <a\\r\\n        *ngIf=\\\"!(isAuthenticated$ | async)\\\"\\r\\n        mat-list-item\\r\\n        routerLink=\\\"/signup\\\"\\r\\n        (click)=\\\"onCloseSideNav()\\\">\\r\\n        <mat-icon class=\\\"icon\\\">app_registration</mat-icon>\\r\\n        <span class=\\\"caption\\\">\\r\\n            {{ 'navigation.signup' | translate }}\\r\\n        </span>\\r\\n    </a>\\r\\n    <a\\r\\n        *ngIf=\\\"isAuthenticated$ | async\\\"\\r\\n        mat-list-item\\r\\n        routerLink=\\\"/training/new-training\\\"\\r\\n        (click)=\\\"onCloseSideNav()\\\">\\r\\n        <mat-icon class=\\\"icon\\\">fitness_center</mat-icon>\\r\\n        <span class=\\\"caption\\\">\\r\\n            {{ 'navigation.new_training' | translate }}\\r\\n        </span>\\r\\n    </a>\\r\\n    <a\\r\\n        *ngIf=\\\"isAuthenticated$ | async\\\"\\r\\n        mat-list-item\\r\\n        (click)=\\\"goToPastTrainings(); onCloseSideNav()\\\">\\r\\n        <mat-icon class=\\\"icon\\\">history</mat-icon>\\r\\n        <span class=\\\"caption\\\">\\r\\n            {{ 'navigation.past_trainings' | translate }}\\r\\n        </span>\\r\\n    </a>\\r\\n    <ng-container *ngIf=\\\"(loggedUserData$ | async) as userData\\\">\\r\\n        <a\\r\\n            *ngIf=\\\"isAuthenticated$ | async\\\"\\r\\n            mat-list-item\\r\\n            [matMenuTriggerFor]=\\\"languages\\\">\\r\\n            <mat-icon class=\\\"icon\\\">language</mat-icon>\\r\\n            <span class=\\\"caption\\\">\\r\\n                {{ 'navigation.language' | translate }}\\r\\n            </span>\\r\\n            <mat-menu #languages=\\\"matMenu\\\">\\r\\n                <button\\r\\n                    mat-menu-item\\r\\n                    class=\\\"menu-item\\\"\\r\\n                    [class.chosenLanguage]=\\\"userData?.Preferences?.language === 'hr'\\\"\\r\\n                    [disabled]=\\\"userData?.Preferences?.language === 'hr'\\\"\\r\\n                    (click)=\\\"changeLanguage('hr')\\\">\\r\\n                    <img\\r\\n                        src=\\\"../../../../assets/images/flags/croatia.png\\\"\\r\\n                        height=\\\"40\\\"\\r\\n                        width=\\\"40\\\">\\r\\n                    <span class=\\\"menu-item--text\\\">\\r\\n                        {{ 'languages.croatian' | translate }}\\r\\n                    </span>\\r\\n                </button>\\r\\n                <button\\r\\n                    mat-menu-item\\r\\n                    class=\\\"menu-item\\\"\\r\\n                    [class.chosenLanguage]=\\\"userData?.Preferences?.language === 'en'\\\"\\r\\n                    [disabled]=\\\"userData?.Preferences?.language === 'en'\\\"\\r\\n                    (click)=\\\"changeLanguage('en')\\\">\\r\\n                    <img\\r\\n                        src=\\\"../../../../assets/images/flags/united-kingdom.png\\\"\\r\\n                        height=\\\"24\\\"\\r\\n                        width=\\\"40\\\">\\r\\n                    <span class=\\\"menu-item--text\\\">\\r\\n                        {{ 'languages.english' | translate }}\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n        </a>\\r\\n    </ng-container>\\r\\n    <a\\r\\n        *ngIf=\\\"isAuthenticated$ | async\\\"\\r\\n        mat-list-item\\r\\n        (click)=\\\"onCloseSideNav(); onLogout();\\\">\\r\\n        <mat-icon class=\\\"icon\\\">logout</mat-icon>\\r\\n        <span class=\\\"caption\\\">\\r\\n            {{ 'navigation.logout' | translate }}\\r\\n        </span>\\r\\n    </a>\\r\\n</mat-nav-list>\\r\\n\";","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\n\r\n@Component({\r\n    selector: 'bl-not-found',\r\n    templateUrl: './not-found.component.html',\r\n    styleUrls: ['./not-found.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NotFoundComponent {\r\n\r\n    isAuth$: Observable<boolean> = this.authService.isAuth$;\r\n\r\n    constructor(private readonly authService: AuthService) {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DEFAULT_WEIGHT_FORMAT } from '../../../../models/preferences.model';\r\n\r\n@Pipe({\r\n    name: 'roundTotalWeight',\r\n})\r\nexport class RoundTotalWeightPipe implements PipeTransform {\r\n\r\n    transform(totalWeight: number): string {\r\n        return totalWeight ? `${(Math.round(totalWeight * 100) / 100).toString()} ${DEFAULT_WEIGHT_FORMAT}` : `0 ${DEFAULT_WEIGHT_FORMAT}`;\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { HeaderComponent } from '../views/navigation/header/header.component';\r\nimport { SideNavComponent } from '../views/navigation/side-nav/side-nav.component';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\nconst COMPONENTS = [\r\n    HeaderComponent,\r\n    SideNavComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    TranslateModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    RouterModule,\r\n];\r\n\r\nconst IMPORTS = [AuthModule];\r\n\r\n@NgModule({\r\n    declarations: [ ...COMPONENTS ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n})\r\nexport class NavigationModule {}\r\n","export default \"\\r\\n<div\\r\\n    *ngIf=\\\"data.message\\\"\\r\\n    mat-dialog-title>\\r\\n    <p class=\\\"message\\\">{{ data.message }}</p>\\r\\n</div>\\r\\n\\r\\n<div\\r\\n    *ngIf=\\\"(data.deleteExercise.message$ | async) as message\\\"\\r\\n    mat-dialog-title>\\r\\n    <p class=\\\"message\\\">{{ message }}</p>\\r\\n</div>\\r\\n<div\\r\\n    *ngIf=\\\"data.deleteExercise\\\"\\r\\n    mat-dialog-content>\\r\\n    <p class=\\\"mat-subheading-1 message\\\">\\r\\n        {{ 'training.new_training.exercise_name' | translate }}\\r\\n        <strong>{{ data.deleteExercise.exerciseName | translate }}</strong>\\r\\n    </p>\\r\\n</div>\\r\\n<mat-dialog-actions class=\\\"actions\\\">\\r\\n    <button\\r\\n        mat-raised-button\\r\\n        type=\\\"button\\\"\\r\\n        [color]=\\\"data.isError ? 'primary' : ''\\\"\\r\\n        [mat-dialog-close]=\\\"false\\\">\\r\\n        {{ 'common.actions.close' | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n        *ngIf=\\\"data.deleteExercise\\\"\\r\\n        mat-raised-button\\r\\n        type=\\\"button\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        [mat-dialog-close]=\\\"true\\\">\\r\\n        {{ 'common.actions.delete' | translate }}\\r\\n    </button>\\r\\n</mat-dialog-actions>\\r\\n\";","import { Exercise } from '../exercise.model';\r\nimport { SingleExercise } from '../shared/single-exercise.model';\r\nimport { Training } from './new-training.model';\r\n\r\nexport type EditNewTrainingData = {\r\n    _id?: string;\r\n    editedDate?: Date;\r\n    editTraining?: Training;\r\n};\r\n\r\nexport const EMPTY_TRAINING_EDIT: EditNewTrainingData = {\r\n    _id: null,\r\n    editedDate: null,\r\n    editTraining: null,\r\n};\r\n\r\nexport const EMPTY_TRAINING: Training = {\r\n    exercise: [],\r\n    _id: '',\r\n    bodyweight: null,\r\n    editMode: false,\r\n    userId: null,\r\n};\r\n\r\nexport const createEmptyExercise = (exercises: Exercise[]): SingleExercise =>\r\n    ({\r\n        exerciseName: null,\r\n        sets: [],\r\n        total: null,\r\n        disabledTooltip: true,\r\n        availableExercises: [ ...exercises ],\r\n    });\r\n","export default \"<div class=\\\"wrapper\\\">\\r\\n    <mat-spinner\\r\\n        *ngIf=\\\"isLoading\\\"\\r\\n        class=\\\"spinner\\\"\\r\\n        [diameter]=\\\"spinnerSize\\\"></mat-spinner>\\r\\n    <form\\r\\n        *ngIf=\\\"!isLoading && form\\\"\\r\\n        class=\\\"form\\\"\\r\\n        [formGroup]=\\\"form\\\"\\r\\n        (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"preference-wrapper\\\">\\r\\n            <span class=\\\"preference-wrapper--entry-text\\\">\\r\\n                {{ 'auth.pick_language' | translate }}\\r\\n            </span>\\r\\n            <mat-radio-group\\r\\n                formControlName=\\\"language\\\">\\r\\n                <mat-radio-button\\r\\n                    class=\\\"preference-radio-button\\\"\\r\\n                    value=\\\"en\\\">\\r\\n                    {{ 'languages.english' | translate }}\\r\\n                </mat-radio-button>\\r\\n                <mat-radio-button\\r\\n                    class=\\\"preference-radio-button\\\"\\r\\n                    value=\\\"hr\\\">\\r\\n                    {{ 'languages.croatian' | translate }}\\r\\n                </mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n            <span\\r\\n                *ngIf=\\\"accessFormData('language').errors?.required\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'preferences.errors.language_required' | translate }}\\r\\n            </span>\\r\\n            <span class=\\\"preference-wrapper--entry-text\\\">\\r\\n                {{ 'auth.pick_weight_format' | translate }}\\r\\n            </span>\\r\\n            <mat-radio-group\\r\\n                formControlName=\\\"weightFormat\\\">\\r\\n                <mat-radio-button\\r\\n                    class=\\\"preference-radio-button\\\"\\r\\n                    value=\\\"kg\\\">\\r\\n                    {{ 'common.kilograms' | translate }}\\r\\n                </mat-radio-button>\\r\\n                <mat-radio-button\\r\\n                    class=\\\"preference-radio-button\\\"\\r\\n                    value=\\\"lbs\\\">\\r\\n                    {{ 'common.pounds' | translate }}\\r\\n                </mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n            <span\\r\\n                *ngIf=\\\"accessFormData('weightFormat').errors?.required\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.weight_format_required' | translate }}\\r\\n            </span>\\r\\n            <span\\r\\n                class=\\\"did-you-know\\\"\\r\\n                matTooltipClass=\\\"tooltip\\\"\\r\\n                [matTooltip]=\\\"'common.change_preference_registration' | translate\\\">\\r\\n                {{ 'common.did_you_know' | translate }}\\r\\n            </span>\\r\\n        </div>\\r\\n        <mat-form-field\\r\\n            class=\\\"form-field\\\"\\r\\n            appearance=\\\"fill\\\">\\r\\n            <mat-label class=\\\"label\\\">{{ 'auth.email' | translate }}</mat-label>\\r\\n            <input\\r\\n                matInput\\r\\n                type=\\\"email\\\"\\r\\n                formControlName=\\\"email\\\">\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('email').errors?.required\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.email_required' | translate }}\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('email').errors?.email\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.invalid_email' | translate }}\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('email').errors?.availableEmail\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.email_already_registered' | translate }}\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field\\r\\n            class=\\\"form-field\\\"\\r\\n            appearance=\\\"fill\\\">\\r\\n            <mat-label class=\\\"label\\\">\\r\\n                {{ 'auth.password' | translate }}\\r\\n            </mat-label>\\r\\n            <input\\r\\n                matInput\\r\\n                type=\\\"password\\\"\\r\\n                formControlName=\\\"password\\\"\\r\\n                #inputPassword>\\r\\n            <mat-hint>{{ inputPassword.value?.length || 0 }} / 6</mat-hint>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('password').errors?.required\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.password_required' | translate }}\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('password').errors?.minlength ||\\r\\n                    accessFormData('password').errors?.maxlength\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.password_length' | translate }}\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field\\r\\n            class=\\\"form-field\\\"\\r\\n            appearance=\\\"fill\\\">\\r\\n            <mat-label class=\\\"label\\\">\\r\\n                {{ 'auth.confirm_password' | translate }}\\r\\n            </mat-label>\\r\\n            <input\\r\\n                matInput\\r\\n                type=\\\"password\\\"\\r\\n                formControlName=\\\"confirmPassword\\\"\\r\\n                #inputConfirmPassword\\r\\n                [errorStateMatcher]=\\\"formErrorStateMatcher\\\">\\r\\n            <mat-hint>{{ inputConfirmPassword.value?.length || 0 }} / 6</mat-hint>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('confirmPassword').errors?.required\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.confirm_password_required' | translate }}\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('confirmPassword').errors?.minlength ||\\r\\n                    accessFormData('confirmPassword').errors?.maxlength\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.password_length' | translate }}\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"form.errors?.equalPass\\r\\n                    && !accessFormData('confirmPassword').errors?.minlength\\r\\n                    && !accessFormData('confirmPassword').errors?.maxlength\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.equal_passwords' | translate }}\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        <button\\r\\n            mat-raised-button\\r\\n            class=\\\"submit\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            [class.button-spinner]=\\\"isLoading\\\"\\r\\n            [disabled]=\\\"isLoading\\\">\\r\\n            {{ 'auth.signup' | translate }}\\r\\n        </button>\\r\\n    </form>\\r\\n</div>\\r\\n\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { mergeMap, switchMap, tap } from 'rxjs/operators';\r\nimport { Preferences } from 'src/app/models/preferences.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Login, Signup } from '../../models/auth/auth-data.model';\r\nimport { AuthResponseData } from '../../models/auth/auth-data.model';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\nimport { Language, WeightFormat } from '../../models/preferences.model';\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n    private readonly loggedUser$$: BehaviorSubject<AuthResponseData> = new BehaviorSubject<AuthResponseData>(null);\r\n    readonly loggedUser$: Observable<AuthResponseData> = this.loggedUser$$.asObservable();\r\n\r\n    private readonly isAuth$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    readonly isAuth$: Observable<boolean> = this.isAuth$$.asObservable();\r\n\r\n    private tokenTimer: NodeJS.Timeout;\r\n    private token: string;\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly router: Router,\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    getToken(): string {\r\n        return this.token;\r\n    }\r\n\r\n    updateUserData(preferences?: Preferences): void {\r\n        //TODO: Ovdje treba pokupiti podatke iz Subjecta, a ne LS\r\n        const userData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n        const updatedUserData: AuthResponseData = {\r\n            ...userData,\r\n            Preferences: {\r\n                userId: preferences.userId,\r\n                language: preferences.language,\r\n                weightFormat: 'kg',\r\n            } as Preferences,\r\n        };\r\n        this.loggedUser$$.next({ ...updatedUserData });\r\n        localStorage.setItem(LocalStorageItems.USER_DATA, JSON.stringify({ ...updatedUserData }));\r\n    }\r\n\r\n    signup(\r\n        language: Language,\r\n        weightFormat: WeightFormat,\r\n        email: string,\r\n        password: string,\r\n        confirmPassword: string,\r\n    ): Observable<AuthResponseData> {\r\n        const signupData: Signup = {\r\n            email,\r\n            password,\r\n            confirmPassword,\r\n        };\r\n        const preferences: Partial<Preferences> = {\r\n            language: language,\r\n            weightFormat: weightFormat,\r\n        };\r\n        return this.http.post<AuthResponseData>(environment.BACKEND + '/signup', {\r\n            signupData: signupData,\r\n            preferences: preferences,\r\n        });\r\n    }\r\n\r\n    login(\r\n        email: string,\r\n        password: string,\r\n    ): Observable<AuthResponseData> {\r\n        const authData: Login = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        return this.http.post<AuthResponseData>(environment.BACKEND + '/login', authData).pipe(\r\n            tap(async (response: AuthResponseData) => {\r\n                if (response.Token) {\r\n                    this.loggedUser$$.next(response);\r\n                    this.isAuth$$.next(true);\r\n                    this.token = response.Token as string;\r\n                    const expiresInDuration: number = response.ExpiresIn as number;\r\n                    this.setAuthTimer(expiresInDuration);\r\n                    const now: Date = new Date();\r\n                    const expirationDate: Date = new Date(now.getTime() + expiresInDuration * 1000);\r\n                    this.saveLS(\r\n                        this.token,\r\n                        expirationDate,\r\n                        response._id,\r\n                        response.Preferences,\r\n                    );\r\n                    await this.router.navigate(['/training/new-training']);\r\n                }\r\n            }),\r\n            mergeMap((response: AuthResponseData) =>\r\n                this.translateService.use(response.Preferences.language).pipe(\r\n                    switchMap(_ => of(response)),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n\r\n    autoLogin(): void {\r\n        if (JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA))) {\r\n            const userData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n            if (!userData.Token || !userData.ExpirationDate) {\r\n                return;\r\n            }\r\n            const authData: AuthResponseData = {\r\n                Token: userData.Token,\r\n                ExpirationDate: new Date(userData.ExpirationDate),\r\n                _id: userData._id,\r\n                Preferences: userData.Preferences,\r\n            };\r\n            const now: Date = new Date();\r\n            const expiresIn: number = authData.ExpirationDate.getTime() - now.getTime();\r\n            if (expiresIn > 0) {\r\n                this.token = userData.Token;\r\n                this.setAuthTimer(expiresIn / 1000);\r\n                this.isAuth$$.next(true);\r\n                this.loggedUser$$.next(authData);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(): Promise<void> {\r\n        this.token = null;\r\n        this.isAuth$$.next(false);\r\n        clearTimeout(this.tokenTimer);\r\n        this.clearLS();\r\n        await this.router.navigate(['/login']);\r\n    }\r\n\r\n    private setAuthTimer(duration: number): void {\r\n        this.tokenTimer = setTimeout(async () => {\r\n            await this.logout();\r\n        }, duration * 1000);\r\n    }\r\n\r\n    private saveLS(\r\n        token: string,\r\n        expirationDate: Date,\r\n        userId: string,\r\n        preferences: Preferences,\r\n    ): void {\r\n        const userData: AuthResponseData = {\r\n            Token: token,\r\n            ExpirationDate: expirationDate,\r\n            _id: userId,\r\n            Preferences: preferences,\r\n        };\r\n        localStorage.setItem(LocalStorageItems.USER_DATA, JSON.stringify(userData));\r\n    }\r\n\r\n    private clearLS(): void {\r\n        localStorage.removeItem(LocalStorageItems.USER_DATA);\r\n        localStorage.removeItem(LocalStorageItems.TRAINING_STATE);\r\n        localStorage.removeItem(LocalStorageItems.ALL_EXERCISES);\r\n    }\r\n}\r\n","export default \"<div class=\\\"paginator\\\">\\r\\n    <div class=\\\"controls-wrapper\\\">\\r\\n        <div\\r\\n            class=\\\"page-size-wrapper\\\"\\r\\n            [class.page-size-not-visible]=\\\"!isSearch\\\">\\r\\n            <select\\r\\n                class=\\\"page-size\\\"\\r\\n                [(ngModel)]=\\\"size\\\"\\r\\n                (change)=\\\"loadPage()\\\">\\r\\n                <option\\r\\n                    *ngFor=\\\"let size of pageSizeOptions\\\"\\r\\n                    [value]=\\\"size\\\">\\r\\n                    {{ size }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"arrow-wrapper\\\">\\r\\n            <button\\r\\n                *ngIf=\\\"isPreviousPage\\\"\\r\\n                mat-raised-button\\r\\n                class=\\\"first\\\"\\r\\n                type=\\\"button\\\"\\r\\n                matTooltipPosition=\\\"above\\\"\\r\\n                [matTooltip]=\\\"setPageTooltip(isSearch, 'First') | async\\\"\\r\\n                [matTooltipClass]=\\\"setPageTooltipClass(isSearch, 'First')\\\"\\r\\n                (click)=\\\"loadPage(\\r\\n                    'First',\\r\\n                    undefined,\\r\\n                    data?.Value?.Results?.EarliestTrainingDate)\\\">\\r\\n                <mat-icon class=\\\"icon\\\">first_page</mat-icon>\\r\\n            </button>\\r\\n            <div\\r\\n                matTooltipPosition=\\\"above\\\"\\r\\n                [matTooltip]=\\\"setPageTooltip(isSearch, 'Previous') | async\\\"\\r\\n                [matTooltipClass]=\\\"setPageTooltipClass(isSearch, 'Previous')\\\">\\r\\n                <button\\r\\n                    mat-raised-button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"previous\\\"\\r\\n                    [disabled]=\\\"data.IsLoading || !isPreviousPage\\\"\\r\\n                    (click)=\\\"loadPage(\\r\\n                        'Previous',\\r\\n                        data.Value?.Results?.Dates)\\\">\\r\\n                    <mat-icon class=\\\"icon\\\">navigate_before</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div\\r\\n                matTooltipPosition=\\\"above\\\"\\r\\n                [matTooltip]=\\\"setPageTooltip(isSearch, 'Next') | async\\\"\\r\\n                [matTooltipClass]=\\\"setPageTooltipClass(isSearch, 'Next')\\\">\\r\\n                <button\\r\\n                    mat-raised-button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"next\\\"\\r\\n                    [disabled]=\\\"data.IsLoading || !isNextPage\\\"\\r\\n                    (click)=\\\"loadPage(\\r\\n                        'Next',\\r\\n                        data.Value?.Results?.Dates)\\\">\\r\\n                    <mat-icon class=\\\"icon\\\">navigate_next</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <button\\r\\n                *ngIf=\\\"isNextPage\\\"\\r\\n                mat-raised-button\\r\\n                class=\\\"last\\\"\\r\\n                type=\\\"button\\\"\\r\\n                matTooltipPosition=\\\"above\\\"\\r\\n                [matTooltip]=\\\"setPageTooltip(isSearch, 'Last') | async\\\"\\r\\n                [matTooltipClass]=\\\"setPageTooltipClass(isSearch, 'Last')\\\"\\r\\n                (click)=\\\"loadPage('Last', undefined, undefined, data?.Value?.TotalPages)\\\">\\r\\n                <mat-icon class=\\\"icon\\\">last_page</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div\\r\\n        *ngIf=\\\"data?.Value?.TotalPages\\\"\\r\\n        class=\\\"label\\\"\\r\\n        [innerHTML]=\\\"setPageText(data.Value.TotalPages) | async\\\"></div>\\r\\n</div>\\r\\n\";","import { AbstractControl, FormArray, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\n//TODO: create no empty training validator (exercises.length === 0)\r\nexport function checkExerciseNumber(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            const exerciseNumber = (array as FormArray)?.controls?.length;\r\n            if (exerciseNumber) {\r\n                return null;\r\n            }\r\n            return { 'emptyTraining': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function checkDuplicateExerciseName(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            const exerciseNames: string[] = [];\r\n            for (const group of (array as FormArray).controls) {\r\n                if (exerciseNames.indexOf(group.get('name')?.value) !== -1) {\r\n                    return { 'duplicateExerciseName': group.get('name').value };\r\n                }\r\n                else {\r\n                    exerciseNames.push(group.get('name')?.value);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","export const environment = {\r\n    production: true,\r\n    BACKEND: 'http://192.168.0.114:3000',\r\n    TIMEZONE: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n};\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { captureException } from '@sentry/minimal';\r\n\r\n@Injectable()\r\nexport class SentryService implements ErrorHandler {\r\n\r\n    handleError(error: unknown): void {\r\n        captureException(error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n","export default \"<ng-container *ngIf=\\\"(data.training$ | async) as training\\\">\\r\\n    <div>\\r\\n        <span\\r\\n            mat-dialog-title\\r\\n            class=\\\"title\\\">\\r\\n            {{ data.title$ | async }}\\r\\n        </span>\\r\\n    </div>\\r\\n    <mat-dialog-content class=\\\"content\\\">\\r\\n        <span class=\\\"created-at-key\\\">\\r\\n            {{ 'training.past_trainings.created_at' | translate }}\\r\\n            <span class=\\\"created-at-value\\\">\\r\\n                {{ data.dateCreated$ | async }}\\r\\n                <span class=\\\"dot\\\"></span>\\r\\n                <span>{{ ' ' + (data.timeCreated$ | async) }}</span>\\r\\n            </span>\\r\\n        </span>\\r\\n        <div\\r\\n            class=\\\"exercises-wrapper\\\">\\r\\n            <span class=\\\"title\\\">{{ 'common.exercises' | translate }}</span>\\r\\n            <strong\\r\\n                *ngFor=\\\"let exercise of training.exercise | slice:0:4\\\"\\r\\n                class=\\\"exercise-value\\\"\\r\\n                matTooltipClass=\\\"tooltip\\\"\\r\\n                matTooltipPosition=\\\"above\\\"\\r\\n                [matTooltip]=\\\"training.exercise.length > 4 ? (training | showAllExercises | async) : ''\\\">\\r\\n                {{ exercise.exerciseName | translate }}\\r\\n            </strong>\\r\\n        </div>\\r\\n    </mat-dialog-content>\\r\\n    <mat-dialog-actions class=\\\"actions\\\">\\r\\n        <button\\r\\n            mat-raised-button\\r\\n            mat-dialog-close\\r\\n            [disabled]=\\\"isLoading\\\">\\r\\n            {{ 'common.actions.close' | translate }}\\r\\n        </button>\\r\\n        <button\\r\\n            mat-raised-button\\r\\n            class=\\\"delete-btn\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            [class.button-spinner]=\\\"isLoading\\\"\\r\\n            [disabled]=\\\"isLoading\\\"\\r\\n            (click)=\\\"deleteTraining(training._id)\\\">\\r\\n            {{ 'common.actions.delete' | translate }}\\r\\n        </button>\\r\\n    </mat-dialog-actions>\\r\\n</ng-container>\\r\\n\";","export default \".route-active {\\n  border-bottom: 2px solid white;\\n}\\n\\n.toolbar {\\n  padding-right: 0;\\n  position: fixed;\\n  z-index: 1;\\n}\\n\\n.toolbar-button {\\n  vertical-align: middle;\\n}\\n\\n.title {\\n  text-decoration: none;\\n  font-size: 25px;\\n  font-family: \\\"Anton\\\", sans-serif;\\n  color: white;\\n  vertical-align: middle;\\n}\\n\\n.edit-button {\\n  margin-left: auto;\\n  margin-right: 10px;\\n}\\n\\n.edit-button:hover,\\n.edit-button:active {\\n  background: #def2f1;\\n}\\n\\n.nav-items {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  display: flex;\\n  column-gap: 10px;\\n  align-items: center;\\n}\\n\\n.nav-item {\\n  display: flex;\\n  align-items: center;\\n  column-gap: 5px;\\n}\\n\\n.nav-item--icon {\\n  color: #009688;\\n}\\n\\n.nav-item-txt {\\n  text-decoration: none;\\n  color: white;\\n  cursor: pointer;\\n  margin-right: 10px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.nav-item--menu-items {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.nav-item--menu-items:not(:nth-child(1)) {\\n  justify-content: flex-start;\\n}\\n\\n.nav-item--menu-items:hover {\\n  background: #def2f1;\\n}\\n\\n.nav-item-txt:hover,\\n.nav-item-txt:active,\\n.title:hover,\\n.title:active {\\n  color: #def2f1;\\n}\\n\\n.nested-items {\\n  width: 150px;\\n  column-gap: 10px;\\n}\\n\\n.nested-items--text {\\n  font-size: 15px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.chosenLanguage {\\n  background: #009688;\\n}\\n\\n.chosenLanguage .nested-items--text {\\n  color: white;\\n}\\n\\n.alignEn {\\n  justify-content: center !important;\\n}\\n\\n@media (min-width: 640px) {\\n  .edit-button {\\n    margin-right: 0;\\n    margin-left: 20px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHN0eWxlc1xcZGVmYXVsdC1wYWxsZXR0ZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksOEJBQUE7QUFESjs7QUFJQTtFQUNJLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLFVBQUE7QUFESjs7QUFHSTtFQUNJLHNCQUFBO0FBRFI7O0FBS0E7RUFDSSxxQkFBQTtFQUNBLGVBQUE7RUFDQSxnQ0FBQTtFQUNBLFlBQUE7RUFDQSxzQkFBQTtBQUZKOztBQUtBO0VBQ0ksaUJBQUE7RUFDQSxrQkFBQTtBQUZKOztBQUtBOztFQUVJLG1CQzVCUztBRDBCYjs7QUFLQTtFQUNJLGdCQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQUZKOztBQUtBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtBQUZKOztBQUlJO0VBQ0ksY0NqREs7QUQrQ2I7O0FBS0k7RUFDSSxxQkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQ0NwREU7QURpRFY7O0FBTUk7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLGtDQzNERTtBRHVEVjs7QUFNUTtFQUNJLDJCQUFBO0FBSlo7O0FBT1E7RUFDSSxtQkNwRUM7QUQrRGI7O0FBVUE7Ozs7RUFJSSxjQzdFUztBRHNFYjs7QUFXQTtFQUNJLFlBQUE7RUFDQSxnQkFBQTtBQVJKOztBQVVJO0VBQ0ksZUFBQTtFQUNBLGtDQ3JGRTtBRDZFVjs7QUFZQTtFQUNJLG1CQy9GUztBRHNGYjs7QUFXSTtFQUNJLFlBQUE7QUFUUjs7QUFhQTtFQUNJLGtDQUFBO0FBVko7O0FBYUE7RUFFSTtJQUNJLGVBQUE7SUFDQSxpQkFBQTtFQVhOO0FBQ0YiLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vc3R5bGVzL2RlZmF1bHQtcGFsbGV0dGUuc2Nzcyc7XHJcblxyXG4ucm91dGUtYWN0aXZlIHtcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCB3aGl0ZTtcclxufVxyXG5cclxuLnRvb2xiYXIge1xyXG4gICAgcGFkZGluZy1yaWdodDowO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgei1pbmRleDogMTtcclxuXHJcbiAgICAmLWJ1dHRvbiB7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIH1cclxufVxyXG5cclxuLnRpdGxlIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnQW50b24nLCBzYW5zLXNlcmlmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLmVkaXQtYnV0dG9uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uZWRpdC1idXR0b246aG92ZXIsXHJcbi5lZGl0LWJ1dHRvbjphY3RpdmUge1xyXG4gICAgYmFja2dyb3VuZDogJGxpZ2h0LWJsdWU7XHJcbn1cclxuXHJcbi5uYXYtaXRlbXMge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgY29sdW1uLWdhcDogMTBweDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5uYXYtaXRlbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGNvbHVtbi1nYXA6IDVweDtcclxuXHJcbiAgICAmLS1pY29uIHtcclxuICAgICAgICBjb2xvcjogJGFybXktZ3JlZW47XHJcbiAgICB9XHJcblxyXG4gICAgJi10eHQge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICBmb250LWZhbWlseTogJHBvcHBpbnM7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tbWVudS1pdGVtcyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkcG9wcGlucztcclxuXHJcbiAgICAgICAgJjpub3QoOm50aC1jaGlsZCgxKSl7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkbGlnaHQtYmx1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uYXYtaXRlbS10eHQ6aG92ZXIsXHJcbi5uYXYtaXRlbS10eHQ6YWN0aXZlLFxyXG4udGl0bGU6aG92ZXIsXHJcbi50aXRsZTphY3RpdmUge1xyXG4gICAgY29sb3I6ICRsaWdodC1ibHVlO1xyXG59XHJcblxyXG5cclxuLm5lc3RlZC1pdGVtcyB7XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbiAgICBjb2x1bW4tZ2FwOiAxMHB4O1xyXG5cclxuICAgICYtLXRleHQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICBmb250LWZhbWlseTogJHBvcHBpbnM7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jaG9zZW5MYW5ndWFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkYXJteS1ncmVlbjtcclxuXHJcbiAgICAubmVzdGVkLWl0ZW1zLS10ZXh0IHtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5hbGlnbkVuIHtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCkge1xyXG5cclxuICAgIC5lZGl0LWJ1dHRvbiB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuIiwiJGFybXktZ3JlZW46ICMwMDk2ODg7XHJcbiRsaWdodC1wZXJpd2lua2xlOiAjZGVkZmUxO1xyXG4kYmx1ZS1ncmV5OiAjOTM5NTllO1xyXG4kbGlnaHQtYmx1ZTogI2RlZjJmMTtcclxuJGRhcmstcmVkOiAjYzYyODI4O1xyXG4kcG9wcGluczogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4kZXJyb3ItZm9udC1zaXplOiAxMXB4O1xyXG4iXX0= */\";","export default \"<div class=\\\"wrapper\\\">\\r\\n    <h2 class=\\\"title\\\">\\r\\n        {{ 'common.page_not_found' | translate }}\\r\\n    </h2>\\r\\n    <span *ngIf=\\\"!(isAuth$ | async)\\\">\\r\\n        {{ 'common.errors.not_authenticated' | translate }}\\r\\n    </span>\\r\\n    <img\\r\\n        src=\\\"../../../../assets/images/error-404.png\\\"\\r\\n        class=\\\"img\\\">\\r\\n</div>\\r\\n\";","export default \".wrapper {\\n  margin-top: 6rem;\\n  margin-left: auto;\\n  margin-right: auto;\\n  border-radius: 6px;\\n  width: 90%;\\n  background: #def2f1;\\n}\\n\\n.spinner {\\n  margin: 80% auto;\\n}\\n\\n.form {\\n  padding-top: 16px;\\n  padding-bottom: 16px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  row-gap: 15px;\\n}\\n\\n.form-field {\\n  width: 300px;\\n}\\n\\n.preference-wrapper {\\n  width: 300px;\\n  display: flex;\\n  flex-direction: column;\\n  row-gap: 10px;\\n}\\n\\n.preference-wrapper--entry-text {\\n  font-size: 14px;\\n  color: #009688;\\n  font-weight: 500;\\n}\\n\\n.did-you-know {\\n  font-size: 12px;\\n  color: #93959e;\\n}\\n\\n.preference-radio-button:nth-of-type(2) {\\n  margin-left: 20px;\\n}\\n\\n.error {\\n  font-size: 11px;\\n  color: #c62828;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.submit,\\n.label,\\n.preference-radio-button {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n@media (min-width: 640px) {\\n  .wrapper {\\n    width: 400px;\\n  }\\n}\\n\\n@media (max-width: 320px) {\\n  .wrapper {\\n    margin-bottom: 20px;\\n  }\\n\\n  .form-field {\\n    width: 250px;\\n  }\\n\\n  .preference-wrapper {\\n    width: 250px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcc2lnbnVwLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHN0eWxlc1xcZGVmYXVsdC1wYWxsZXR0ZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0ksZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxVQUFBO0VBQ0EsbUJDTlM7QURJYjs7QUFLQTtFQUNJLGdCQUFBO0FBRko7O0FBS0E7RUFDSSxpQkFBQTtFQUNBLG9CQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0FBRko7O0FBS0E7RUFDSSxZQUFBO0FBRko7O0FBS0E7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtBQUZKOztBQUlJO0VBQ0ksZUFBQTtFQUNBLGNDckNLO0VEc0NMLGdCQUFBO0FBRlI7O0FBTUE7RUFDSSxlQUFBO0VBQ0EsY0MxQ1E7QUR1Q1o7O0FBTUE7RUFDSSxpQkFBQTtBQUhKOztBQU1BO0VBQ0ksZUFBQTtFQUNBLGNDakRPO0VEa0RQLGtDQ2pETTtBRDhDVjs7QUFNQTs7O0VBR0ksa0NDdkRNO0FEb0RWOztBQU9BO0VBRUk7SUFDSSxZQUFBO0VBTE47QUFDRjs7QUFTQTtFQUVJO0lBQ0ksbUJBQUE7RUFSTjs7RUFXRTtJQUNJLFlBQUE7RUFSTjs7RUFXRTtJQUNJLFlBQUE7RUFSTjtBQUNGIiwiZmlsZSI6InNpZ251cC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uLy4uLy4uL3N0eWxlcy9kZWZhdWx0LXBhbGxldHRlLnNjc3MnO1xyXG5cclxuXHJcbi53cmFwcGVyIHtcclxuICAgIG1hcmdpbi10b3A6IDZyZW07XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodCA6IGF1dG87XHJcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgYmFja2dyb3VuZDogJGxpZ2h0LWJsdWU7XHJcbn1cclxuXHJcbi5zcGlubmVyIHtcclxuICAgIG1hcmdpbjogODAlIGF1dG87XHJcbn1cclxuXHJcbi5mb3JtIHtcclxuICAgIHBhZGRpbmctdG9wOiAxNnB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDE2cHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICByb3ctZ2FwOiAxNXB4O1xyXG59XHJcblxyXG4uZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbn1cclxuXHJcbi5wcmVmZXJlbmNlLXdyYXBwZXIge1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICByb3ctZ2FwOiAxMHB4O1xyXG5cclxuICAgICYtLWVudHJ5LXRleHQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBjb2xvcjogJGFybXktZ3JlZW47XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIH1cclxufVxyXG5cclxuLmRpZC15b3Uta25vdyB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBjb2xvcjogJGJsdWUtZ3JleTtcclxufVxyXG5cclxuLnByZWZlcmVuY2UtcmFkaW8tYnV0dG9uOm50aC1vZi10eXBlKDIpIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG59XHJcblxyXG4uZXJyb3Ige1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgY29sb3I6ICRkYXJrLXJlZDtcclxuICAgIGZvbnQtZmFtaWx5OiAkcG9wcGlucztcclxufVxyXG5cclxuLnN1Ym1pdCxcclxuLmxhYmVsLFxyXG4ucHJlZmVyZW5jZS1yYWRpby1idXR0b24ge1xyXG4gICAgZm9udC1mYW1pbHk6ICRwb3BwaW5zO1xyXG59XHJcblxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KSB7XHJcblxyXG4gICAgLndyYXBwZXIge1xyXG4gICAgICAgIHdpZHRoOiA0MDBweDtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xyXG5cclxuICAgIC53cmFwcGVyIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5mb3JtLWZpZWxkIHtcclxuICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLnByZWZlcmVuY2Utd3JhcHBlciB7XHJcbiAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuIiwiJGFybXktZ3JlZW46ICMwMDk2ODg7XHJcbiRsaWdodC1wZXJpd2lua2xlOiAjZGVkZmUxO1xyXG4kYmx1ZS1ncmV5OiAjOTM5NTllO1xyXG4kbGlnaHQtYmx1ZTogI2RlZjJmMTtcclxuJGRhcmstcmVkOiAjYzYyODI4O1xyXG4kcG9wcGluczogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4kZXJyb3ItZm9udC1zaXplOiAxMXB4O1xyXG4iXX0= */\";","export default \".message {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.actions {\\n  justify-content: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHN0eWxlc1xcZGVmYXVsdC1wYWxsZXR0ZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksa0NDRU07QURIVjs7QUFJQTtFQUNJLHlCQUFBO0FBREoiLCJmaWxlIjoiZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vc3R5bGVzL2RlZmF1bHQtcGFsbGV0dGUuc2Nzcyc7XHJcblxyXG4ubWVzc2FnZSB7XHJcbiAgICBmb250LWZhbWlseTogJHBvcHBpbnM7XHJcbn1cclxuXHJcbi5hY3Rpb25zIHtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn1cclxuIiwiJGFybXktZ3JlZW46ICMwMDk2ODg7XHJcbiRsaWdodC1wZXJpd2lua2xlOiAjZGVkZmUxO1xyXG4kYmx1ZS1ncmV5OiAjOTM5NTllO1xyXG4kbGlnaHQtYmx1ZTogI2RlZjJmMTtcclxuJGRhcmstcmVkOiAjYzYyODI4O1xyXG4kcG9wcGluczogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4kZXJyb3ItZm9udC1zaXplOiAxMXB4O1xyXG4iXX0= */\";","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\n\r\n@Component({\r\n    selector: 'bl-total-weight',\r\n    templateUrl: './total-weight.component.html',\r\n    styleUrls: ['./total-weight.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [getControlValueAccessor(TotalWeightComponent)],\r\n})\r\nexport class TotalWeightComponent implements ControlValueAccessor {\r\n\r\n    value: string;\r\n\r\n    onChange: () => void;\r\n    onTouched: () => void;\r\n\r\n    constructor(\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n    ){}\r\n\r\n    writeValue(value: string): void {\r\n        this.value = value;\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: () => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n}\r\n","export default \"<span class=\\\"wrapper\\\">\\r\\n    <strong class=\\\"key\\\">{{ 'training.new_training.total' | translate }}</strong>\\r\\n    <span class=\\\"value\\\">{{ value }}</span>\\r\\n</span>\\r\\n\";","export default \"<div class=\\\"wrapper\\\">\\r\\n    <form\\r\\n        class=\\\"main-form\\\"\\r\\n        [formGroup]=\\\"form\\\"\\r\\n        (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <mat-form-field\\r\\n            class=\\\"main-form-field\\\"\\r\\n            appearance=\\\"fill\\\">\\r\\n            <mat-label class=\\\"label\\\">\\r\\n                {{ 'auth.email' | translate }}\\r\\n            </mat-label>\\r\\n            <input\\r\\n                matInput\\r\\n                type=\\\"email\\\"\\r\\n                formControlName=\\\"email\\\"\\r\\n                #emailRef>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('email').errors?.required\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.email_required' | translate }}\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('email').errors?.email\\r\\n                    && !accessFormData('email').errors?.required\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.invalid_email' | translate }}\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field\\r\\n            class=\\\"main-form-field\\\"\\r\\n            appearance=\\\"fill\\\">\\r\\n            <mat-label class=\\\"label\\\">\\r\\n                {{ 'auth.password' | translate }}\\r\\n            </mat-label>\\r\\n            <input\\r\\n                #inputPassword\\r\\n                matInput\\r\\n                type=\\\"password\\\"\\r\\n                formControlName=\\\"password\\\"\\r\\n                [errorStateMatcher]=\\\"formErrorStateMatcher\\\">\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('password').errors?.required\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.password_required' | translate }}\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"accessFormData('password').errors?.minlength\\r\\n                    || accessFormData('password').errors?.maxlength\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.password_length' | translate }}\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                *ngIf=\\\"form.errors?.passwordFitsEmail\\r\\n                    && !accessFormData('password').errors?.required\\r\\n                    && !accessFormData('password').errors?.minlength\\r\\n                    && !accessFormData('password').errors?.maxlength\\\"\\r\\n                class=\\\"error\\\">\\r\\n                {{ 'auth.errors.password_wrong_email' | translate }}\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        <button\\r\\n            mat-raised-button\\r\\n            class=\\\"submit\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            [disabled]=\\\"!form.valid || isLoading\\\"\\r\\n            [class.button-spinner]=\\\"isLoading\\\">\\r\\n            {{ 'auth.login' | translate }}\\r\\n        </button>\\r\\n    </form>\\r\\n    <span class=\\\"no_account_message\\\">\\r\\n        {{ 'auth.no_account_message' | translate }}\\r\\n        <a\\r\\n            class=\\\"no-account-link\\\"\\r\\n            routerLink=\\\"/signup\\\">\\r\\n            {{ 'auth.signup_link' | translate }}\\r\\n        </a>\\r\\n        {{ 'common.here' | translate }}\\r\\n    </span>\\r\\n</div>\\r\\n\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { AuthResponseData } from 'src/app/models/auth/auth-data.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { StreamData } from '../../models/common/interfaces/common.model';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\nimport { GeneralResponseData } from '../../models/general-response.model';\r\nimport { Exercise } from '../../models/training/exercise.model';\r\nimport { createEmptyExercise, EMPTY_TRAINING } from '../../models/training/new-training/empty-training.model';\r\nimport { Training } from '../../models/training/new-training/new-training.model';\r\nimport { SetTrainingData } from '../../models/training/shared/set.model';\r\nimport { Set } from '../../models/training/shared/set.model';\r\nimport { SingleExercise } from '../../models/training/shared/single-exercise.model';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NewTrainingService {\r\n\r\n    private readonly allExercisesChanged$$: BehaviorSubject<Exercise[]> = new BehaviorSubject<Exercise[]>([]);\r\n    readonly allExercisesChanged$: Observable<Exercise[]> = this.allExercisesChanged$$.asObservable();\r\n\r\n    private readonly currentTrainingChanged$$: BehaviorSubject<Training> = new BehaviorSubject<Training>(EMPTY_TRAINING);\r\n    readonly currentTrainingChanged$: Observable<Training> = this.currentTrainingChanged$$.asObservable();\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly authService: AuthService,\r\n    ) {}\r\n\r\n    getExercises(): Observable<StreamData<Exercise[]>> {\r\n        return this.http.get<StreamData<Exercise[]>>(environment.BACKEND + '/training/get_exercises').pipe(\r\n            switchMap((response: StreamData<Exercise[]>) => {\r\n                const trainingState: Training = JSON.parse(localStorage.getItem(LocalStorageItems.TRAINING_STATE));\r\n                if (!trainingState) {\r\n                    return this.authService.loggedUser$.pipe(\r\n                        take(1),\r\n                        tap((authResponseData: AuthResponseData) => {\r\n                            this.updateTrainingState(\r\n                                response.Value,\r\n                                true,\r\n                                authResponseData._id,\r\n                            );\r\n                            this.allExercisesChanged$$.next(response.Value);\r\n                            localStorage.setItem(LocalStorageItems.ALL_EXERCISES, JSON.stringify(response.Value));\r\n                        }),\r\n                        switchMap(_ => of(response)),\r\n                    );\r\n                }\r\n                else {\r\n                    return of(response);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    addTraining(trainingData: Training): Observable<GeneralResponseData> {\r\n        return this.http.post<GeneralResponseData>(environment.BACKEND + '/training/handle_training', { trainingData: trainingData });\r\n    }\r\n\r\n    updateTraining(\r\n        trainingData: Training,\r\n        trainingId: string,\r\n    ): Observable<GeneralResponseData> {\r\n        return this.http.put<GeneralResponseData>(environment.BACKEND + `/training/handle_training/${trainingId}`, { updatedTrainingData: trainingData });\r\n    }\r\n\r\n    /**************************************** */\r\n\r\n    getCurrentTrainingState(): Training {\r\n        return this.currentTrainingChanged$$.getValue();\r\n    }\r\n\r\n    addBodyweightToStorage(value: string): void {\r\n        const updatedTraining = {\r\n            ...this.currentTrainingChanged$$.getValue(),\r\n            bodyweight: +value,\r\n        };\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    deleteSet(\r\n        indexExercise: number,\r\n        indexSet: number,\r\n        newTotal: number,\r\n    ): void {\r\n        const updatedTraining: Training = { ...this.currentTrainingChanged$$.getValue() };\r\n        updatedTraining.exercise[indexExercise].sets.splice(indexSet, 1);\r\n        updatedTraining.exercise[indexExercise].sets.map((set: Set) => {\r\n            if (set.setNumber > (indexSet + 1)) {\r\n                set.setNumber--;\r\n            }\r\n        });\r\n        updatedTraining.exercise[indexExercise].total = newTotal;\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    pushToAvailableExercises(\r\n        currentTrainingState: Training,\r\n        toBeAddedExercise: Exercise[],\r\n    ): void {\r\n        const updatedTraining: Training = { ...currentTrainingState };\r\n        updatedTraining.exercise.map((exercise: SingleExercise) => {\r\n            const isDeletedExerciseInAE: Exercise = exercise.availableExercises.find((exercise: Exercise) => exercise._id === toBeAddedExercise[0]._id);\r\n            if (!isDeletedExerciseInAE) {\r\n                exercise.availableExercises.push(toBeAddedExercise[0]);\r\n                exercise.availableExercises.sort(this.compare);\r\n            }\r\n        });\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    deleteExercise(\r\n        currentTrainingState: Training,\r\n        deletedExerciseName?: string,\r\n        indexExercise?: number,\r\n    ): Observable<[Training, Exercise[]]> {\r\n        let updatedExercises: SingleExercise[] = [ ...currentTrainingState.exercise ];\r\n        let updatedTraining: Training;\r\n        if (deletedExerciseName) {\r\n            return this.allExercisesChanged$.pipe(\r\n                take(1),\r\n                tap(_ => {\r\n                    updatedExercises = updatedExercises.filter((exercise: SingleExercise) => exercise.exerciseName !== deletedExerciseName);\r\n                    updatedTraining = {\r\n                        ...currentTrainingState,\r\n                        exercise: updatedExercises,\r\n                    };\r\n                }),\r\n                map((allExercises: Exercise[]) =>\r\n                    [\r\n                        updatedTraining,\r\n                        allExercises.filter(exercise => exercise.name === deletedExerciseName),\r\n                    ],\r\n                ),\r\n            );\r\n        }\r\n        else {\r\n            updatedExercises = updatedExercises.filter((_exercise: SingleExercise, index: number) => index !== indexExercise);\r\n            updatedTraining = {\r\n                ...currentTrainingState,\r\n                exercise: updatedExercises,\r\n            };\r\n            this.saveTrainingData(updatedTraining);\r\n            return of([\r\n                updatedTraining,\r\n                null,\r\n            ]);\r\n        }\r\n    }\r\n\r\n    setsChanged(trainingData: SetTrainingData): void {\r\n        const updatedTraining: Training = { ...this.currentTrainingChanged$$.getValue() };\r\n        const indexOfChangedExercise: number = updatedTraining.exercise.findIndex((singleExercise: SingleExercise) => singleExercise.exerciseName === trainingData.exerciseName);\r\n        const indexFoundSet = updatedTraining.exercise[indexOfChangedExercise].sets.findIndex(set => set.setNumber === trainingData.setNumber);\r\n\r\n        if (indexFoundSet > -1) {\r\n            updatedTraining.exercise[indexOfChangedExercise].sets[indexFoundSet] = {\r\n                ...updatedTraining.exercise[indexOfChangedExercise].sets[indexFoundSet],\r\n                weightLifted: trainingData.weightLifted,\r\n                reps: trainingData.reps,\r\n            };\r\n            updatedTraining.exercise[indexOfChangedExercise].total = trainingData.total;\r\n        }\r\n        else {\r\n            updatedTraining.exercise[indexOfChangedExercise].sets.push({\r\n                setNumber: trainingData.setNumber,\r\n                weightLifted: trainingData.weightLifted,\r\n                reps: trainingData.reps,\r\n            });\r\n            updatedTraining.exercise[indexOfChangedExercise].total = trainingData.total;\r\n        }\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    addNewExercise(alreadyUsedExercises: string[]): void {\r\n        const allExercises: Exercise[] = [ ...this.allExercisesChanged$$.getValue() ];\r\n        const availableExercises: Exercise[] = allExercises.filter((exercise: Exercise) => alreadyUsedExercises.indexOf(exercise.name) === -1);\r\n        this.updateTrainingState(availableExercises);\r\n    }\r\n\r\n    updateExerciseChoices(\r\n        selectedExercise: string,\r\n        selectedIndex: number,\r\n        disabledTooltip: boolean,\r\n    ): void {\r\n        const updatedTraining: Training = { ...this.currentTrainingChanged$$.getValue() };\r\n        updatedTraining.exercise[selectedIndex].exerciseName = selectedExercise;\r\n        updatedTraining.exercise[selectedIndex].disabledTooltip = disabledTooltip;\r\n        updatedTraining.exercise.forEach((exercise: SingleExercise, index: number) => {\r\n            if (index !== selectedIndex) {\r\n                exercise.availableExercises = exercise.availableExercises.filter((exercise: Exercise) => exercise.name !== selectedExercise);\r\n            }\r\n        });\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    keepTrainingState(): void {\r\n        const trainingState: Training = JSON.parse(localStorage.getItem(LocalStorageItems.TRAINING_STATE));\r\n        const allExercises: Exercise[] = JSON.parse(localStorage.getItem(LocalStorageItems.ALL_EXERCISES));\r\n\r\n        if (!trainingState || !allExercises) {\r\n            return;\r\n        }\r\n        this.currentTrainingChanged$$.next({ ...trainingState });\r\n        this.allExercisesChanged$$.next([ ...allExercises ]);\r\n    }\r\n\r\n    updateTrainingState(\r\n        exercises: Exercise[],\r\n        restartAll?: boolean,\r\n        userId?: string,\r\n    ): void {\r\n        let updatedTraining: Training = this.currentTrainingChanged$$.getValue();\r\n        if (restartAll) {\r\n            updatedTraining = {\r\n                ...EMPTY_TRAINING,\r\n                userId: userId,\r\n            };\r\n        }\r\n        updatedTraining.exercise.push(createEmptyExercise(exercises));\r\n        this.saveTrainingData(updatedTraining);\r\n    }\r\n\r\n    updateTrainingData(editTraining: Training): void {\r\n        this.saveTrainingData({ ...editTraining });\r\n    }\r\n\r\n    clearTrainingData(): void {\r\n        this.saveTrainingData({ ...EMPTY_TRAINING });\r\n    }\r\n\r\n    private saveTrainingData(updatedTraining: Training): void {\r\n        this.currentTrainingChanged$$.next({ ...updatedTraining });\r\n        localStorage.setItem(LocalStorageItems.TRAINING_STATE, JSON.stringify({ ...updatedTraining }));\r\n    }\r\n\r\n    private compare(\r\n        a: Exercise,\r\n        b: Exercise,\r\n    ): number {\r\n        if (a.name < b.name) {\r\n            return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n","\r\nexport function isNeverCheck(_x: never): never {\r\n    throw new Error(\"Didn't expect to get here\");\r\n}\r\n","export default \".paginator {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-around;\\n  flex-wrap: wrap;\\n  row-gap: 5px;\\n  border-radius: 4px;\\n  border: 2px solid #009688;\\n  margin: auto;\\n  padding: 5px 0;\\n  position: fixed;\\n  bottom: 0;\\n  width: 90%;\\n}\\n\\n.controls-wrapper {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.page-size-wrapper {\\n  display: block;\\n  width: 45px;\\n  margin-right: 20px;\\n  padding: 6px 0;\\n  overflow: hidden;\\n  border: none;\\n  border-radius: 4px;\\n  position: relative;\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.page-size-wrapper:after {\\n  width: 0;\\n  height: 0;\\n  border-left: 6px solid transparent;\\n  border-right: 6px solid transparent;\\n  border-top: 6px solid #009688;\\n  position: absolute;\\n  top: 40%;\\n  right: 5px;\\n  content: \\\"\\\";\\n  z-index: 98;\\n}\\n\\n.page-size-not-visible {\\n  display: none;\\n}\\n\\n.page-size {\\n  width: 65px;\\n  border: 0;\\n  position: relative;\\n  top: -1px;\\n  z-index: 99;\\n  background: none;\\n  cursor: pointer;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  padding-left: 8px;\\n}\\n\\n.page-size:focus-visible {\\n  outline: none;\\n}\\n\\n.arrow-wrapper {\\n  display: flex;\\n  column-gap: 10px;\\n}\\n\\n.arrow-wrapper .mat-raised-button {\\n  min-width: 0;\\n  padding: 0 10px;\\n}\\n\\n.previous:not([disabled]):hover,\\n.previous:not([disabled]):active,\\n.next:not([disabled]):hover,\\n.next:not([disabled]):active,\\n.first:not([disabled]):hover,\\n.first:not([disabled]):active,\\n.last:not([disabled]):hover,\\n.last:not([disabled]):active {\\n  background: #def2f1;\\n}\\n\\n.icon {\\n  color: #009688;\\n}\\n\\n.label {\\n  font-size: 15px;\\n}\\n\\n@media (min-width: 640px) {\\n  .paginator {\\n    width: 850px;\\n    column-gap: 20px;\\n    justify-content: flex-end;\\n    flex-direction: row;\\n    position: relative;\\n  }\\n\\n  .arrow-wrapper {\\n    margin-right: 15px;\\n  }\\n\\n  .controls-wrapper {\\n    order: 2;\\n  }\\n\\n  .label {\\n    margin-right: auto;\\n    margin-left: 15px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxccGFnaW5hdGlvbi5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxzdHlsZXNcXGRlZmF1bHQtcGFsbGV0dGUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsNkJBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQURKOztBQUlBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0FBREo7O0FBSUE7RUFDSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSx5SEFBQTtBQURKOztBQUdJO0VBQ0ksUUFBQTtFQUNBLFNBQUE7RUFDQSxrQ0FBQTtFQUNBLG1DQUFBO0VBQ0EsNkJBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7QUFEUjs7QUFLQTtFQUNJLGFBQUE7QUFGSjs7QUFLQTtFQUNJLFdBQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGtDQ3ZETTtFRHdETixpQkFBQTtBQUZKOztBQUlJO0VBQ0ksYUFBQTtBQUZSOztBQU1BO0VBQ0ksYUFBQTtFQUNBLGdCQUFBO0FBSEo7O0FBS0k7RUFDSSxZQUFBO0VBQ0EsZUFBQTtBQUhSOztBQU9BOzs7Ozs7OztFQVFJLG1CQ25GUztBRCtFYjs7QUFPQTtFQUNJLGNDMUZTO0FEc0ZiOztBQU9BO0VBQ0ksZUFBQTtBQUpKOztBQU9BO0VBRUk7SUFDSSxZQUFBO0lBQ0EsZ0JBQUE7SUFDQSx5QkFBQTtJQUNBLG1CQUFBO0lBQ0Esa0JBQUE7RUFMTjs7RUFRRTtJQUNJLGtCQUFBO0VBTE47O0VBUUU7SUFDSSxRQUFBO0VBTE47O0VBUUU7SUFDSSxrQkFBQTtJQUNBLGlCQUFBO0VBTE47QUFDRiIsImZpbGUiOiJwYWdpbmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vc3R5bGVzL2RlZmF1bHQtcGFsbGV0dGUuc2Nzcyc7XHJcblxyXG4ucGFnaW5hdG9yIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgcm93LWdhcDogNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgJGFybXktZ3JlZW47XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiA1cHggMDtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHdpZHRoOiA5MCU7XHJcbn1cclxuXHJcbi5jb250cm9scy13cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ucGFnZS1zaXplLXdyYXBwZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogNDVweDtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgIHBhZGRpbmc6IDZweCAwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJveC1zaGFkb3c6IDBweCAzcHggMXB4IC0ycHggcmdiKDAgMCAwIC8gMjAlKSwgMHB4IDJweCAycHggMHB4IHJnYigwIDAgMCAvIDE0JSksIDBweCAxcHggNXB4IDBweCByZ2IoMCAwIDAgLyAxMiUpO1xyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIHdpZHRoOiAwO1xyXG4gICAgICAgIGhlaWdodDogMDtcclxuICAgICAgICBib3JkZXItbGVmdDogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlci1yaWdodDogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlci10b3A6IDZweCBzb2xpZCAkYXJteS1ncmVlbjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA0MCU7XHJcbiAgICAgICAgcmlnaHQ6IDVweDtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIHotaW5kZXg6IDk4O1xyXG4gICAgfVxyXG59XHJcblxyXG4ucGFnZS1zaXplLW5vdC12aXNpYmxlIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5wYWdlLXNpemUge1xyXG4gICAgd2lkdGg6IDY1cHg7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IC0xcHg7XHJcbiAgICB6LWluZGV4OiA5OTtcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogJHBvcHBpbnM7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcclxuXHJcbiAgICAmOmZvY3VzLXZpc2libGUge1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5hcnJvdy13cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBjb2x1bW4tZ2FwOiAxMHB4O1xyXG5cclxuICAgIC5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICAgICAgbWluLXdpZHRoOiAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMTBweDtcclxuICAgIH1cclxufVxyXG5cclxuLnByZXZpb3VzOm5vdChbZGlzYWJsZWRdKTpob3ZlcixcclxuLnByZXZpb3VzOm5vdChbZGlzYWJsZWRdKTphY3RpdmUsXHJcbi5uZXh0Om5vdChbZGlzYWJsZWRdKTpob3ZlcixcclxuLm5leHQ6bm90KFtkaXNhYmxlZF0pOmFjdGl2ZSxcclxuLmZpcnN0Om5vdChbZGlzYWJsZWRdKTpob3ZlcixcclxuLmZpcnN0Om5vdChbZGlzYWJsZWRdKTphY3RpdmUsXHJcbi5sYXN0Om5vdChbZGlzYWJsZWRdKTpob3ZlcixcclxuLmxhc3Q6bm90KFtkaXNhYmxlZF0pOmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkbGlnaHQtYmx1ZTtcclxufVxyXG5cclxuLmljb24ge1xyXG4gICAgY29sb3I6ICRhcm15LWdyZWVuO1xyXG59XHJcblxyXG4ubGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcclxuXHJcbiAgICAucGFnaW5hdG9yIHtcclxuICAgICAgICB3aWR0aDogODUwcHg7XHJcbiAgICAgICAgY29sdW1uLWdhcDogMjBweDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG5cclxuICAgIC5hcnJvdy13cmFwcGVyIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRyb2xzLXdyYXBwZXIge1xyXG4gICAgICAgIG9yZGVyOiAyO1xyXG4gICAgfVxyXG5cclxuICAgIC5sYWJlbCB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xyXG4gICAgfVxyXG59XHJcbiIsIiRhcm15LWdyZWVuOiAjMDA5Njg4O1xyXG4kbGlnaHQtcGVyaXdpbmtsZTogI2RlZGZlMTtcclxuJGJsdWUtZ3JleTogIzkzOTU5ZTtcclxuJGxpZ2h0LWJsdWU6ICNkZWYyZjE7XHJcbiRkYXJrLXJlZDogI2M2MjgyODtcclxuJHBvcHBpbnM6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcclxuJGVycm9yLWZvbnQtc2l6ZTogMTFweDtcclxuIl19 */\";","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { isNeverCheck } from '../../../helpers/is-never-check.helper';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { DEFAULT_SIZE, INITIAL_PAGE, Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { Page } from '../../../models/common/types/page.type';\r\nimport { DateInterval, PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { PaginatorChanged } from '../../../models/common/interfaces/paginator.model';\r\n\r\n@Component({\r\n    selector: 'bl-pagination',\r\n    templateUrl: './pagination.component.html',\r\n    styleUrls: ['./pagination.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationComponent {\r\n\r\n    readonly pageSizeOptions: number[] = [1, 3, 5, 10];\r\n\r\n    @Input()\r\n    isSearch = false;\r\n\r\n    @Input()\r\n    page: number = INITIAL_PAGE;\r\n\r\n    @Input()\r\n    size: number = DEFAULT_SIZE;\r\n\r\n    @Input()\r\n    isPreviousPage = true;\r\n\r\n    @Input()\r\n    isNextPage = true;\r\n\r\n    @Input()\r\n    data: StreamData<Paginator<PastTrainings>> | undefined = undefined;\r\n\r\n    @Output()\r\n    readonly paginatorChanged: EventEmitter<PaginatorChanged> = new EventEmitter<PaginatorChanged>();\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    loadPage(\r\n        page?: Page,\r\n        dateInterval?: DateInterval,\r\n        earliestTrainingDate?: Date,\r\n        lastPage?: number,\r\n    ): void {\r\n        if (this.isSearch) {\r\n            if (page) {\r\n                switch (page) {\r\n                    case 'First': {\r\n                        this.page = INITIAL_PAGE;\r\n                        break;\r\n                    }\r\n                    case 'Previous': {\r\n                        this.page--;\r\n                        break;\r\n                    }\r\n                    case 'Next': {\r\n                        this.page++;\r\n                        break;\r\n                    }\r\n                    case 'Last': {\r\n                        this.page = lastPage;\r\n                        break;\r\n                    }\r\n                    default:\r\n                        isNeverCheck(page);\r\n                }\r\n            }\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: true,\r\n            } as PaginatorChanged);\r\n        }\r\n        else {\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: false,\r\n                PageType: page,\r\n                DateInterval: dateInterval,\r\n                EarliestTrainingDate: earliestTrainingDate,\r\n            } as PaginatorChanged);\r\n        }\r\n    }\r\n\r\n    setPageTooltip(\r\n        isSearch: boolean,\r\n        page: Page,\r\n    ): Observable<string> {\r\n        if (isSearch) {\r\n            if (page === 'First' || page === 'Last') {\r\n                return this.translateService.stream(`training.past_trainings.buttons.${page === 'First' ? 'first_page' : 'last_page'}`);\r\n            }\r\n            else {\r\n                return this.translateService.stream(`training.past_trainings.buttons.${page === 'Next' ? 'next_page' : 'previous_page'}`);\r\n            }\r\n        }\r\n        else {\r\n            if (page === 'First' || page === 'Last') {\r\n                return this.translateService.stream(`training.past_trainings.buttons.${page === 'First' ? 'first_week' : 'last_week'}`);\r\n            }\r\n            else {\r\n                if (page === 'Next') {\r\n                    return this.translateService.stream(`training.past_trainings.${this.isNextPage ? 'buttons.next_week' : 'disabled_next_week'}`);\r\n                }\r\n                else {\r\n                    return this.translateService.stream(`training.past_trainings.${this.isPreviousPage ? 'buttons.previous_week' : 'disabled_previous_week'}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setPageTooltipClass(\r\n        isSearch: boolean,\r\n        page: Page,\r\n    ): string {\r\n        if (isSearch) {\r\n            return 'tooltip';\r\n        }\r\n        else {\r\n            if (page === 'First' || page === 'Last') {\r\n                return 'tooltip';\r\n            }\r\n            if (page === 'Next') {\r\n                return this.isNextPage ? 'tooltip' : 'tooltip-error';\r\n            }\r\n            else {\r\n                return this.isPreviousPage ? 'tooltip' : 'tooltip-error';\r\n            }\r\n        }\r\n    }\r\n\r\n    setPageText(totalPages: number): Observable<string> {\r\n        return this.translateService.stream('common')\r\n            .pipe(\r\n                map((value: { [key: string]: string }) =>\r\n                    `\r\n                        ${value['page']}\r\n                        <strong class=\"primary\">${this.page?.toString() ?? '1'}</strong>\r\n                        ${value['of']}\r\n                        <strong class=\"primary\">${totalPages?.toString() ?? '1'}</strong>\r\n                    `),\r\n            );\r\n    }\r\n\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n    ){}\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        const token: string = this.authService.getToken();\r\n        const authRequest: HttpRequest<unknown> = request.clone({ headers: request.headers.set('authorization', 'Bearer ' + token) });\r\n        return next.handle(authRequest);\r\n    }\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function isBroj(): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        if (control.value) {\r\n            if (!isNaN(parseFloat(control.value)) && isFinite(control.value)) {\r\n                return null;\r\n            }\r\n            return { 'onlyNumbers': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthResponseData } from './models/auth/auth-data.model';\r\nimport { LocalStorageItems } from './models/common/interfaces/common.model';\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { SharedService } from './services/shared/shared.service';\r\nimport { NewTrainingService } from './services/training/new-training.service';\r\n\r\n@Component({\r\n    selector: 'bl-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly sharedService: SharedService,\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly translateService: TranslateService,\r\n    ) {\r\n        this.translateService.setDefaultLang('en');\r\n        const authData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n        this.translateService.use(authData?.Preferences?.language || 'en').subscribe();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authService.autoLogin();\r\n        this.newTrainingService.keepTrainingState();\r\n        this.sharedService.keepQueryParams();\r\n    }\r\n}\r\n","export default \".wrapper {\\n  width: 90%;\\n  border-radius: 6px;\\n  margin-top: 6rem;\\n  margin-left: auto;\\n  margin-right: auto;\\n  background: #def2f1;\\n  text-align: center;\\n}\\n\\n.spinner {\\n  margin: 80% auto;\\n}\\n\\n.main-form {\\n  padding-top: 16px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  row-gap: 10px;\\n}\\n\\n.main-form-field {\\n  width: 300px;\\n}\\n\\n.error {\\n  font-size: 11px;\\n  color: #c62828;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.error-custom {\\n  align-self: flex-start;\\n  margin-left: 20px;\\n}\\n\\n.no_account_message {\\n  font-size: 12px;\\n  color: #93959e;\\n  display: inline-block;\\n  margin-top: 15px;\\n  padding-bottom: 16px;\\n}\\n\\n.no-account-link {\\n  text-decoration: none;\\n  font-weight: bold;\\n  color: #93959e;\\n  cursor: pointer;\\n}\\n\\n.submit,\\n.label {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n@media (min-width: 640px) {\\n  .wrapper {\\n    width: 400px;\\n  }\\n\\n  .error-custom {\\n    margin-left: 50px;\\n  }\\n}\\n\\n@media (max-width: 320px) {\\n  .main-form-field {\\n    width: 250px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcbG9naW4uY29tcG9uZW50LnNjc3MiLCIuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcc3R5bGVzXFxkZWZhdWx0LXBhbGxldHRlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxVQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkNMUztFRE1ULGtCQUFBO0FBREo7O0FBSUE7RUFDSSxnQkFBQTtBQURKOztBQUlBO0VBQ0ksaUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7QUFESjs7QUFHSTtFQUNJLFlBQUE7QUFEUjs7QUFLQTtFQUNJLGVBQUE7RUFDQSxjQzFCTztFRDJCUCxrQ0MxQk07QUR3QlY7O0FBS0E7RUFDSSxzQkFBQTtFQUNBLGlCQUFBO0FBRko7O0FBS0E7RUFDSSxlQUFBO0VBQ0EsY0N2Q1E7RUR3Q1IscUJBQUE7RUFDQSxnQkFBQTtFQUNBLG9CQUFBO0FBRko7O0FBS0E7RUFDSSxxQkFBQTtFQUNBLGlCQUFBO0VBQ0EsY0NoRFE7RURpRFIsZUFBQTtBQUZKOztBQUtBOztFQUVJLGtDQ25ETTtBRGlEVjs7QUFNQTtFQUVJO0lBQ0ksWUFBQTtFQUpOOztFQU9FO0lBQ0ksaUJBQUE7RUFKTjtBQUNGOztBQVFBO0VBRUk7SUFDSSxZQUFBO0VBUE47QUFDRiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uLy4uLy4uL3N0eWxlcy9kZWZhdWx0LXBhbGxldHRlLnNjc3MnO1xyXG5cclxuLndyYXBwZXIge1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIG1hcmdpbi10b3A6IDZyZW07XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIGJhY2tncm91bmQ6ICRsaWdodC1ibHVlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uc3Bpbm5lciB7XHJcbiAgICBtYXJnaW46IDgwJSBhdXRvO1xyXG59XHJcblxyXG4ubWFpbi1mb3JtIHtcclxuICAgIHBhZGRpbmctdG9wOiAxNnB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcm93LWdhcDogMTBweDtcclxuXHJcbiAgICAmLWZpZWxkIHtcclxuICAgICAgICB3aWR0aDogMzAwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5lcnJvciB7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICBjb2xvcjogJGRhcmstcmVkO1xyXG4gICAgZm9udC1mYW1pbHk6ICRwb3BwaW5zO1xyXG59XHJcblxyXG4uZXJyb3ItY3VzdG9tIHtcclxuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxufVxyXG5cclxuLm5vX2FjY291bnRfbWVzc2FnZSB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBjb2xvcjogJGJsdWUtZ3JleTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcclxufVxyXG5cclxuLm5vLWFjY291bnQtbGluayB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGNvbG9yOiAkYmx1ZS1ncmV5O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uc3VibWl0LFxyXG4ubGFiZWwge1xyXG4gICAgZm9udC1mYW1pbHk6ICRwb3BwaW5zO1xyXG59XHJcblxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KSB7XHJcblxyXG4gICAgLndyYXBwZXIge1xyXG4gICAgICAgIHdpZHRoOiA0MDBweDtcclxuICAgIH1cclxuXHJcbiAgICAuZXJyb3ItY3VzdG9tIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogNTBweDtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xyXG5cclxuICAgIC5tYWluLWZvcm0tZmllbGQge1xyXG4gICAgICAgIHdpZHRoOiAyNTBweDtcclxuICAgIH1cclxuXHJcbn1cclxuIiwiJGFybXktZ3JlZW46ICMwMDk2ODg7XHJcbiRsaWdodC1wZXJpd2lua2xlOiAjZGVkZmUxO1xyXG4kYmx1ZS1ncmV5OiAjOTM5NTllO1xyXG4kbGlnaHQtYmx1ZTogI2RlZjJmMTtcclxuJGRhcmstcmVkOiAjYzYyODI4O1xyXG4kcG9wcGluczogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4kZXJyb3ItZm9udC1zaXplOiAxMXB4O1xyXG4iXX0= */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n    ) {}\r\n\r\n    passwordFitsEmail(\r\n        email: string,\r\n        password: string,\r\n    ): Observable<boolean> {\r\n        const params = `?email=${email}&password=${password}`;\r\n        return this.http.get<boolean>(environment.BACKEND + '/check_pass' + params);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bl-more-training-action',\r\n    templateUrl: './more-training-action.component.html',\r\n    styleUrls: ['./more-training-action.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MoreTrainingActionComponent {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Route, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly router: Router,\r\n    ) {}\r\n\r\n    canActivate(\r\n        _route: ActivatedRouteSnapshot,\r\n        _state: RouterStateSnapshot,\r\n    ): Observable<boolean | UrlTree>  {\r\n        return this.authService.isAuth$.pipe(\r\n            take(1),\r\n            map((isAuth: boolean) => {\r\n                if (!isAuth) {\r\n                    return this.router.createUrlTree(['/login']);\r\n                }\r\n                return true;\r\n            }),\r\n        );\r\n    }\r\n\r\n    canLoad(_route: Route): Observable<boolean | UrlTree> {\r\n        return this.authService.isAuth$.pipe(\r\n            take(1),\r\n            map((isAuth: boolean) => {\r\n                if (!isAuth) {\r\n                    return this.router.createUrlTree(['/login']);\r\n                }\r\n                return true;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","export default \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n    <mat-sidenav\\r\\n        class=\\\"sidenav\\\"\\r\\n        #sidenav\\r\\n        role=\\\"navigation\\\">\\r\\n        <bl-side-nav\\r\\n            (closeSideNav)=\\\"sidenav.close()\\\"></bl-side-nav>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content class=\\\"sidenav-content\\\">\\r\\n        <bl-header\\r\\n            (toggleSideNav)=\\\"sidenav.toggle()\\\"></bl-header>\\r\\n        <router-outlet></router-outlet>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\";","\r\nexport interface ErrorMessage {\r\n    readonly message: string;\r\n    readonly statusCode?: number;\r\n}\r\n\r\nexport interface StreamData<T> {\r\n    IsLoading: boolean;\r\n    IsError: boolean;\r\n    Value?: T;\r\n}\r\n\r\nexport enum LocalStorageItems {\r\n    TRAINING_STATE = 'trainingState',\r\n    USER_DATA = 'userData',\r\n    ALL_EXERCISES = 'allExercises',\r\n    QUERY_PARAMS = 'queryParams',\r\n}\r\n","import { Training } from '../new-training/new-training.model';\r\n\r\nexport interface PastTrainings {\r\n    readonly Trainings: Training[];\r\n    readonly Dates: DateInterval;\r\n    readonly IsPreviousWeek?: boolean;\r\n    readonly IsNextWeek?: boolean;\r\n    readonly EarliestTrainingDate?: Date;\r\n    readonly Message?: string;\r\n}\r\n\r\nexport interface DateInterval {\r\n    readonly StartDate: Date;\r\n    readonly EndDate: Date;\r\n}\r\n\r\nexport interface PastTrainingsQueryParams {\r\n    readonly startDate: string;\r\n    readonly endDate: string;\r\n    readonly search?: string;\r\n    readonly page?: string;\r\n    readonly size?: string;\r\n}\r\n\r\nexport const QUERY_PARAMS_DATE_FORMAT = 'dd-MM-yyyy';\r\nexport const TEMPLATE_DATE_FORMAT = 'dd.MM.yyyy';\r\n","import { ChangeDetectorRef } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { of, timer } from 'rxjs';\r\nimport { catchError, finalize, map, switchMap } from 'rxjs/operators';\r\nimport { SignupService } from 'src/app/services/auth/signup.service';\r\nimport { LoginService } from '../../services/auth/login.service';\r\n\r\nexport function passwordFitsEmail(\r\n    loginService: LoginService,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (group: AbstractControl) =>\r\n        timer(350).pipe(\r\n            switchMap(_ => {\r\n                if(group) {\r\n                    const email: string = group.get('email')?.value;\r\n                    const password: string = group.get('password')?.value;\r\n                    if(!email || !password){\r\n                        return of(null);\r\n                    }\r\n                    return loginService.passwordFitsEmail(email, password).pipe(\r\n                        map((response: boolean) => {\r\n                            if(!response){\r\n                                return { 'passwordFitsEmail': true };\r\n                            }\r\n                            return null;\r\n                        }),\r\n                        catchError(_ => of(null)),\r\n                        finalize(() => changeDetectorRef.markForCheck()),\r\n                    );\r\n                }\r\n                else {\r\n                    return of(null);\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function isEmailAvailable(\r\n    signupService: SignupService,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (control: AbstractControl) =>\r\n        timer(350).pipe(\r\n            switchMap(_ => {\r\n                if(control) {\r\n                    const email: string = control?.value;\r\n                    if(!email) {\r\n                        return of(null);\r\n                    }\r\n                    return signupService.getEmails(email).pipe(\r\n                        map((response: boolean) => {\r\n                            if(!response){\r\n                                return { 'availableEmail': true };\r\n                            }\r\n                            return null;\r\n                        }),\r\n                        catchError(_ => of(null)),\r\n                        finalize(() => changeDetectorRef.markForCheck()),\r\n                    );\r\n                }\r\n                else {\r\n                    return of(null);\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function samePasswords(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if(group) {\r\n            const password: string = group.get('password')?.value;\r\n            const confirmPassword: string = group.get('confirmPassword')?.value;\r\n            if(!password || !confirmPassword) {\r\n                return null;\r\n            }\r\n            else {\r\n                if(password !== confirmPassword) {\r\n                    return { 'equalPass': true };\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n","import { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { init } from '@sentry/angular';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\r\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\r\nimport { MaterialModule } from './material.module';\r\nimport { AuthModule } from './modules/auth/auth.module';\r\nimport { NavigationModule } from './modules/navigation.module';\r\nimport { SentryService } from './services/errors/sentry.service';\r\n\r\ninit({\r\n    dsn: 'https://b4903b17554c4e40bbada176e50e4719@o997027.ingest.sentry.io/5955490',\r\n});\r\n\r\nexport function httpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n    return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FlexLayoutModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        MaterialModule,\r\n        NavigationModule,\r\n        AuthModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: httpLoaderFactory,\r\n                deps: [HttpClient],\r\n            },\r\n        }),\r\n        IonicModule.forRoot(),\r\n    ],\r\n    providers: [{\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi: true,\r\n        }, {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ErrorInterceptor,\r\n            multi: true,\r\n        }, {\r\n            provide: ErrorHandler,\r\n            useClass: SentryService,\r\n        },\r\n        HttpClient,\r\n        AuthGuard,\r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\nimport { FormErrorStateMatcher } from '../../../../helpers/error-matchers/form-error-state-matcher.helper';\r\nimport { SetStateChanged } from '../../../../models/training/shared/set.model';\r\nimport { Set } from '../../../../models/training/shared/set.model';\r\nimport { FormSetData } from '../../../../models/training/shared/set.model';\r\nimport { SetFormValidationErrors } from '../../../../models/training/shared/set.model';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport * as CommonValidators from '../../../../validators/shared/common.validators';\r\nimport * as SetValidators from '../../../../validators/training/set.validators';\r\n\r\n@Component({\r\n    selector: 'bl-sets',\r\n    templateUrl: './sets.component.html',\r\n    styleUrls: ['./sets.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        getControlValueAccessor(SetsComponent),\r\n        UnsubscribeService,\r\n    ],\r\n})\r\nexport class SetsComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n\r\n    readonly form: FormArray = new FormArray([]);\r\n    readonly formErrorStateMatcher: FormErrorStateMatcher = new FormErrorStateMatcher();\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    isExerciseFormSubmitted$: Observable<boolean> = of(false);\r\n\r\n    @Input()\r\n    exerciseStateChanged$: Observable<void> = of(null);\r\n\r\n    @Input()\r\n    exerciseNameControl: AbstractControl | null;\r\n\r\n    @Input()\r\n    indexExercise = 0;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Output()\r\n    readonly setAdded: EventEmitter<SetStateChanged> = new EventEmitter<SetStateChanged>();\r\n\r\n    @Output()\r\n    readonly setDeleted: EventEmitter<Partial<SetStateChanged>> = new EventEmitter<Partial<SetStateChanged>>();\r\n\r\n    @Output()\r\n    readonly formStateChanged: EventEmitter<SetFormValidationErrors[]> = new EventEmitter<SetFormValidationErrors[]>();\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.form.setValidators([SetValidators.allSetsFilled()]);\r\n        this.form.updateValueAndValidity();\r\n        this.formStateChanged.emit(this.formErrors);\r\n\r\n        this.exerciseNameControl.valueChanges.pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe((value: string) => {\r\n            value ? this.accessFormField('weightLifted', 0).enable() : this.accessFormField('weightLifted', 0).disable();\r\n            value ? this.accessFormField('reps', 0).enable() : this.accessFormField('reps', 0).disable();\r\n        });\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.form.updateValueAndValidity({ emitEvent: true });\r\n    }\r\n\r\n    writeValue(value: Set[]): void {\r\n        if (value.length > 0) {\r\n            for (const set of value) {\r\n                this.addSet(set);\r\n            }\r\n        }\r\n        else {\r\n            this.addSet();\r\n        }\r\n    }\r\n    //Sending parent new form value when form value changes\r\n    registerOnChange(fn: (formValue: Partial<Set[]>) => void): void {\r\n        this.form.valueChanges.pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe((formValue: Partial<Set[]>) => {\r\n            this.formStateChanged.emit(this.formErrors);\r\n            fn(formValue as Partial<Set[]>);\r\n        });\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    getSets(): AbstractControl[] {\r\n        return (this.form as FormArray).controls;\r\n    }\r\n\r\n    addSet(set?: Set): void {\r\n        this.form.push(\r\n            new FormGroup({\r\n                'setNumber': new FormControl(set ? (set.setNumber as number) : this.getSets().length + 1, [Validators.required]),\r\n                'weightLifted': new FormControl({\r\n                    value: set ? (set.weightLifted as number) : null,\r\n                    disabled: this.exerciseNameControl.value ? false : true,\r\n                }, [Validators.min(1),\r\n                    Validators.max(1000),\r\n                    CommonValidators.isBroj()]),\r\n                'reps': new FormControl({\r\n                    value: set ? (set.reps as number) : null,\r\n                    disabled: this.exerciseNameControl.value ? false : true,\r\n                }, [Validators.min(1),\r\n                    Validators.max(1000),\r\n                    Validators.pattern('^[0-9]*$')]),\r\n            }, {\r\n                validators: [SetValidators.bothValuesRequired(), SetValidators.isSetValid()],\r\n            }),\r\n        );\r\n    }\r\n\r\n    deleteSet(indexSet: number): void {\r\n        this.form.removeAt(indexSet);\r\n        this.setDeleted.emit({\r\n            indexExercise: this.indexExercise as number,\r\n            indexSet: indexSet as number,\r\n            newTotal: this.calculateTotal(),\r\n        } as Partial<SetStateChanged>);\r\n    }\r\n\r\n    onChangeSets(indexSet: number): void {\r\n        let total = 0;\r\n        let isWeightLiftedValid = false;\r\n        let isRepsValid = false;\r\n        if (this.accessFormField('weightLifted', indexSet)?.valid && this.accessFormField('weightLifted', indexSet)?.value) {\r\n            isWeightLiftedValid = true;\r\n        }\r\n        if (this.accessFormField('reps', indexSet)?.valid && this.accessFormField('reps', indexSet)?.value) {\r\n            isRepsValid = true;\r\n        }\r\n        if (isWeightLiftedValid && isRepsValid) {\r\n            total = this.calculateTotal();\r\n        }\r\n        this.setAdded.emit({\r\n            indexExercise: this.indexExercise as number,\r\n            indexSet: indexSet as number,\r\n            isWeightLiftedValid: isWeightLiftedValid as boolean,\r\n            isRepsValid: isRepsValid as boolean,\r\n            newTotal: total as number,\r\n            newSet: {\r\n                setNumber: +this.accessFormField('setNumber', indexSet).value,\r\n                weightLifted: +this.accessFormField('weightLifted', indexSet).value,\r\n                reps: +this.accessFormField('reps', indexSet).value,\r\n            } as Set,\r\n        } as SetStateChanged);\r\n    }\r\n\r\n    showAddSetTooltip(isSetError: boolean): Observable<string> {\r\n        if (isSetError) {\r\n            return this.translateService.stream('training.new_training.first_add_previous_set', {\r\n                setNumber: this.getSets().length > 0 ? this.getSets().length : 1,\r\n            });\r\n        }\r\n        else {\r\n            return of('');\r\n        }\r\n    }\r\n\r\n    showDeleteSetTooltip(indexSet: number): Observable<string> {\r\n        if (indexSet > 0) {\r\n            return this.translateService.stream('training.new_training.buttons.delete_set');\r\n        }\r\n        else {\r\n            return this.translateService.stream('training.new_training.errors.delete_first_set');\r\n        }\r\n    }\r\n\r\n    accessFormField(\r\n        formField: keyof FormSetData,\r\n        indexSet: number,\r\n    ): AbstractControl {\r\n        return this.form.at(indexSet)?.get(formField);\r\n    }\r\n\r\n    private calculateTotal(): number {\r\n        let total = 0;\r\n        for(const group of this.getSets()){\r\n            total += (+group.get('weightLifted')?.value * +group.get('reps')?.value);\r\n        }\r\n        return total;\r\n    }\r\n\r\n    get formErrors(): SetFormValidationErrors[] {\r\n        let errors: SetFormValidationErrors[] = [];\r\n        if (this.form.errors) {\r\n            const mappedKeys: SetFormValidationErrors[] =\r\n                Object.keys(this.form.errors)\r\n                    .map((key: string) => key as SetFormValidationErrors);\r\n            errors = errors.concat(mappedKeys);\r\n        }\r\n        this.form.controls.forEach((group: AbstractControl) => {\r\n            if (group?.errors) {\r\n                const mappedKeys: SetFormValidationErrors[] =\r\n                    Object.keys(group.errors)\r\n                        .map((key: string) => key as SetFormValidationErrors);\r\n                errors = errors.concat(mappedKeys);\r\n            }\r\n        });\r\n        return errors;\r\n    }\r\n\r\n}\r\n","export default \"<mat-menu></mat-menu>\\r\\n\";","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { AuthResponseData } from 'src/app/models/auth/auth-data.model';\r\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\r\nimport { SPINNER_SIZE } from '../../../constants/spinner-size.const';\r\nimport { FormErrorStateMatcher } from '../../../helpers/error-matchers/form-error-state-matcher.helper';\r\nimport { Language, WeightFormat } from '../../../models/preferences.model';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { SignupService } from '../../../services/auth/signup.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\n\r\ntype FormData = {\r\n    language?: Language;\r\n    weightFormat?: WeightFormat;\r\n    email?: string;\r\n    password?: string;\r\n    confirmPassword?: string;\r\n};\r\n\r\n@Component({\r\n    selector: 'bl-signup',\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: MAT_RADIO_DEFAULT_OPTIONS,\r\n        useValue: {\r\n            color: 'primary',\r\n        },\r\n    }],\r\n})\r\nexport class SignupComponent {\r\n\r\n    form: FormGroup;\r\n    readonly formErrorStateMatcher: FormErrorStateMatcher = new FormErrorStateMatcher();\r\n\r\n    isLoading = false;\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly signupService: SignupService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly snackBar: MatSnackBar,\r\n        private readonly router: Router,\r\n    ) {\r\n        this.form = new FormGroup({\r\n            'language': new FormControl('en', [Validators.required]),\r\n            'weightFormat': new FormControl('kg', [Validators.required]),\r\n            'email': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.email],\r\n                [AuthCustomValidators.isEmailAvailable(\r\n                    this.signupService,\r\n                    this.changeDetectorRef,\r\n                )],\r\n            ),\r\n            'password': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)],\r\n            ),\r\n            'confirmPassword': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)],\r\n            ),\r\n        }, { validators: AuthCustomValidators.samePasswords() });\r\n    }\r\n\r\n    get spinnerSize(): number {\r\n        return SPINNER_SIZE;\r\n    }\r\n\r\n    onSubmit(): void {\r\n        if (!this.form.valid) {\r\n            this.snackBar.open(this.translateService.instant('auth.errors.invalid_form'), null, {\r\n                duration: SNACK_BAR_DURATION.ERROR,\r\n                panelClass: 'app__snackbar-error',\r\n            });\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n\r\n        this.authService.signup(\r\n            this.accessFormData('language').value as Language,\r\n            this.accessFormData('weightFormat').value as WeightFormat,\r\n            this.accessFormData('email').value as string,\r\n            this.accessFormData('password').value as string,\r\n            this.accessFormData('confirmPassword').value as string,\r\n        ).pipe(\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe(async (response: AuthResponseData) => {\r\n            if (response.Success) {\r\n                this.snackBar.open(this.translateService.instant(response.Message as string), null, {\r\n                    duration: SNACK_BAR_DURATION.GENERAL,\r\n                    panelClass: response.Success ? 'app__snackbar' : 'app__snackbar-error',\r\n                });\r\n                await this.router.navigate(['/login']);\r\n            }\r\n        });\r\n    }\r\n\r\n    accessFormData(formFieldName: keyof FormData): FormControl {\r\n        return this.form.get(formFieldName) as FormControl;\r\n    }\r\n\r\n}\r\n","\r\nexport const SPINNER_SIZE = 40;\r\n","export default \"<mat-toolbar\\r\\n    class=\\\"toolbar\\\"\\r\\n    color=\\\"primary\\\">\\r\\n    <div fxHide.gt-xs>\\r\\n        <button\\r\\n            mat-icon-button\\r\\n            class=\\\"toolbar-button\\\"\\r\\n            (click)=\\\"onToggle()\\\">\\r\\n            <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div>\\r\\n        <a class=\\\"title\\\">\\r\\n            {{ 'navigation.title' | translate }}\\r\\n        </a>\\r\\n    </div>\\r\\n    <ng-container *ngIf=\\\"isAuthenticated$ | async\\\">\\r\\n        <button\\r\\n            *ngIf=\\\"isEditing$ | async\\\"\\r\\n            mat-raised-button\\r\\n            class=\\\"edit-button\\\"\\r\\n            type=\\\"button\\\"\\r\\n            (click)=\\\"goToPastTraining()\\\">\\r\\n            {{ 'navigation.buttons.edit_go_back' | translate }}\\r\\n        </button>\\r\\n    </ng-container>\\r\\n    <div\\r\\n        fxFlex\\r\\n        fxLayout\\r\\n        fxLayoutAlign=\\\"flex-end\\\"\\r\\n        fxHide.xs>\\r\\n        <ul class=\\\"nav-items\\\">\\r\\n            <li\\r\\n                *ngIf=\\\"!(isAuthenticated$ | async)\\\"\\r\\n                class=\\\"nav-item\\\">\\r\\n                <mat-icon class=\\\"icon\\\">login</mat-icon>\\r\\n                <a\\r\\n                    class=\\\"nav-item-txt\\\"\\r\\n                    routerLink=\\\"/login\\\"\\r\\n                    [routerLinkActive]=\\\"'route-active'\\\">\\r\\n                    {{ 'navigation.login' | translate }}\\r\\n                </a>\\r\\n            </li>\\r\\n            <li\\r\\n                *ngIf=\\\"!(isAuthenticated$ | async)\\\"\\r\\n                class=\\\"nav-item\\\">\\r\\n                <mat-icon class=\\\"icon\\\">app_registration</mat-icon>\\r\\n                <a\\r\\n                    class=\\\"nav-item-txt\\\"\\r\\n                    routerLink=\\\"/signup\\\"\\r\\n                    [routerLinkActive]=\\\"'route-active'\\\">\\r\\n                    {{ 'navigation.signup' | translate }}\\r\\n                </a>\\r\\n            </li>\\r\\n            <li\\r\\n                *ngIf=\\\"isAuthenticated$ | async\\\"\\r\\n                class=\\\"nav-item\\\">\\r\\n                <mat-icon class=\\\"icon\\\">fitness_center</mat-icon>\\r\\n                <a\\r\\n                    class=\\\"nav-item-txt\\\"\\r\\n                    routerLink=\\\"/training/new-training\\\"\\r\\n                    [routerLinkActive]=\\\"'route-active'\\\">\\r\\n                    {{ 'navigation.new_training' | translate }}\\r\\n                </a>\\r\\n            </li>\\r\\n            <li\\r\\n                *ngIf=\\\"isAuthenticated$ | async\\\"\\r\\n                class=\\\"nav-item\\\">\\r\\n                <mat-icon class=\\\"icon\\\">history</mat-icon>\\r\\n                <a\\r\\n                    class=\\\"nav-item-txt\\\"\\r\\n                    routerLink=\\\"/training/past-trainings\\\"\\r\\n                    [routerLinkActive]=\\\"'route-active'\\\"\\r\\n                    [routerLinkActiveOptions]=\\\"myMatchOptions\\\"\\r\\n                    [queryParams]=\\\"{ startDate: StartDate, endDate: EndDate }\\\">\\r\\n                    {{ 'navigation.past_trainings' | translate }}\\r\\n                </a>\\r\\n            </li>\\r\\n            <ng-container *ngIf=\\\"(loggedUserData$ | async) as userData\\\">\\r\\n                <li\\r\\n                    *ngIf=\\\"isAuthenticated$ | async\\\"\\r\\n                    class=\\\"nav-item\\\">\\r\\n                    <button\\r\\n                        mat-button\\r\\n                        [matMenuTriggerFor]=\\\"main\\\">\\r\\n                        <mat-icon>menu</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-menu #main=\\\"matMenu\\\">\\r\\n                        <button\\r\\n                            class=\\\"nav-item--menu-items\\\"\\r\\n                            mat-menu-item\\r\\n                            [matMenuTriggerFor]=\\\"languages\\\">\\r\\n                            <mat-icon class=\\\"nav-item--icon\\\">language</mat-icon>\\r\\n                            <span>{{ 'navigation.language' | translate }}</span>\\r\\n                        </button>\\r\\n                        <button\\r\\n                            class=\\\"nav-item--menu-items\\\"\\r\\n                            mat-menu-item\\r\\n                            (click)=\\\"onLogout()\\\">\\r\\n                            <mat-icon class=\\\"nav-item--icon\\\">logout</mat-icon>\\r\\n                            <span>{{ 'navigation.logout' | translate }}</span>\\r\\n                        </button>\\r\\n                    </mat-menu>\\r\\n                    <mat-menu #languages=\\\"matMenu\\\">\\r\\n                        <button\\r\\n                            class=\\\"nav-item--menu-items nested-items\\\"\\r\\n                            [class.chosenLanguage]=\\\"userData?.Preferences?.language === 'hr'\\\"\\r\\n                            mat-menu-item\\r\\n                            (click)=\\\"changeLanguage('hr')\\\"\\r\\n                            [disabled]=\\\"userData?.Preferences?.language === 'hr'\\\">\\r\\n                            <img\\r\\n                                src=\\\"../../../../assets/images/flags/croatia.png\\\"\\r\\n                                height=\\\"40\\\"\\r\\n                                width=\\\"40\\\">\\r\\n                            <span class=\\\"nested-items--text\\\">\\r\\n                                {{ 'languages.croatian' | translate }}\\r\\n                            </span>\\r\\n                        </button>\\r\\n                        <button\\r\\n                            class=\\\"nav-item--menu-items nested-items\\\"\\r\\n                            [class.chosenLanguage]=\\\"userData?.Preferences?.language === 'en'\\\"\\r\\n                            [class.alignEn]=\\\"userData?.Preferences?.language === 'hr'\\\"\\r\\n                            mat-menu-item\\r\\n                            (click)=\\\"changeLanguage('en')\\\"\\r\\n                            [disabled]=\\\"userData?.Preferences?.language === 'en'\\\">\\r\\n                            <img\\r\\n                                src=\\\"../../../../assets/images/flags/united-kingdom.png\\\"\\r\\n                                height=\\\"24\\\"\\r\\n                                width=\\\"40\\\">\\r\\n                            <span class=\\\"nested-items--text\\\">\\r\\n                                {{ 'languages.english' | translate }}\\r\\n                            </span>\\r\\n                        </button>\\r\\n                    </mat-menu>\\r\\n                </li>\\r\\n            </ng-container>\\r\\n        </ul>\\r\\n    </div>\\r\\n</mat-toolbar>\\r\\n\";","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TrainingItemActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\n\r\ninterface TrainingItemActionsProperties {\r\n    icon: string;\r\n    tooltip: string;\r\n}\r\n\r\n@Pipe({\r\n    name: 'mapTrainingItemActions',\r\n})\r\n\r\nexport class MapTrainingItemActionsPipe implements PipeTransform {\r\n\r\n    private readonly actionToIcon: { [key: string]: TrainingItemActionsProperties } = {\r\n        'delete': {\r\n            icon: 'delete',\r\n            tooltip: 'training.past_trainings.buttons.delete_training',\r\n        },\r\n        'more': {\r\n            icon: 'more_vert',\r\n            tooltip: 'TODO',\r\n        },\r\n    };\r\n\r\n    transform(\r\n        action: TrainingItemActions,\r\n        purpose: string,\r\n    ): string {\r\n        if (purpose === 'icon') {\r\n            return this.actionToIcon[action].icon as string;\r\n        }\r\n        else {\r\n            return this.actionToIcon[action].tooltip as string;\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ShowAllExercisesPipe } from './show-all-exercises.pipe';\r\n\r\n@NgModule({\r\n    declarations: [ShowAllExercisesPipe],\r\n    exports: [ShowAllExercisesPipe],\r\n})\r\nexport class ShowAllExercisesModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport { Training } from '../../../models/training/new-training/new-training.model';\r\nimport { NewTrainingService } from '../../../services/training/new-training.service';\r\n\r\n@Pipe({\r\n    name: 'newTraining',\r\n})\r\nexport class NewTrainingPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private readonly newTrainingService: NewTrainingService,\r\n    ) {}\r\n\r\n    transform(\r\n        _value: Observable<Exercise[]>,\r\n        index: number,\r\n        _exerciseChanged: boolean,\r\n    ): Observable<Exercise[]> {\r\n        return this.newTrainingService.currentTrainingChanged$\r\n            .pipe(\r\n                take(1),\r\n                map((training: Training) => training.exercise[index]?.availableExercises ?? []),\r\n        );\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface DialogData {\r\n    isError: boolean;\r\n    message?: string;\r\n    deleteExercise?: DeleteExerciseDialogData;\r\n}\r\n\r\nexport interface DeleteExerciseDialogData {\r\n    message$: Observable<string>;\r\n    exerciseName: string;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './dialog.component.html',\r\n    styleUrls: ['./dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DialogComponent {\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public readonly data: DialogData,\r\n    ) {}\r\n}\r\n","\r\nexport interface Set {\r\n    setNumber: number;\r\n    weightLifted: number;\r\n    reps: number;\r\n    _id?: string;\r\n}\r\n\r\nexport interface SetStateChanged {\r\n    indexExercise: number;\r\n    indexSet: number;\r\n    isWeightLiftedValid?: boolean;\r\n    isRepsValid?: boolean;\r\n    newTotal?: number;\r\n    newSet?: Set;\r\n}\r\n\r\nexport interface SetTrainingData {\r\n    exerciseName: string;\r\n    setNumber: number;\r\n    weightLifted: number;\r\n    reps: number;\r\n    total: number;\r\n}\r\n\r\nexport function createInitialSet(): Set[] {\r\n    const sets: Set[] = [];\r\n    sets.push({\r\n        setNumber: 1,\r\n        weightLifted: null,\r\n        reps: null,\r\n    } as Set);\r\n    return sets as Set[];\r\n}\r\n\r\nexport type SetFormValidationErrors =\r\n    'setNotFilled' |\r\n    'setNotEntered' |\r\n    'setNotValid' |\r\n    'repsRequired' |\r\n    'weightLiftedRequired' |\r\n    'min' |\r\n    'max' |\r\n    'pattern' |\r\n    'onlyNumbers';\r\n\r\nexport type FormSetData = {\r\n    setNumber?: number;\r\n    weightLifted?: number;\r\n    reps?: number;\r\n};\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UnsubscribeService extends Subject<void> implements OnDestroy {\r\n\r\n    ngOnDestroy(): void {\r\n        this.next();\r\n        this.complete();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { StreamData } from '../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings, PastTrainingsQueryParams } from '../../models/training/past-trainings/past-trainings.model';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SharedService {\r\n\r\n    readonly editingTraining$$: Subject<boolean> = new Subject<boolean>();\r\n\r\n    readonly pastTrainingsQueryParams$$: BehaviorSubject<PastTrainingsQueryParams> = new BehaviorSubject<PastTrainingsQueryParams>(null);\r\n\r\n    readonly deletedTraining$$: Subject<StreamData<Paginator<PastTrainings>>> = new Subject<StreamData<Paginator<PastTrainings>>>();\r\n\r\n    subtractTwoHours(date: Date): Date {\r\n        return new Date(new Date(date).setHours(new Date(date).getHours() - 2));\r\n    }\r\n\r\n    keepQueryParams(): void {\r\n        const queryParams = JSON.parse(localStorage.getItem(LocalStorageItems.QUERY_PARAMS));\r\n        if (!queryParams) {\r\n            return;\r\n        }\r\n        this.pastTrainingsQueryParams$$.next(queryParams);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NewTrainingPipe } from './training/new-training/new-training.pipe';\r\nimport { MapTrainingItemActionsPipe } from './training/past-trainings/map-training-actions.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NewTrainingPipe,\r\n        MapTrainingItemActionsPipe,\r\n    ],\r\n    exports: [\r\n        NewTrainingPipe,\r\n        MapTrainingItemActionsPipe,\r\n    ],\r\n})\r\nexport class PipesModule {}\r\n","export default \"::ng-deep .delete-training-dialog .mat-dialog-container {\\n  padding: 30px;\\n}\\n\\n.title {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  text-align: center;\\n}\\n\\n.content {\\n  margin: 0 -30px;\\n  padding: 0 30px;\\n}\\n\\n.created-at-key {\\n  display: block;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n\\n.created-at-value {\\n  display: block;\\n  color: #009688;\\n  font-weight: 600;\\n}\\n\\n.exercises-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n  row-gap: 5px;\\n  justify-content: flex-start;\\n}\\n\\n.exercises-wrapper .title {\\n  align-self: center;\\n}\\n\\n.exercises-wrapper .exercise-value {\\n  color: #009688;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  border-bottom: 2px solid #def2f1;\\n  align-self: center;\\n}\\n\\n.actions {\\n  padding-top: 15px;\\n  justify-content: flex-end;\\n}\\n\\n.actions .delete-btn {\\n  margin-left: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxkZWxldGUtdHJhaW5pbmctYWN0aW9uLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcc3R5bGVzXFxkZWZhdWx0LXBhbGxldHRlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0k7RUFDSSxhQUFBO0FBRlI7O0FBTUE7RUFDSSxrQ0NKTTtFREtOLGtCQUFBO0FBSEo7O0FBTUE7RUFDSSxlQUFBO0VBQ0EsZUFBQTtBQUhKOztBQU9JO0VBQ0ksY0FBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QUFKUjs7QUFPSTtFQUNJLGNBQUE7RUFDQSxjQzNCSztFRDRCTCxnQkFBQTtBQUxSOztBQVNBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLDJCQUFBO0FBTko7O0FBUUk7RUFDSSxrQkFBQTtBQU5SOztBQVVRO0VBQ0ksY0M1Q0M7RUQ2Q0QsMEJBQUE7RUFBQSx1QkFBQTtFQUFBLGtCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxrQkFBQTtBQVJaOztBQWFBO0VBQ0ksaUJBQUE7RUFDQSx5QkFBQTtBQVZKOztBQVlJO0VBQ0ksaUJBQUE7QUFWUiIsImZpbGUiOiJkZWxldGUtdHJhaW5pbmctYWN0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3R5bGVzL2RlZmF1bHQtcGFsbGV0dGUuc2Nzcyc7XHJcblxyXG46Om5nLWRlZXAgLmRlbGV0ZS10cmFpbmluZy1kaWFsb2cge1xyXG4gICAgLm1hdC1kaWFsb2ctY29udGFpbmVyIHtcclxuICAgICAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4udGl0bGUge1xyXG4gICAgZm9udC1mYW1pbHk6ICRwb3BwaW5zO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uY29udGVudCB7XHJcbiAgICBtYXJnaW46IDAgLTMwcHg7XHJcbiAgICBwYWRkaW5nOiAwIDMwcHg7XHJcbn1cclxuXHJcbi5jcmVhdGVkLWF0IHtcclxuICAgICYta2V5IHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAmLXZhbHVlIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBjb2xvcjogJGFybXktZ3JlZW47XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIH1cclxufVxyXG5cclxuLmV4ZXJjaXNlcy13cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgcm93LWdhcDogNXB4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG5cclxuICAgIC50aXRsZSB7XHJcbiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC5leGVyY2lzZSB7XHJcbiAgICAgICAgJi12YWx1ZSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkYXJteS1ncmVlbjtcclxuICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGxpZ2h0LWJsdWU7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5hY3Rpb25zIHtcclxuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHJcbiAgICAuZGVsZXRlLWJ0biB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgICB9XHJcbn1cclxuIiwiJGFybXktZ3JlZW46ICMwMDk2ODg7XHJcbiRsaWdodC1wZXJpd2lua2xlOiAjZGVkZmUxO1xyXG4kYmx1ZS1ncmV5OiAjOTM5NTllO1xyXG4kbGlnaHQtYmx1ZTogI2RlZjJmMTtcclxuJGRhcmstcmVkOiAjYzYyODI4O1xyXG4kcG9wcGluczogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4kZXJyb3ItZm9udC1zaXplOiAxMXB4O1xyXG4iXX0= */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SNACK_BAR_DURATION } from '../../constants/snack-bar-duration.const';\r\nimport { GeneralResponseData } from '../../models/general-response.model';\r\nimport { Preferences, WeightFormat } from '../../models/preferences.model';\r\nimport { Language } from '../../models/preferences.model';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NavigationService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly authService: AuthService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly snackBar: MatSnackBar,\r\n    ) {}\r\n\r\n    setPreferences(\r\n        userId: string,\r\n        language: Language,\r\n        weightFormat: WeightFormat,\r\n    ): Observable<GeneralResponseData> {\r\n        const preferences: Partial<Preferences> = {\r\n            language: language,\r\n            weightFormat: weightFormat,\r\n        };\r\n        return this.http.put<GeneralResponseData>(environment.BACKEND + `/preferences/${userId}`, { preferences: preferences }).pipe(\r\n            tap(_ => {\r\n                this.authService.updateUserData({\r\n                    userId: userId,\r\n                    language: language,\r\n                    weightFormat: weightFormat,\r\n                } as Preferences);\r\n            }),\r\n            switchMap((response: GeneralResponseData) =>\r\n                this.translateService.use(language).pipe(\r\n                    tap(_ => {\r\n                        this.snackBar.open(this.translateService.instant(response.Message), null, {\r\n                            duration: SNACK_BAR_DURATION.GENERAL,\r\n                            panelClass: 'app__snackbar',\r\n                        });\r\n                    }),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n\r\n}\r\n","export default \"<form\\r\\n    [formGroup]=\\\"$any(form)\\\"\\r\\n    (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <ng-container\\r\\n        *ngFor=\\\"let group of getExercises(); let i = index\\\">\\r\\n        <ng-container [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"exercise-wrapper\\\">\\r\\n                <mat-form-field\\r\\n                    appearance=\\\"outline\\\"\\r\\n                    class=\\\"exercise-form-field\\\"\\r\\n                    matTooltipClass=\\\"tooltip\\\"\\r\\n                    matTooltipPosition=\\\"above\\\"\\r\\n                    [matTooltipDisabled]=\\\"accessFormField('disabledTooltip', i).value\\\"\\r\\n                    [matTooltip]=\\\"accessFormField('name', i).value | translate\\\">\\r\\n                    <mat-label class=\\\"label\\\">\\r\\n                        {{ 'training.new_training.pick_exercise' | translate }}\\r\\n                    </mat-label>\\r\\n                    <mat-select\\r\\n                        disableRipple\\r\\n                        #exerciseNameChoice\\r\\n                        formControlName=\\\"name\\\"\\r\\n                        [errorStateMatcher]=\\\"setErrorMatcher(i)\\\"\\r\\n                        (selectionChange)=\\\"onExerciseNameChange($event, i, exerciseNameChoice)\\\">\\r\\n                        <mat-optgroup\\r\\n                            *ngFor=\\\"let exercise of exercises$ | newTraining:i:exerciseChanged | async\\\"\\r\\n                            [label]=\\\"exercise.primaryMuscleGroup\\\">\\r\\n                            <mat-option\\r\\n                                class=\\\"exercise-option\\\"\\r\\n                                [value]=\\\"exercise.name\\\">\\r\\n                                <img\\r\\n                                    class=\\\"exercise-img\\\"\\r\\n                                    [src]=\\\"exercise.imageUrl\\\">\\r\\n                                <p class=\\\"exercise-text\\\">\\r\\n                                    {{ exercise.name | translate }}\\r\\n                                </p>\\r\\n                            </mat-option>\\r\\n                        </mat-optgroup>\\r\\n                    </mat-select>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"accessFormField('name', i).errors?.required\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.exercise_name_required' | translate }}\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"form.errors?.duplicateExerciseName && form.errors?.duplicateExerciseName === accessFormField('name', i).value\\\"\\r\\n                        class=\\\"error\\\">\\r\\n                        {{ 'training.new_training.errors.exercise_name_duplicate' | translate }}\\r\\n                    </mat-error>\\r\\n                </mat-form-field>\\r\\n                <div\\r\\n                    class=\\\"delete-exercise-wrapper\\\"\\r\\n                    matTooltipPosition=\\\"above\\\"\\r\\n                    matTooltipClass=\\\"tooltip\\\"\\r\\n                    [matTooltip]=\\\"'training.new_training.buttons.delete_exercise' | translate\\\">\\r\\n                    <button\\r\\n                        mat-raised-button\\r\\n                        type=\\\"button\\\"\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteExercise(i, accessFormField('name', i).value)\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <bl-sets\\r\\n                formControlName=\\\"sets\\\"\\r\\n                [isExerciseFormSubmitted$]=\\\"isSubmitted$$.asObservable()\\\"\\r\\n                [exerciseStateChanged$]=\\\"exerciseStateChanged$$.asObservable()\\\"\\r\\n                [exerciseNameControl]=\\\"accessFormField('name', i)\\\"\\r\\n                [indexExercise]=\\\"i\\\"\\r\\n                [isLoading]=\\\"isLoading\\\"\\r\\n                [editMode]=\\\"editMode\\\"\\r\\n                (setAdded)=\\\"onChangeSets($event)\\\"\\r\\n                (setDeleted)=\\\"deleteSet($event)\\\"\\r\\n                (formStateChanged)=\\\"onSetFormChange($event)\\\"></bl-sets>\\r\\n            <bl-total-weight formControlName=\\\"total\\\"></bl-total-weight>\\r\\n        </ng-container>\\r\\n    </ng-container>\\r\\n    <div\\r\\n        *ngIf=\\\"(currentExerciseState$ | async) as currentExerciseState\\\"\\r\\n        class=\\\"add-exercise\\\">\\r\\n        <div\\r\\n            matTooltipClass=\\\"tooltip-error\\\"\\r\\n            [matTooltip]=\\\"showAddExerciseTooltip(\\r\\n                currentExerciseState[0].length,\\r\\n                currentExerciseState[1].length) | async\\\">\\r\\n            <button\\r\\n                mat-raised-button\\r\\n                type=\\\"button\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                class=\\\"add-exercise-button\\\"\\r\\n                [disabled]=\\\"isAddingExercisesDisabled(\\r\\n                    currentExerciseState[0].length,\\r\\n                    currentExerciseState[1].length) || isLoading\\\"\\r\\n                (click)=\\\"addExercise($event)\\\">\\r\\n                {{ 'training.new_training.buttons.add_exercise' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <div\\r\\n            matTooltipClass=\\\"tooltip-error\\\"\\r\\n            matTooltipPosition=\\\"below\\\"\\r\\n            [matTooltip]=\\\"currentExerciseState[0]?.length === 0 ? ('training.new_training.errors.at_least_one_exercise' | translate) : ''\\\">\\r\\n            <button\\r\\n                mat-raised-button\\r\\n                class=\\\"finish-training\\\"\\r\\n                type=\\\"submit\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                matTooltipClass=\\\"tooltip\\\"\\r\\n                matTooltipPosition=\\\"above\\\"\\r\\n                [matTooltip]=\\\"currentExerciseState[0]?.length > 0 ? ('training.new_training.finish_training' | translate) : ''\\\"\\r\\n                [class.button-spinner]=\\\"isLoading\\\"\\r\\n                [disabled]=\\\"currentExerciseState[0]?.length === 0 || isLoading\\\">\\r\\n                <mat-icon class=\\\"finish-training-icon\\\">done</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n        <span\\r\\n            *ngIf=\\\"form?.errors?.emptyTraining && (isSubmitted$$ | async) && currentExerciseState[0]?.length === 0\\\"\\r\\n            class=\\\"empty-training-msg\\\">\\r\\n            {{ 'training.new_training.errors.at_least_one_exercise' | translate }}\\r\\n        </span>\\r\\n    </div>\\r\\n</form>\\r\\n\";","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from '../material.module';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { RoundTotalWeightModule } from '../pipes/training/new-training/round-total-weight/round-total-weight.module';\r\nimport { ShowAllExercisesModule } from '../pipes/training/past-trainings/show-all-exercises/show-all-exercises.module';\r\nimport { NotFoundResolverService } from '../services/shared/not-found-resolver.service';\r\nimport { DeleteTrainingActionService } from '../services/training/training-actions/delete-training-action.service';\r\nimport { DialogComponent } from '../views/shared/dialog/dialog.component';\r\nimport { NotFoundComponent } from '../views/shared/not-found/not-found.component';\r\nimport { SetsComponent } from '../views/shared/training/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../views/shared/training/single-exercise/single-exercise.component';\r\nimport { TotalWeightComponent } from '../views/shared/training/total-weight/total-weight.component';\r\nimport { DeleteTrainingActionComponent } from '../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\nimport { MoreTrainingActionComponent } from '../views/shared/training/training-actions/more-training-action/more-training-action.component';\r\nimport { PaginationComponent } from '../views/shared/pagination/pagination.component';\r\n\r\nconst COMPONENTS = [\r\n    DialogComponent,\r\n    SingleExerciseComponent,\r\n    SetsComponent,\r\n    TotalWeightComponent,\r\n    NotFoundComponent,\r\n    PaginationComponent,\r\n];\r\n\r\nconst ACTION_COMPONENTS = [\r\n    DeleteTrainingActionComponent,\r\n    MoreTrainingActionComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    TranslateModule,\r\n];\r\n\r\nconst IMPORTS = [\r\n    ShowAllExercisesModule,\r\n    PipesModule,\r\n    RoundTotalWeightModule,\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ...COMPONENTS,\r\n        ...ACTION_COMPONENTS,\r\n    ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n    entryComponents: [\r\n        DialogComponent,\r\n        DeleteTrainingActionComponent,\r\n    ],\r\n    providers: [\r\n        NotFoundResolverService,\r\n        DeleteTrainingActionService,\r\n    ],\r\n})\r\nexport class SharedModule {}\r\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t\"grHM\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t5\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t6\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t\"yIml\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t10\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t12\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t13\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t14\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t15\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t16\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t\"wPXX\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t\"e90W\",\n\t\t25\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t28\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t32\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t37\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t39\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t42\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t43\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t44\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t45\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t46\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","export default \".invalid-bodyweight {\\n  margin-top: 5px;\\n}\\n\\n.exercise-wrapper {\\n  display: flex;\\n  align-items: center;\\n  column-gap: 10px;\\n}\\n\\n.exercise-form-field {\\n  width: 230px;\\n}\\n\\n.exercise-form-field .mat-select {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.label,\\n.error {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.error {\\n  color: #c62828;\\n  font-size: 11px;\\n}\\n\\n.exercise-option {\\n  padding: 0 !important;\\n}\\n\\n.exercise-img {\\n  position: absolute;\\n  bottom: 1%;\\n  left: 0%;\\n  display: inline-block;\\n  width: 25%;\\n  height: 48px;\\n}\\n\\n.exercise-text {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-size: 13px;\\n  margin: 0;\\n  position: absolute;\\n  bottom: 4%;\\n  left: 25%;\\n  text-align: center;\\n  width: 165px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.delete-exercise-wrapper {\\n  margin-top: -20px;\\n}\\n\\n.add-exercise {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-around;\\n  width: 300px;\\n  margin-top: 10px;\\n  column-gap: 5px;\\n}\\n\\n.add-exercise-button {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.add-exercise-button:not([disabled]):hover, .add-exercise-button:not([disabled]):active {\\n  color: #def2f1;\\n}\\n\\n.add-exercise .empty-training-msg {\\n  display: block;\\n  text-align: center;\\n  color: #c62828;\\n  font-size: 13px;\\n  margin-top: 10px;\\n  line-height: 16px;\\n  white-space: nowrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHNpbmdsZS1leGVyY2lzZS5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcc3R5bGVzXFxkZWZhdWx0LXBhbGxldHRlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxlQUFBO0FBREo7O0FBSUE7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQURKOztBQUlBO0VBQ0ksWUFBQTtBQURKOztBQUdJO0VBQ0ksa0NDWEU7QURVVjs7QUFLQTs7RUFFSSxrQ0NqQk07QURlVjs7QUFLQTtFQUNJLGNDdEJPO0VEdUJQLGVDckJjO0FEbUJsQjs7QUFLQTtFQUNJLHFCQUFBO0FBRko7O0FBS0E7RUFDSSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxRQUFBO0VBQ0EscUJBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtBQUZKOztBQUtBO0VBQ0ksa0NDdkNNO0VEd0NOLGVBQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtBQUZKOztBQUtBO0VBQ0ksaUJBQUE7QUFGSjs7QUFLQTtFQUNJLGFBQUE7RUFDQSxlQUFBO0VBQ0EsNkJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0FBRko7O0FBSUk7RUFDSSxrQ0NqRUU7QUQrRFY7O0FBS0k7RUFFSSxjQ3hFSztBRG9FYjs7QUFPSTtFQUNJLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGNDN0VHO0VEOEVILGVBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUFMUiIsImZpbGUiOiJzaW5nbGUtZXhlcmNpc2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi8uLi8uLi8uLi9zdHlsZXMvZGVmYXVsdC1wYWxsZXR0ZS5zY3NzJztcclxuXHJcbi5pbnZhbGlkLWJvZHl3ZWlnaHQge1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcblxyXG4uZXhlcmNpc2Utd3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGNvbHVtbi1nYXA6IDEwcHg7XHJcbn1cclxuXHJcbi5leGVyY2lzZS1mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiAyMzBweDtcclxuXHJcbiAgICAubWF0LXNlbGVjdCB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRwb3BwaW5zO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubGFiZWwsXHJcbi5lcnJvciB7XHJcbiAgICBmb250LWZhbWlseTogJHBvcHBpbnM7XHJcbn1cclxuXHJcbi5lcnJvciB7XHJcbiAgICBjb2xvcjogJGRhcmstcmVkO1xyXG4gICAgZm9udC1zaXplOiAkZXJyb3ItZm9udC1zaXplO1xyXG59XHJcblxyXG4uZXhlcmNpc2Utb3B0aW9uIHtcclxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmV4ZXJjaXNlLWltZyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDElO1xyXG4gICAgbGVmdDowJTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiAyNSU7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbn1cclxuXHJcbi5leGVyY2lzZS10ZXh0IHtcclxuICAgIGZvbnQtZmFtaWx5OiAkcG9wcGlucztcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogNCU7XHJcbiAgICBsZWZ0OiAyNSU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTY1cHg7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG59XHJcblxyXG4uZGVsZXRlLWV4ZXJjaXNlLXdyYXBwZXIge1xyXG4gICAgbWFyZ2luLXRvcDogLTIwcHg7XHJcbn1cclxuXHJcbi5hZGQtZXhlcmNpc2Uge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgbWFyZ2luLXRvcDoxMHB4O1xyXG4gICAgY29sdW1uLWdhcDo1cHg7XHJcblxyXG4gICAgJi1idXR0b24ge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkcG9wcGlucztcclxuICAgIH1cclxuXHJcbiAgICAmLWJ1dHRvbjpub3QoW2Rpc2FibGVkXSk6aG92ZXIsXHJcbiAgICAmLWJ1dHRvbjpub3QoW2Rpc2FibGVkXSk6YWN0aXZlIHtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LWJsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgLmVtcHR5LXRyYWluaW5nLW1zZyB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGNvbG9yOiAkZGFyay1yZWQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIH1cclxufVxyXG4iLCIkYXJteS1ncmVlbjogIzAwOTY4ODtcclxuJGxpZ2h0LXBlcml3aW5rbGU6ICNkZWRmZTE7XHJcbiRibHVlLWdyZXk6ICM5Mzk1OWU7XHJcbiRsaWdodC1ibHVlOiAjZGVmMmYxO1xyXG4kZGFyay1yZWQ6ICNjNjI4Mjg7XHJcbiRwb3BwaW5zOiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XHJcbiRlcnJvci1mb250LXNpemU6IDExcHg7XHJcbiJdfQ== */\";","export default \".wrapper {\\n  display: flex;\\n  justify-content: center;\\n  align-items: baseline;\\n  column-gap: 10px;\\n  margin: 10px 0 15px 0;\\n  padding-bottom: 10px;\\n  border-bottom: 2px solid #009688;\\n}\\n.wrapper .key {\\n  color: #009688;\\n  font-size: 15px;\\n}\\n.wrapper .value {\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHRvdGFsLXdlaWdodC5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcc3R5bGVzXFxkZWZhdWx0LXBhbGxldHRlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxxQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7RUFDQSxvQkFBQTtFQUNBLGdDQUFBO0FBREo7QUFHSTtFQUNJLGNDWks7RURhTCxlQUFBO0FBRFI7QUFJSTtFQUNJLGVBQUE7QUFGUiIsImZpbGUiOiJ0b3RhbC13ZWlnaHQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi8uLi8uLi8uLi9zdHlsZXMvZGVmYXVsdC1wYWxsZXR0ZS5zY3NzJztcclxuXHJcbi53cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcclxuICAgIGNvbHVtbi1nYXA6IDEwcHg7XHJcbiAgICBtYXJnaW46IDEwcHggMCAxNXB4IDA7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkYXJteS1ncmVlbjtcclxuXHJcbiAgICAua2V5IHtcclxuICAgICAgICBjb2xvcjogJGFybXktZ3JlZW47XHJcbiAgICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgfVxyXG5cclxuICAgIC52YWx1ZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCIkYXJteS1ncmVlbjogIzAwOTY4ODtcclxuJGxpZ2h0LXBlcml3aW5rbGU6ICNkZWRmZTE7XHJcbiRibHVlLWdyZXk6ICM5Mzk1OWU7XHJcbiRsaWdodC1ibHVlOiAjZGVmMmYxO1xyXG4kZGFyay1yZWQ6ICNjNjI4Mjg7XHJcbiRwb3BwaW5zOiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XHJcbiRlcnJvci1mb250LXNpemU6IDExcHg7XHJcbiJdfQ== */\";","export default \".sets {\\n  width: 300px;\\n  font-size: 13px;\\n  display: flex;\\n  align-items: center;\\n  column-gap: 12px;\\n}\\n.sets-weight-lifted, .sets-reps {\\n  width: 100px;\\n}\\n.sets--after-first {\\n  padding-top: 5px;\\n}\\n.sets-success {\\n  color: #009688;\\n  font-size: 11px;\\n}\\n.error {\\n  color: #c62828;\\n  font-size: 11px;\\n}\\n.delete-set-wrapper {\\n  margin-top: -15px;\\n}\\n.add-sets {\\n  width: 300px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin-top: 10px;\\n}\\n.add-sets-button {\\n  margin-left: 16px;\\n  margin-top: 11px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n.add-sets-button:not([disabled]):hover, .add-sets-button:not([disabled]):active {\\n  color: #def2f1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHNldHMuY29tcG9uZW50LnNjc3MiLCIuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHN0eWxlc1xcZGVmYXVsdC1wYWxsZXR0ZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQURKO0FBR0k7RUFFSSxZQUFBO0FBRlI7QUFLSTtFQUNJLGdCQUFBO0FBSFI7QUFNSTtFQUNJLGNDbkJLO0VEb0JMLGVBQUE7QUFKUjtBQVFBO0VBQ0ksY0NyQk87RURzQlAsZUFBQTtBQUxKO0FBUUE7RUFDSSxpQkFBQTtBQUxKO0FBUUE7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQUxKO0FBT0k7RUFDSSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0NDdENFO0FEaUNWO0FBUUk7RUFFSSxjQzdDSztBRHNDYiIsImZpbGUiOiJzZXRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vLi4vc3R5bGVzL2RlZmF1bHQtcGFsbGV0dGUuc2Nzcyc7XHJcblxyXG4uc2V0cyB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGNvbHVtbi1nYXA6IDEycHg7XHJcblxyXG4gICAgJi13ZWlnaHQtbGlmdGVkLFxyXG4gICAgJi1yZXBzIHtcclxuICAgICAgICB3aWR0aDogMTAwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tYWZ0ZXItZmlyc3Qge1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi1zdWNjZXNzIHtcclxuICAgICAgICBjb2xvcjogJGFybXktZ3JlZW47XHJcbiAgICAgICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uZXJyb3Ige1xyXG4gICAgY29sb3I6ICRkYXJrLXJlZDtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxufVxyXG5cclxuLmRlbGV0ZS1zZXQtd3JhcHBlciB7XHJcbiAgICBtYXJnaW4tdG9wOiAtMTVweDtcclxufVxyXG5cclxuLmFkZC1zZXRzIHtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG5cclxuICAgICYtYnV0dG9uIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTZweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMXB4O1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkcG9wcGlucztcclxuICAgIH1cclxuXHJcbiAgICAmLWJ1dHRvbjpub3QoW2Rpc2FibGVkXSk6aG92ZXIsXHJcbiAgICAmLWJ1dHRvbjpub3QoW2Rpc2FibGVkXSk6YWN0aXZlIHtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LWJsdWU7XHJcbiAgICB9XHJcbn1cclxuIiwiJGFybXktZ3JlZW46ICMwMDk2ODg7XHJcbiRsaWdodC1wZXJpd2lua2xlOiAjZGVkZmUxO1xyXG4kYmx1ZS1ncmV5OiAjOTM5NTllO1xyXG4kbGlnaHQtYmx1ZTogI2RlZjJmMTtcclxuJGRhcmstcmVkOiAjYzYyODI4O1xyXG4kcG9wcGluczogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4kZXJyb3ItZm9udC1zaXplOiAxMXB4O1xyXG4iXX0= */\";","import { startOfWeek, endOfWeek } from \"date-fns\";\r\nimport { DateInterval } from \"../models/training/past-trainings/past-trainings.model\";\r\n\r\nexport const isValidDate = (dateStr: string): boolean => !isNaN(new Date(dateStr).getDate());\r\n\r\nexport const constructDates = (date: Date): DateInterval => {\r\n    const startDate: Date = startOfWeek(date, {\r\n        weekStartsOn: 1,\r\n    });\r\n    const endDate: Date = endOfWeek(date, {\r\n        weekStartsOn: 1,\r\n    });\r\n    return {\r\n        StartDate: startDate,\r\n        EndDate: endDate,\r\n    } as DateInterval;\r\n};\r\n","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nexport class FormErrorStateMatcher implements ErrorStateMatcher {\r\n\r\n    isErrorState(\r\n        control: FormControl,\r\n        _form: FormGroupDirective | NgForm,\r\n    ): boolean {\r\n        const controlTouched: boolean = control && (control.dirty || control.touched);\r\n        const parentInvalid: boolean = control && control.parent && control.parent.invalid && (control.parent.dirty || control.parent.touched);\r\n        return parentInvalid && controlTouched;\r\n    }\r\n}\r\n","\r\nexport const SNACK_BAR_DURATION = Object.freeze({\r\n    GENERAL: 3000,\r\n    ERROR: 5000,\r\n} as const);\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\n\r\n@Injectable()\r\nexport class NotFoundResolverService implements Resolve<void> {\r\n\r\n    resolve(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): void {\r\n        localStorage.removeItem(LocalStorageItems.TRAINING_STATE);\r\n    }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Training } from 'src/app/models/training/new-training/new-training.model';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { mapDateInterval } from '../../../helpers/training/past-trainings/map-past-trainings-dates.helper';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { TrainingActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport { DeleteTrainingActionData } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport {\r\n    DeleteTrainingActionComponent,\r\n    DeleteTrainingActionDialogData } from '../../../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\n\r\n@Injectable()\r\nexport class DeleteTrainingActionService implements TrainingActions {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly dialog: MatDialog,\r\n        private readonly datePipe: DatePipe,\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    perform(data: DeleteTrainingActionData): void {\r\n        this.openDeleteTrainingDialog(data);\r\n    }\r\n\r\n    openDeleteTrainingDialog(data: DeleteTrainingActionData): void {\r\n        this.dialog.open(DeleteTrainingActionComponent, {\r\n            data: {\r\n                title$: this.translateService.stream('training.past_trainings.actions.delete_training') as Observable<string>,\r\n                dateCreated$: this.translateService.stream(`weekdays.${data.weekDays[data.dayIndex]}`).pipe(\r\n                    map((value: { [key: string]: string }) => `${value} (${this.datePipe.transform(data.training.createdAt as Date, 'dd.MM.yyyy')})`),\r\n                ) as Observable<string>,\r\n                timeCreated$: of(data.timeCreated) as Observable<string>,\r\n                training$: of(data.training as Training),\r\n                deleteTrainingFn: (\r\n                    trainingId: string,\r\n                    currentDate: Date,\r\n                ) => this.deleteTraining(trainingId, currentDate),\r\n            } as DeleteTrainingActionDialogData,\r\n            panelClass: 'delete-training-dialog',\r\n        });\r\n    }\r\n\r\n    deleteTraining(\r\n        trainingId: string,\r\n        currentDate: Date,\r\n    ): Observable<StreamData<Paginator<PastTrainings>>> {\r\n        const params = `?currentDate=${currentDate}`;\r\n        return this.http.delete<StreamData<Paginator<PastTrainings>>>(environment.BACKEND + `/training/delete_training/${trainingId}${params}`)\r\n            .pipe(\r\n                map((response: StreamData<Paginator<PastTrainings>>) => mapDateInterval(response)),\r\n            );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { format } from 'date-fns';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { Language } from '../../../models/preferences.model';\r\nimport { PastTrainingsQueryParams } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { QUERY_PARAMS_DATE_FORMAT } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { NavigationService } from '../../../services/shared/navigation.service';\r\nimport { SharedService } from '../../../services/shared/shared.service';\r\nimport { NewTrainingService } from '../../../services/training/new-training.service';\r\nimport { constructDates } from '../../../helpers/dates.helper';\r\nimport { LocalStorageItems } from '../../../models/common/interfaces/common.model';\r\n\r\ninterface IsActiveMatchOptions {\r\n    matrixParams: 'exact' | 'subset' | 'ignored';\r\n    queryParams: 'exact' | 'subset' | 'ignored';\r\n    paths: 'exact' | 'subset';\r\n    fragment: 'exact' | 'ignored';\r\n}\r\n\r\n@Component({\r\n    selector: 'bl-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n    readonly myMatchOptions: IsActiveMatchOptions = {\r\n        queryParams: 'ignored',\r\n        matrixParams: 'exact',\r\n        paths: 'exact',\r\n        fragment: 'exact',\r\n    };\r\n\r\n    isAuthenticated$: Observable<boolean>;\r\n    isEditing$: Observable<boolean>;\r\n    loggedUserData$: Observable<AuthResponseData>;\r\n\r\n    @Output()\r\n    readonly toggleSideNav: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly authService: AuthService,\r\n        private readonly sharedService: SharedService,\r\n        private readonly navigationService: NavigationService,\r\n        private readonly router: Router,\r\n    ) {}\r\n\r\n    get StartDate(): string {\r\n        return format(constructDates(new Date())?.StartDate ?? new Date(), QUERY_PARAMS_DATE_FORMAT);\r\n    }\r\n\r\n    get EndDate(): string {\r\n        return format(constructDates(new Date())?.EndDate ?? new Date(), QUERY_PARAMS_DATE_FORMAT);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isAuthenticated$ = this.authService.isAuth$;\r\n        this.loggedUserData$ = this.authService.loggedUser$;\r\n        this.isEditing$ = this.sharedService.editingTraining$$;\r\n    }\r\n\r\n    async onLogout(): Promise<void> {\r\n        this.newTrainingService.clearTrainingData();\r\n        await this.authService.logout();\r\n    }\r\n\r\n    goToPastTraining(): void {\r\n        this.sharedService.pastTrainingsQueryParams$$\r\n            .pipe(\r\n                take(1),\r\n            ).subscribe(async (response: PastTrainingsQueryParams) => {\r\n                await this.router.navigate(['/training/past-trainings'], {\r\n                    queryParams: {\r\n                        startDate: response?.startDate ? response.startDate : undefined,\r\n                        endDate: response?.endDate ? response.endDate : undefined,\r\n                        search: response?.search ? response.search : undefined,\r\n                        page: response?.page ? response.page : undefined,\r\n                        size: response?.size ? response.size : undefined,\r\n                    } as PastTrainingsQueryParams,\r\n                });\r\n                localStorage.removeItem(LocalStorageItems.QUERY_PARAMS);\r\n            });\r\n    }\r\n\r\n    onToggle(): void {\r\n        this.toggleSideNav.emit();\r\n    }\r\n\r\n    changeLanguage(language: Language): void {\r\n        this.authService.loggedUser$.pipe(\r\n            take(1),\r\n            switchMap((userData: AuthResponseData) =>\r\n                this.navigationService.setPreferences(\r\n                    userData._id,\r\n                    language,\r\n                    'kg',\r\n                ),\r\n            ),\r\n        ).subscribe();\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, EMPTY, forkJoin, Observable, of, Subject } from 'rxjs';\r\nimport { delay, finalize, map, startWith, switchMap, take, takeUntil, tap } from 'rxjs/operators';\r\nimport { SNACK_BAR_DURATION } from '../../../../constants/snack-bar-duration.const';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\nimport { ExerciseNameErrorStateMatcher } from '../../../../helpers/error-matchers/exercise-name-error-state-matcher.helper';\r\nimport { GeneralResponseData } from '../../../../models/general-response.model';\r\nimport { DEFAULT_WEIGHT_FORMAT } from '../../../../models/preferences.model';\r\nimport { Exercise } from '../../../../models/training/exercise.model';\r\nimport { EditNewTrainingData, EMPTY_TRAINING_EDIT } from '../../../../models/training/new-training/empty-training.model';\r\nimport { Training } from '../../../../models/training/new-training/new-training.model';\r\nimport { createInitialSet, SetFormValidationErrors, SetStateChanged, SetTrainingData } from '../../../../models/training/shared/set.model';\r\nimport { Set } from '../../../../models/training/shared/set.model';\r\nimport { SingleExercise } from '../../../../models/training/shared/single-exercise.model';\r\nimport { FormSingleExerciseData } from '../../../../models/training/shared/single-exercise.model';\r\nimport { RoundTotalWeightPipe } from '../../../../pipes/training/new-training/round-total-weight/round-total-weight.pipe';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport { NewTrainingService } from '../../../../services/training/new-training.service';\r\nimport * as SingleExerciseValidators from '../../../../validators/training/single-exercise.validators';\r\nimport { DeleteExerciseDialogData, DialogComponent, DialogData } from '../../dialog/dialog.component';\r\n\r\nconst INITIAL_WEIGHT = 0;\r\nconst MAX_EXERCISE_NAME_WIDTH = 181;\r\n\r\n@Component({\r\n    selector: 'bl-single-exercise',\r\n    templateUrl: './single-exercise.component.html',\r\n    styleUrls: ['./single-exercise.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        getControlValueAccessor(SingleExerciseComponent),\r\n        UnsubscribeService,\r\n    ],\r\n})\r\nexport class SingleExerciseComponent implements ControlValueAccessor {\r\n\r\n    readonly exerciseStateChanged$$: Subject<void> = new Subject<void>();\r\n    readonly isSubmitted$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    readonly exercises$: Observable<Exercise[]> | undefined = undefined;\r\n\r\n    readonly form: FormArray = new FormArray([]);\r\n    readonly exerciseNameErrorStateMatcher: ExerciseNameErrorStateMatcher = new ExerciseNameErrorStateMatcher();\r\n    setErrors: SetFormValidationErrors[] = [];\r\n\r\n    exerciseChanged = false;\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    editData: EditNewTrainingData = EMPTY_TRAINING_EDIT;\r\n\r\n    @Input()\r\n    bodyweight: AbstractControl | null;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @ViewChild('exerciseNameChoice', {\r\n        read: MatSelect,\r\n    })\r\n    set exerciseNameChoice(exerciseName: MatSelect) {\r\n        if (exerciseName) {\r\n            this.newTrainingService.currentTrainingChanged$.pipe(\r\n                take(1),\r\n                switchMap((currentTrainingState: Training) =>\r\n                    this.setExerciseNameTooltip(\r\n                        exerciseName as MatSelect,\r\n                        null,\r\n                        currentTrainingState as Training,\r\n                    )),\r\n                takeUntil(this.unsubscribeService),\r\n            ).subscribe();\r\n        }\r\n    }\r\n\r\n    readonly currentExerciseState$: Observable<[SingleExercise[], Exercise[]]> =\r\n        this.exerciseStateChanged$$.pipe(\r\n            startWith(undefined as void),\r\n            switchMap(_ =>\r\n                forkJoin([\r\n                    this.newTrainingService.currentTrainingChanged$\r\n                        .pipe(\r\n                            take(1),\r\n                            map((currentTrainingState: Training) => currentTrainingState.exercise),\r\n                        ),\r\n                        this.newTrainingService.allExercisesChanged$.pipe(\r\n                            take(1),\r\n                        ),\r\n                ]),\r\n            ),\r\n        );\r\n\r\n    constructor(\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly snackBar: MatSnackBar,\r\n        private readonly dialog: MatDialog,\r\n        private readonly roundTotalWeightPipe: RoundTotalWeightPipe,\r\n    ) {\r\n        this.form.setValidators([SingleExerciseValidators.checkDuplicateExerciseName(), SingleExerciseValidators.checkExerciseNumber()]);\r\n        this.form.updateValueAndValidity();\r\n    }\r\n\r\n    setErrorMatcher(index: number): ExerciseNameErrorStateMatcher {\r\n        if (this.accessFormField('name', index)?.value) {\r\n            if (this.form?.errors?.duplicateExerciseName === this.accessFormField('name', index).value) {\r\n                return this.exerciseNameErrorStateMatcher;\r\n            }\r\n            return null;\r\n        }\r\n        return this.exerciseNameErrorStateMatcher;\r\n    }\r\n\r\n    writeValue(data: Training): void {\r\n        if (data.exercise.length > 0) {\r\n            (data.exercise as SingleExercise[]).forEach((exercise: SingleExercise, indexExercise: number) => {\r\n                this.addExercise();\r\n                if (exercise.exerciseName) {\r\n                    this.accessFormField('name', indexExercise).patchValue(exercise.exerciseName as string);\r\n                    this.accessFormField('sets', indexExercise).patchValue(exercise.sets as Set[]);\r\n                    this.accessFormField('total', indexExercise).patchValue(exercise.total ? this.roundTotalWeightPipe.transform(exercise.total) : `0 ${DEFAULT_WEIGHT_FORMAT}`);\r\n                    this.accessFormField('disabledTooltip', indexExercise).patchValue(exercise.disabledTooltip as boolean);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.addExercise();\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: (formValue: Partial<SingleExercise[]>) => void): void {\r\n        this.form.valueChanges.pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe(fn);\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    onExerciseNameChange(\r\n        $event: MatSelectChange,\r\n        indexExercise: number,\r\n        element: MatSelect,\r\n    ): void {\r\n        if ($event.value) {\r\n            if (this.form?.errors?.duplicateExerciseName) {\r\n                this.setExerciseNameTooltip(\r\n                    element as MatSelect,\r\n                    indexExercise as number,\r\n                ).subscribe();\r\n            }\r\n            else {\r\n                this.setExerciseNameTooltip(\r\n                    element as MatSelect,\r\n                    indexExercise as number,\r\n                ).subscribe(_ => {\r\n                    this.newTrainingService.updateExerciseChoices(\r\n                        $event.value as string,\r\n                        indexExercise as number,\r\n                        this.accessFormField('disabledTooltip', indexExercise).value as boolean,\r\n                    );\r\n                    this.exerciseChanged = !this.exerciseChanged;\r\n                    this.exerciseStateChanged$$.next();\r\n                    this.changeDetectorRef.markForCheck();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    addExercise(clicked?: MouseEvent): void {\r\n        this.form.push(new FormGroup({\r\n            'name': new FormControl(null, [Validators.required]),\r\n            'sets': new FormControl(createInitialSet()),\r\n            'total': new FormControl(this.roundTotalWeightPipe.transform(INITIAL_WEIGHT), [Validators.required]),\r\n            'disabledTooltip': new FormControl(true, [Validators.required]),\r\n        }));\r\n\r\n        if (clicked) {\r\n            this.newTrainingService.addNewExercise(this.getAlreadyUsedExercises() as string[]);\r\n            this.exerciseStateChanged$$.next();\r\n        }\r\n    }\r\n\r\n    deleteExercise(\r\n        indexExercise: number,\r\n        exerciseName: string,\r\n    ): void {\r\n        if (exerciseName) {\r\n            const dialogRef = this.dialog.open(DialogComponent, {\r\n                data: {\r\n                    isError: false,\r\n                    deleteExercise: {\r\n                        message$: this.translateService.stream('training.new_training.delete_exercise_prompt'),\r\n                        exerciseName: exerciseName,\r\n                    } as DeleteExerciseDialogData,\r\n                } as DialogData,\r\n            });\r\n            dialogRef.afterClosed().pipe(\r\n                switchMap((response: boolean) => {\r\n                    if (response) {\r\n                        return this.newTrainingService.currentTrainingChanged$.pipe(\r\n                            take(1),\r\n                            switchMap((currentTrainingState: Training) =>\r\n                                this.newTrainingService.deleteExercise(\r\n                                    currentTrainingState as Training,\r\n                                    exerciseName as string,\r\n                                ),\r\n                            ),\r\n                        );\r\n                    }\r\n                    else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n                finalize(() => {\r\n                    this.exerciseStateChanged$$.next();\r\n                    this.changeDetectorRef.markForCheck();\r\n                }),\r\n                takeUntil(this.unsubscribeService),\r\n            ).subscribe((data: [Training, Exercise[]]) => {\r\n                this.exerciseChanged = !this.exerciseChanged;\r\n                this.form.removeAt(indexExercise);\r\n                this.newTrainingService.pushToAvailableExercises(\r\n                    data[0] as Training,\r\n                    data[1] as Exercise[],\r\n                );\r\n            });\r\n        }\r\n        else {\r\n            this.newTrainingService.currentTrainingChanged$.pipe(\r\n                take(1),\r\n                switchMap((currentTrainingState: Training) =>\r\n                    this.newTrainingService.deleteExercise(\r\n                        currentTrainingState as Training,\r\n                        null,\r\n                        indexExercise,\r\n                    ),\r\n                ),\r\n                finalize(() => this.exerciseStateChanged$$.next()),\r\n                takeUntil(this.unsubscribeService),\r\n            ).subscribe(_ => this.form.removeAt(indexExercise));\r\n        }\r\n    }\r\n\r\n    onChangeSets($event: SetStateChanged): void {\r\n        of(null).pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe(_ => {\r\n            if ($event.isWeightLiftedValid\r\n                && $event.isRepsValid\r\n                && this.accessFormField('name', $event.indexExercise).value) {\r\n                    const trainingData: SetTrainingData = {\r\n                        exerciseName: this.accessFormField('name', $event.indexExercise).value as string,\r\n                        setNumber: $event.newSet.setNumber as number,\r\n                        weightLifted: $event.newSet.weightLifted as number,\r\n                        reps: $event.newSet.reps as number,\r\n                        total: $event.newTotal as number,\r\n                    };\r\n\r\n                    this.newTrainingService.setsChanged(trainingData as SetTrainingData);\r\n                    this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform($event.newTotal));\r\n            }\r\n            else {\r\n                this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform(0));\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteSet($event: Partial<SetStateChanged>): void {\r\n        this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform($event.newTotal));\r\n        this.newTrainingService.deleteSet(\r\n            $event.indexExercise as number,\r\n            $event.indexSet as number,\r\n            $event.newTotal as number,\r\n        );\r\n    }\r\n\r\n    getExercises(): AbstractControl[] {\r\n        return (this.form as FormArray).controls;\r\n    }\r\n\r\n    accessFormField(\r\n        formField: keyof FormSingleExerciseData,\r\n        indexExercise: number,\r\n    ): AbstractControl {\r\n        return this.form.at(indexExercise)?.get(formField);\r\n    }\r\n\r\n    onSetFormChange($event: SetFormValidationErrors[]): void {\r\n        this.setErrors = $event;\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    showAddExerciseTooltip(\r\n        currentTrainingStateLength: number,\r\n        allExercisesLength: number,\r\n    ): Observable<string> {\r\n        if (currentTrainingStateLength >= allExercisesLength) {\r\n            return this.translateService.stream('training.new_training.errors.no_more_exercises_available');\r\n        }\r\n        else {\r\n            if (this.getExercises().length > 0) {\r\n                if (!this.accessFormField('name', this.getExercises().length - 1)?.value) {\r\n                    return this.translateService.stream('training.new_training.errors.pick_current_exercise');\r\n                }\r\n                else if (this.setErrors.includes('setNotEntered') && !this.setErrors.includes('setNotValid')) {\r\n                    return this.translateService.stream('training.new_training.errors.set_required');\r\n                }\r\n                else if (this.setErrors.includes('setNotValid')) {\r\n                    return this.translateService.stream('training.new_training.errors.set_invalid');\r\n                }\r\n                else {\r\n                    return of('');\r\n                }\r\n            }\r\n            else {\r\n                return of('');\r\n            }\r\n        }\r\n    }\r\n\r\n    isAddingExercisesDisabled(\r\n        currentExercisesLength: number,\r\n        allExercisesLength: number,\r\n    ): boolean {\r\n        if (this.getExercises().length > 0) {\r\n            return (currentExercisesLength >= allExercisesLength)\r\n                || ((!this.accessFormField('name', this.getExercises().length - 1)?.value) && this.getExercises().length > 0)\r\n                || this.setErrors.includes('setNotEntered')\r\n                || this.setErrors.includes('setNotValid');\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.isSubmitted$$.next(true);\r\n        if (!this.form.valid || this.setErrors.length > 0) {\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n\r\n        this.gatherAllFormData().pipe(\r\n            switchMap((apiNewTraining: Training) => {\r\n                if (this.editMode) {\r\n                    return this.newTrainingService.updateTraining(\r\n                        apiNewTraining,\r\n                        this.editData.editTraining?._id,\r\n                    );\r\n                }\r\n                else {\r\n                    return this.newTrainingService.addTraining(apiNewTraining);\r\n                }\r\n            }),\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe((response: GeneralResponseData) => {\r\n            this.snackBar.open(this.translateService.instant(response.Message), null, {\r\n                duration: SNACK_BAR_DURATION.GENERAL,\r\n                panelClass: 'app__snackbar',\r\n            });\r\n        });\r\n    }\r\n\r\n    private gatherAllFormData(): Observable<Training> {\r\n        return this.newTrainingService.currentTrainingChanged$.pipe(\r\n            take(1),\r\n            map((currentTrainingState: Training) => {\r\n                const exerciseFormData: SingleExercise[] = [];\r\n\r\n                this.getExercises().forEach((_exercise: AbstractControl, indexExercise: number) => {\r\n                    const splittedTotal: string[] = (this.accessFormField('total', indexExercise).value as string).split(' ');\r\n                    exerciseFormData.push({\r\n                        exerciseName: this.accessFormField('name', indexExercise).value as string,\r\n                        sets: [],\r\n                        total: +(splittedTotal[0] as string),\r\n                        disabledTooltip: this.accessFormField('disabledTooltip', indexExercise).value as boolean,\r\n                        availableExercises: (currentTrainingState.exercise as SingleExercise[])[indexExercise]?.availableExercises || [],\r\n                    });\r\n\r\n                    const formSetData: Set[] = [];\r\n                    (this.accessFormField('sets', indexExercise).value as Set[]).forEach((set: Set) => {\r\n                        const apiSet: Set = {\r\n                            setNumber: +set.setNumber as number,\r\n                            weightLifted: +set.weightLifted as number,\r\n                            reps: +set.reps as number,\r\n                        };\r\n                        formSetData.push(apiSet);\r\n                    });\r\n                    exerciseFormData[indexExercise].sets = formSetData;\r\n                });\r\n\r\n                return {\r\n                    createdAt: this.editMode ? this.editData.editedDate : new Date(),\r\n                    exercise: exerciseFormData as SingleExercise[],\r\n                    bodyweight: this.bodyweight.value ? +this.bodyweight.value as number : null,\r\n                    editMode: this.editMode as boolean,\r\n                    userId: currentTrainingState.userId as string,\r\n                } as Training;\r\n            }),\r\n            takeUntil(this.unsubscribeService),\r\n        );\r\n    }\r\n\r\n    private setExerciseNameTooltip(\r\n        element: MatSelect,\r\n        indexExercise?: number,\r\n        currentTrainingState?: Training,\r\n    ): Observable<void> {\r\n        return of(null).pipe(\r\n            delay(0),\r\n            tap(_ => {\r\n                if (currentTrainingState) {\r\n                    currentTrainingState.exercise.forEach((value: SingleExercise, index: number) => {\r\n                        this.accessFormField('disabledTooltip', index)?.patchValue(value.disabledTooltip as boolean);\r\n                    });\r\n                }\r\n                else {\r\n                    const width: number = ((element._elementRef.nativeElement as HTMLParagraphElement).querySelector('.mat-select-value-text') as HTMLSpanElement)?.offsetWidth;\r\n                    if (width > MAX_EXERCISE_NAME_WIDTH) {\r\n                        this.accessFormField('disabledTooltip', indexExercise ? indexExercise : 0)?.patchValue(false);\r\n                    }\r\n                    else {\r\n                        this.accessFormField('disabledTooltip', indexExercise ? indexExercise : 0)?.patchValue(true);\r\n                    }\r\n                }\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        );\r\n    }\r\n\r\n    private getAlreadyUsedExercises(): string[] {\r\n        const alreadyUsedExercises: string[] = [];\r\n        for (const exercise of this.getExercises()) {\r\n            if (exercise.get('name').value) {\r\n                alreadyUsedExercises.push(exercise.get('name').value as string);\r\n            }\r\n        }\r\n        return alreadyUsedExercises as string[];\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb3JlLXRyYWluaW5nLWFjdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { captureException } from '@sentry/minimal';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { SNACK_BAR_DURATION } from '../constants/snack-bar-duration.const';\r\nimport { ErrorMessage } from '../models/common/interfaces/common.model';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private readonly snackBar: MatSnackBar,\r\n        private readonly translateService: TranslateService,\r\n    ){}\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        return next.handle(request).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                let errorMessage: string;\r\n                if(error instanceof HttpErrorResponse) {\r\n                    captureException(error);\r\n                    if(!window.navigator.onLine){\r\n                        errorMessage = this.translateService.instant('common.errors.internet_required');\r\n                    }\r\n                    else {\r\n                        if((error.error as ErrorMessage).statusCode === 404) {\r\n                            errorMessage = this.translateService.instant('common.errors.unknown_error');\r\n                        }\r\n                        else {\r\n                            if(Array.isArray((error.error as ErrorMessage).message)) {\r\n                                errorMessage = this.translateService.instant((error.error as ErrorMessage).message[0].substring(\r\n                                    (error.error as ErrorMessage).message[0].indexOf('@') + 1,\r\n                                    (error.error as ErrorMessage).message[0].length,\r\n                                ));\r\n                            }\r\n                            else {\r\n                                errorMessage = this.translateService.instant((error.error as ErrorMessage).message);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    errorMessage = this.translateService.instant('common.errors.unknown_error');\r\n                }\r\n                this.snackBar.open(errorMessage, null, {\r\n                    duration: SNACK_BAR_DURATION.ERROR,\r\n                    panelClass: 'app__snackbar-error',\r\n                });\r\n                return throwError(error as HttpErrorResponse);\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { endOfWeek, format, startOfWeek } from 'date-fns';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, take, takeUntil } from 'rxjs/operators';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { Language } from '../../../models/preferences.model';\r\nimport { QUERY_PARAMS_DATE_FORMAT } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { NavigationService } from '../../../services/shared/navigation.service';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport { NewTrainingService } from '../../../services/training/new-training.service';\r\n\r\n@Component({\r\n    selector: 'bl-side-nav',\r\n    templateUrl: './side-nav.component.html',\r\n    styleUrls: ['./side-nav.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n\r\n    @Output()\r\n    readonly closeSideNav: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    isAuthenticated$: Observable<boolean>;\r\n    loggedUserData$: Observable<AuthResponseData>;\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly navigationService: NavigationService,\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly unsubsService: UnsubscribeService,\r\n        private readonly router: Router,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.isAuthenticated$ = this.authService.isAuth$;\r\n        this.loggedUserData$ = this.authService.loggedUser$;\r\n    }\r\n\r\n    async onLogout(): Promise<void> {\r\n        this.newTrainingService.clearTrainingData();\r\n        await this.authService.logout();\r\n    }\r\n\r\n    async goToPastTrainings(): Promise<void> {\r\n        const startDate: Date = startOfWeek(new Date(), {\r\n            weekStartsOn: 1,\r\n        });\r\n        const endDate: Date = endOfWeek(new Date(), {\r\n            weekStartsOn: 1,\r\n        });\r\n        await this.router.navigate(['/training/past-trainings'], {\r\n            queryParams: {\r\n                startDate: format(startDate, QUERY_PARAMS_DATE_FORMAT),\r\n                endDate: format(endDate, QUERY_PARAMS_DATE_FORMAT),\r\n            },\r\n        });\r\n    }\r\n\r\n    changeLanguage(language: Language): void {\r\n        this.authService.loggedUser$.pipe(\r\n            take(1),\r\n            switchMap((userData: AuthResponseData) =>\r\n                this.navigationService.setPreferences(\r\n                    userData._id,\r\n                    language,\r\n                    'kg',\r\n                ),\r\n            ),\r\n            takeUntil(this.unsubsService),\r\n        ).subscribe(_ => this.onCloseSideNav());\r\n    }\r\n\r\n    onCloseSideNav(): void {\r\n        this.closeSideNav.emit();\r\n    }\r\n}\r\n","import { DateInterval } from \"../../training/past-trainings/past-trainings.model\";\r\nimport { Page } from \"../types/page.type\";\r\n\r\nexport interface Paginator<T> {\r\n    readonly Results?: T;\r\n    readonly Next?: PaginatorParams;\r\n    readonly Previous?: PaginatorParams;\r\n    readonly CurrentPage?: number;\r\n    readonly Size?: number;\r\n    readonly TotalCount?: number;\r\n    readonly TotalPages?: number;\r\n}\r\n\r\nexport interface PaginatorParams {\r\n    readonly Page: number;\r\n    readonly Size: number;\r\n}\r\n\r\nexport interface PaginatorChanged {\r\n    readonly Page: number;\r\n    readonly Size: number;\r\n    readonly IsSearch?: boolean;\r\n    readonly PageType?: Page;\r\n    readonly DateInterval?: DateInterval;\r\n    readonly EarliestTrainingDate?: Date;\r\n}\r\n\r\nexport const DEFAULT_SIZE = 3;\r\nexport const INITIAL_PAGE = 1;\r\n","import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotFoundResolverService } from './services/shared/not-found-resolver.service';\r\nimport { LoginComponent } from './views/auth/login/login.component';\r\nimport { SignupComponent } from './views/auth/signup/signup.component';\r\nimport { NotFoundComponent } from './views/shared/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '/login',\r\n        pathMatch: 'full',\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignupComponent,\r\n    },\r\n    {\r\n        path: 'training',\r\n        loadChildren: async () => import('./modules/training/training.module').then(module => module.TrainingModule),\r\n        canActivate: [AuthGuard],\r\n    },\r\n    {\r\n        path: 'not-found',\r\n        component: NotFoundComponent,\r\n        resolve: [NotFoundResolverService],\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '/not-found',\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatDialogModule,\r\n        MatProgressSpinnerModule,\r\n        MatNativeDateModule,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatTooltipModule,\r\n        MatSnackBarModule,\r\n        MatCardModule,\r\n        MatMenuModule,\r\n        MatRadioModule,\r\n    ],\r\n})\r\nexport class MaterialModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Training } from '../../../../models/training/new-training/new-training.model';\r\nimport { SingleExercise } from '../../../../models/training/shared/single-exercise.model';\r\n\r\n@Pipe({\r\n    name: 'showAllExercises',\r\n})\r\nexport class ShowAllExercisesPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    transform(training: Training): Observable<string> {\r\n        return this.translateService.stream(training.exercise?.map((x: SingleExercise) => x?.exerciseName) ?? []).pipe(\r\n            map((value: {[key: string]: string}) => {\r\n                let exercisesToConcat = '';\r\n                Object.values(value).forEach((exerciseName: string, index: number) => {\r\n                    exercisesToConcat += `${index+1}. ${exerciseName}\\n`;\r\n                });\r\n                return exercisesToConcat as string;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","export default \".wrapper {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 60px;\\n}\\n.wrapper .title {\\n  margin-bottom: 10px;\\n}\\n.wrapper .img {\\n  width: 150px;\\n  height: 150px;\\n  margin-top: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQUFKO0FBRUk7RUFDSSxtQkFBQTtBQUFSO0FBR0k7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0FBRFIiLCJmaWxlIjoibm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi53cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDYwcHg7XHJcblxyXG4gICAgLnRpdGxlIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5pbWcge1xyXG4gICAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgICBoZWlnaHQ6IDE1MHB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICB9XHJcbn1cclxuIl19 */\";","export default \".sidenav-container,\\n.sidenav-content,\\n.sidenav {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 250px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBOzs7RUFHSSxZQUFBO0FBQUo7O0FBR0E7RUFDSSxZQUFBO0FBQUoiLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5zaWRlbmF2LWNvbnRhaW5lcixcclxuLnNpZGVuYXYtY29udGVudCxcclxuLnNpZGVuYXYge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uc2lkZW5hdiB7XHJcbiAgICB3aWR0aDogMjUwcHg7XHJcbn1cclxuIl19 */\";","export default \".icon {\\n  color: #009688;\\n}\\n\\n.caption {\\n  display: inline-block;\\n  padding-left: 6px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.menu-item {\\n  display: flex;\\n  justify-content: flex-start;\\n  align-items: center;\\n  column-gap: 10px;\\n  width: 150px;\\n}\\n\\n.menu-item--text {\\n  font-size: 15px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.chosenLanguage {\\n  background: #009688;\\n}\\n\\n.chosenLanguage .sidenav__menu-item--text {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcc2lkZS1uYXYuY29tcG9uZW50LnNjc3MiLCIuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcc3R5bGVzXFxkZWZhdWx0LXBhbGxldHRlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxjQ0pTO0FERWI7O0FBS0E7RUFDSSxxQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0NDTE07QURHVjs7QUFLQTtFQUNJLGFBQUE7RUFDQSwyQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FBRko7O0FBSUk7RUFDSSxlQUFBO0VBQ0Esa0NDakJFO0FEZVY7O0FBTUE7RUFDSSxtQkMzQlM7QUR3QmI7O0FBS0k7RUFDSSxZQUFBO0FBSFIiLCJmaWxlIjoic2lkZS1uYXYuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi8uLi8uLi9zdHlsZXMvZGVmYXVsdC1wYWxsZXR0ZS5zY3NzJztcclxuXHJcblxyXG4uaWNvbiB7XHJcbiAgICBjb2xvcjogJGFybXktZ3JlZW47XHJcbn1cclxuXHJcbi5jYXB0aW9uIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBhZGRpbmctbGVmdDogNnB4O1xyXG4gICAgZm9udC1mYW1pbHk6ICRwb3BwaW5zO1xyXG59XHJcblxyXG4ubWVudS1pdGVtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgY29sdW1uLWdhcDogMTBweDtcclxuICAgIHdpZHRoOiAxNTBweDtcclxuXHJcbiAgICAmLS10ZXh0IHtcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRwb3BwaW5zO1xyXG4gICAgfVxyXG59XHJcblxyXG4uY2hvc2VuTGFuZ3VhZ2Uge1xyXG4gICAgYmFja2dyb3VuZDogJGFybXktZ3JlZW47XHJcblxyXG4gICAgLnNpZGVuYXZfX21lbnUtaXRlbS0tdGV4dCB7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuIiwiJGFybXktZ3JlZW46ICMwMDk2ODg7XHJcbiRsaWdodC1wZXJpd2lua2xlOiAjZGVkZmUxO1xyXG4kYmx1ZS1ncmV5OiAjOTM5NTllO1xyXG4kbGlnaHQtYmx1ZTogI2RlZjJmMTtcclxuJGRhcmstcmVkOiAjYzYyODI4O1xyXG4kcG9wcGluczogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4kZXJyb3ItZm9udC1zaXplOiAxMXB4O1xyXG4iXX0= */\";","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(_err => {\r\n      //TODO\r\n  });\r\n","\r\nexport interface Preferences {\r\n    userId?: string;\r\n    language?: Language;\r\n    weightFormat?: WeightFormat;\r\n    //TODO: Training: { showTrainingsBy?: 'week' | 'day' }\r\n}\r\n\r\nexport type Language = 'en' | 'hr';\r\n\r\nexport type WeightFormat = 'lbs' | 'kg';\r\n\r\nexport const DEFAULT_WEIGHT_FORMAT: WeightFormat = 'kg';\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}