{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","constructor","component","params","state","init","container","element","attachComponent","delegate","_destroy","assert","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","shallowEqualStringMap","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","registerInstance","ionNavWillLoad","createEvent","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","el","closest","mode","getIonMode","config","getBoolean","emit","componentDidLoad","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","disconnectedCallback","lifecycle","LIFECYCLE_WILL_UNLOAD","destroy","length","push","opts","done","insert","insertIndex","insertPages","insertComponents","queueTrns","insertStart","insertViews","pop","removeIndex","popTo","indexOrViewCtrl","ti","removeStart","removeCount","removeView","popToRoot","startIndex","setPages","setRouteId","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","Object","assign","animationBuilder","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","_a","_b","skipIfBusy","reject","router","canTransition","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","transition","_c","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalNumViews","console","warn","insertViewAt","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","setPageHidden","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","getTimeGivenProgression","progressEnd","render","h","getElement","watchers","style","navLink","routerDirection","routerAnimation","NavLink","onClick","Host"],"mappings":"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","file":"23.9059abbaa6e146c7ef4b.js","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-06cd27b1.js';\nimport { b as getIonMode, c as config } from './ionic-global-a049bcbf.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-154a53a5.js';\nimport { m as assert, s as shallowEqualStringMap } from './helpers-6e1e5b65.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-4a9ebc6d.js';\nimport { a as attachComponent } from './framework-delegate-0e9f0224.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  return shallowEqualStringMap(view.params, params);\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages.map(page => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      /**\n       * TODO Ionic 6:\n       * Consider switching to just using `undefined` here\n       * as well as on the public interfaces and on\n       * `NavComponentWithProps`. Previously `pages` was\n       * of type `any[]` so TypeScript did not catch this.\n       */\n      return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  }).filter(v => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nlet Nav = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.animationEnabled = true;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    /**\n     * If `true`, the nav should animate the transition of components.\n     */\n    this.animated = true;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    if (this.root !== undefined) {\n      if (!this.useRouter) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n  }\n  componentWillLoad() {\n    this.useRouter = document.querySelector('ion-router') !== null && this.el.closest('[no-router]') === null;\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back-b60369d0.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    // Release swipe back gesture and transition.\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.transInstr.length = 0;\n    this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.insert(-1, component, componentProps, opts, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.insertPages(insertIndex, [{ component, componentProps }], opts, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.removeIndex(-1, 1, opts, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const ti = {\n      removeStart: -1,\n      removeCount: -1,\n      opts\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      ti.removeView = indexOrViewCtrl;\n      ti.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      ti.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(ti, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.removeIndex(1, -1, opts, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    opts !== null && opts !== void 0 ? opts : (opts = {});\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /**\n   * Called by the router to update the view.\n   *\n   * @param id The component tag.\n   * @param params The component params.\n   * @param direction A direction hint.\n   * @param animation an AnimationBuilder.\n   *\n   * @return the status.\n   * @internal\n   */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element\n      });\n    }\n    let resolve;\n    const promise = new Promise(r => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: enteringEl => {\n        let mark;\n        const p = new Promise(r => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          }\n        });\n        return p;\n      }\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      // Look for a view matching the target in the view stack.\n      const viewController = this.views.find(v => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /**\n   * Called by <ion-router> to retrieve the current component.\n   *\n   * @internal\n   */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    if (active) {\n      return {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element\n      };\n    }\n    return undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  async getActive() {\n    return this.getActiveSync();\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  async getByIndex(index) {\n    return this.views[index];\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  async canGoBack(view) {\n    return this.canGoBackSync(view);\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  async getPrevious(view) {\n    return this.getPreviousSync(view);\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  /**\n   * Adds a navigation stack change to the queue and schedules it to run.\n   *\n   * @returns Whether the transition succeeds.\n   */\n  async queueTrns(ti, done) {\n    var _a, _b;\n    if (this.isTransitioning && ((_a = ti.opts) === null || _a === void 0 ? void 0 : _a.skipIfBusy)) {\n      return false;\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return false;\n        }\n        if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return false;\n        }\n      }\n    }\n    // Normalize empty\n    if (((_b = ti.insertViews) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  /**\n   * Consumes the next transition in the queue.\n   *\n   * @returns whether the transition is executed.\n   */\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now, executes the next instructions.\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  /** Executes all the transition instruction from the queue. */\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) && enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView === null || enteringView === void 0 ? void 0 : enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      let result;\n      if (requiresTransition) {\n        result = await this.transition(enteringView, leavingView, ti);\n      }\n      else {\n        // transition is not required, so we are already done!\n        // they're inserting/removing the views somewhere in the middle or\n        // beginning, so visually nothing needs to animate/transition\n        // resolve immediately because there's no animation that's happening\n        result = {\n          hasCompleted: true,\n          requiresTransition: false\n        };\n      }\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    var _a, _b;\n    var _c;\n    const viewsLength = this.views.length;\n    (_a = ti.opts) !== null && _a !== void 0 ? _a : (ti.opts = {});\n    (_b = (_c = ti.opts).delegate) !== null && _b !== void 0 ? _b : (_c.delegate = this.delegate);\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition =\n        ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  /**\n   * Returns the view that will be entered considering the transition instructions.\n   *\n   * @param ti The instructions.\n   * @param leavingView The view being left or undefined if none.\n   *\n   * @returns The view that will be entered, undefined if none.\n   */\n  getEnteringView(ti, leavingView) {\n    // The last inserted view will be entered when view are inserted.\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      return insertViews[insertViews.length - 1];\n    }\n    // When views are deleted, we will enter the last view that is not removed and not the view being left.\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  /**\n   * Adds and Removes the views from the navigation stack.\n   *\n   * @param enteringView The view being entered.\n   * @param leavingView The view being left.\n   * @param ti The instructions.\n   */\n  postViewInit(enteringView, leavingView, ti) {\n    var _a, _b, _c;\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    // Compute the views to remove.\n    const opts = ti.opts;\n    const { insertViews, removeStart, removeCount } = ti;\n    /** Records the view to destroy */\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = removeStart; i < removeStart + removeCount; i++) {\n        const view = this.views[i];\n        if (view && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      (_a = opts.direction) !== null && _a !== void 0 ? _a : (opts.direction = 'back');\n    }\n    const finalNumViews = this.views.length + ((_b = insertViews === null || insertViews === void 0 ? void 0 : insertViews.length) !== null && _b !== void 0 ? _b : 0) - (removeCount !== null && removeCount !== void 0 ? removeCount : 0);\n    assert(finalNumViews >= 0, 'final balance can not be negative');\n    if (finalNumViews === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // Insert the new views in the stack.\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        (_c = opts.direction) !== null && _c !== void 0 ? _c : (opts.direction = 'forward');\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation\n      ? (ani) => this.sbAni = ani\n      : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    const cleanupView = hasCompleted ? enteringView : leavingView;\n    if (cleanupView) {\n      this.cleanup(cleanupView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction\n    };\n  }\n  /**\n   * Inserts a view at the specified index.\n   *\n   * When the view already is in the stack it will be moved to the new position.\n   *\n   * @param view The view to insert.\n   * @param index The index where to insert the view.\n   */\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      assert(view.nav === this, 'view is not part of the nav');\n      // The view already in the stack, removes it.\n      views.splice(existingIndex, 1);\n      // and add it back at the requested index.\n      views.splice(index, 0, view);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      views.splice(index, 0, view);\n    }\n  }\n  /**\n   * Removes a view from the stack.\n   *\n   * @param view The view to remove.\n   */\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * DOM WRITE\n   */\n  cleanup(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.animationEnabled &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.pop({ direction: 'back', progressAnimation: true });\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.animationEnabled = false;\n      this.sbAni.onFinish(() => {\n        this.animationEnabled = true;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n  }\n  render() {\n    return (h(\"slot\", null));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nlet NavLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return (h(Host, { onClick: this.onClick }));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"sourceRoot":"webpack:///"}