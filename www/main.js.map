{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/constants/ion-focus-durations.const.ts","./src/app/constants/message-duration.const.ts","./src/app/directives/autofocus/autofocus.directive.ts","./src/app/directives/autofocus/autofocus.module.ts","./src/app/directives/pagination/pagination.directive.ts","./src/app/guards/auth.guard.ts","./src/app/helpers/control-value-accessor.helper.ts","./src/app/helpers/is-never-check.helper.ts","./src/app/helpers/training/past-trainings/map-past-trainings-dates.helper.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/interceptors/error.interceptor.ts","./src/app/models/common/interfaces/common.model.ts","./src/app/models/common/interfaces/paginator.model.ts","./src/app/models/common/types/modal-roles.type.ts","./src/app/models/preferences.model.ts","./src/app/models/training/new-training/empty-training.model.ts","./src/app/models/training/past-trainings/past-trainings.model.ts","./src/app/models/training/shared/set.model.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/navigation.module.ts","./src/app/modules/shared.module.ts","./src/app/pipes/pipes.module.ts","./src/app/pipes/training/new-training/new-training.pipe.ts","./src/app/pipes/training/new-training/round-total-weight/round-total-weight.module.ts","./src/app/pipes/training/new-training/round-total-weight/round-total-weight.pipe.ts","./src/app/pipes/training/past-trainings/map-training-actions.pipe.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.module.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.pipe.ts","./src/app/services/auth/auth.service.ts","./src/app/services/auth/login.service.ts","./src/app/services/auth/signup.service.ts","./src/app/services/errors/sentry.service.ts","./src/app/services/shared/loading-controller.service.ts","./src/app/services/shared/navigation.service.ts","./src/app/services/shared/not-found-resolver.service.ts","./src/app/services/shared/shared.service.ts","./src/app/services/shared/toast-controller.service.ts","./src/app/services/shared/unsubscribe.service.ts","./src/app/services/training/new-training.service.ts","./src/app/services/training/training-actions/delete-training-action.service.ts","./src/app/validators/auth/auth.validators.ts","./src/app/validators/shared/common.validators.ts","./src/app/validators/training/set.validators.ts","./src/app/validators/training/single-exercise.validators.ts","./src/app/views/auth/login/login.component.ts","./src/app/views/auth/signup/signup.component.ts","./src/app/views/navigation/side-nav/languages/languages.component.ts","./src/app/views/navigation/side-nav/side-nav.component.ts","./src/app/views/shared/datetime-picker/datetime-picker.component.ts","./src/app/views/shared/delete-exercise-dialog/delete-exercise-dialog.component.ts","./src/app/views/shared/not-found/not-found.component.ts","./src/app/views/shared/pagination/pagination.component.ts","./src/app/views/shared/training/sets/sets.component.ts","./src/app/views/shared/training/single-exercise/single-exercise.component.ts","./src/app/views/shared/training/total-weight/total-weight.component.ts","./src/app/views/shared/training/training-actions/delete-training-action/delete-training-action.component.ts","./src/app/views/shared/training/training-actions/more-training-action/more-training-action.component.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm|lazy|/^/.*/.entry/.js$/|include: /.entry/.js$/|exclude: /.system/.entry/.js$/|groupOptions: {}|namespace object"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotFoundResolverService } from './services/shared/not-found-resolver.service';\r\nimport { NotFoundComponent } from './views/shared/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '/auth/login',\r\n        pathMatch: 'full',\r\n    },\r\n    {\r\n        path: 'auth',\r\n        loadChildren: async () => import('./modules/auth/auth.module').then(module => module.AuthModule),\r\n    },\r\n    {\r\n        path: 'training',\r\n        loadChildren: async () => import('./modules/training/training.module').then(module => module.TrainingModule),\r\n        canLoad: [AuthGuard],\r\n    },\r\n    {\r\n        path: 'not-found',\r\n        component: NotFoundComponent,\r\n        resolve: [NotFoundResolverService],\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '/not-found',\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { AuthResponseData } from './models/auth/auth-data.model';\r\nimport { LocalStorageItems } from './models/common/interfaces/common.model';\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { SharedService } from './services/shared/shared.service';\r\nimport { UnsubscribeService } from './services/shared/unsubscribe.service';\r\nimport { NewTrainingService } from './services/training/new-training.service';\r\n\r\n@Component({\r\n    selector: 'bl-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly sharedService: SharedService,\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n    ) {\r\n        this.translateService.setDefaultLang('en');\r\n        const authData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n        this.translateService.use(authData?.Preferences?.LanguageCode || 'en')\r\n            .pipe(\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authService.autoLogin();\r\n        this.newTrainingService.keepTrainingState();\r\n        this.sharedService.keepQueryParams();\r\n    }\r\n}\r\n","import { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { init } from '@sentry/angular';\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\r\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\r\nimport { NavigationModule } from './modules/navigation.module';\r\nimport { SentryService } from './services/errors/sentry.service';\r\n\r\ninit({\r\n    dsn: 'https://b4903b17554c4e40bbada176e50e4719@o997027.ingest.sentry.io/5955490',\r\n});\r\n\r\nexport function httpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n    return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FlexLayoutModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        NavigationModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: httpLoaderFactory,\r\n                deps: [HttpClient],\r\n            },\r\n        }),\r\n        IonicModule.forRoot(),\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi: true,\r\n        }, {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ErrorInterceptor,\r\n            multi: true,\r\n        }, {\r\n            provide: ErrorHandler,\r\n            useClass: SentryService,\r\n        },\r\n        {\r\n            provide: RouteReuseStrategy,\r\n            useClass: IonicRouteStrategy,\r\n        },\r\n        HttpClient,\r\n        AuthGuard,\r\n\r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","\r\nexport enum IonFocusDurations {\r\n    LOGIN = 350,\r\n    SIGNUP = 500,\r\n}\r\n","\r\nexport const MESSAGE_DURATION = Object.freeze({\r\n    GENERAL: 3000,\r\n    ERROR: 5000,\r\n} as const);\r\n","import { AfterViewInit, Directive, Input } from '@angular/core';\r\nimport { IonInput } from '@ionic/angular';\r\n\r\n@Directive({ selector: '[ionFocus]' })\r\nexport class AutofocusDirective implements AfterViewInit {\r\n\r\n    @Input('duration')\r\n    duration = 350;\r\n\r\n    private firstTime = true;\r\n\r\n    constructor(\r\n        private readonly ionInput: IonInput,\r\n    ) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.firstTime) {\r\n            setTimeout(() => {\r\n                this.ionInput?.setFocus();\r\n                this.firstTime = false;\r\n            }, this.duration);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AutofocusDirective } from './autofocus.directive';\r\n\r\n@NgModule({\r\n    declarations: [AutofocusDirective],\r\n    exports: [AutofocusDirective],\r\n})\r\nexport class AutofocusModule { }\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({ selector: 'bl-pagination' })\r\nexport class PaginationDirective {\r\n\r\n    constructor(\r\n        readonly elementRef: ElementRef<HTMLElement>,\r\n        readonly renderer2: Renderer2,\r\n    ) {\r\n        this.renderer2.addClass(this.elementRef.nativeElement as HTMLElement, 'bl-pagination');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanLoad, Route, Router, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanLoad {\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly router: Router,\r\n    ) { }\r\n\r\n    canLoad(_route: Route): Observable<boolean | UrlTree> {\r\n        return this.authService.isAuth$.pipe(\r\n            take(1),\r\n            map((isAuth: boolean) => {\r\n                if (!isAuth) {\r\n                    return this.router.createUrlTree(['/auth/login']);\r\n                }\r\n                return true;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { forwardRef, InjectionToken, Type } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { SetsComponent } from '../views/shared/training/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../views/shared/training/single-exercise/single-exercise.component';\r\nimport { TotalWeightComponent } from '../views/shared/training/total-weight/total-weight.component';\r\n\r\nexport type Components = SingleExerciseComponent | SetsComponent | TotalWeightComponent;\r\n\r\nexport function getControlValueAccessor(component: Type<Components>): ControlValueAccessorType {\r\n    return {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => component),\r\n        multi: true,\r\n    };\r\n}\r\n\r\ntype ControlValueAccessorType = {\r\n    provide: InjectionToken<readonly ControlValueAccessor[]>;\r\n    useExisting: Type<Components>;\r\n    multi: boolean;\r\n};\r\n","\r\nexport function isNeverCheck(_x: never): never {\r\n    throw new Error('Didn\\'t expect to get here');\r\n}\r\n","import { startOfDay } from 'date-fns';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { DateInterval, PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\n\r\nexport function mapDateInterval(response: StreamData<Paginator<PastTrainings>>): StreamData<Paginator<PastTrainings>> {\r\n    return {\r\n        ...response,\r\n        Value: {\r\n            ...response.Value,\r\n            Results: {\r\n                ...response.Value.Results,\r\n                Dates: {\r\n                    StartDate: response?.Value?.Results?.Dates?.StartDate ? startOfDay(new Date(response.Value?.Results?.Dates?.StartDate)) : undefined,\r\n                    EndDate: response?.Value?.Results?.Dates?.EndDate ? startOfDay(new Date(response.Value?.Results?.Dates?.EndDate)) : undefined,\r\n                } as DateInterval,\r\n            } as PastTrainings,\r\n        } as Paginator<PastTrainings>,\r\n    };\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        const token = this.authService.getToken();\r\n        const authRequest: HttpRequest<unknown> = request.clone({ headers: request.headers.set('authorization', 'Bearer ' + token) });\r\n        return next.handle(authRequest);\r\n    }\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { captureException } from '@sentry/minimal';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { MESSAGE_DURATION } from '../constants/message-duration.const';\r\nimport { ErrorMessage } from '../models/common/interfaces/common.model';\r\nimport { ToastControllerService } from '../services/shared/toast-controller.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private readonly toastControllerService: ToastControllerService,\r\n        private readonly translateService: TranslateService,\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        return next.handle(request).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                let errorMessage: string;\r\n                if (error instanceof HttpErrorResponse) {\r\n                    captureException(error);\r\n                    //TODO: fix for Ionic\r\n                    if (!window.navigator.onLine) {\r\n                        errorMessage = this.translateService.instant('common.errors.internet_required');\r\n                    }\r\n                    else {\r\n                        if ((error.error as ErrorMessage).statusCode === 404) {\r\n                            errorMessage = this.translateService.instant('common.errors.unknown_error');\r\n                        }\r\n                        else {\r\n                            if (Array.isArray((error.error as ErrorMessage).message)) {\r\n                                errorMessage = this.translateService.instant((error.error as ErrorMessage).message[0].substring(\r\n                                    (error.error as ErrorMessage).message[0].indexOf('@') + 1,\r\n                                    (error.error as ErrorMessage).message[0].length,\r\n                                ));\r\n                            }\r\n                            else {\r\n                                errorMessage = this.translateService.instant((error.error as ErrorMessage).message);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    errorMessage = this.translateService.instant('common.errors.unknown_error');\r\n                }\r\n                void this.toastControllerService.displayToast({\r\n                    message: errorMessage,\r\n                    duration: MESSAGE_DURATION.ERROR,\r\n                    color: 'danger',\r\n                });\r\n                return throwError(error);\r\n            }),\r\n        );\r\n    }\r\n}\r\n","\r\nexport interface ErrorMessage {\r\n    readonly message: string;\r\n    readonly statusCode?: number;\r\n}\r\n\r\nexport interface StreamData<T> {\r\n    IsLoading: boolean;\r\n    IsError: boolean;\r\n    Value?: T;\r\n}\r\n\r\nexport enum LocalStorageItems {\r\n    TRAINING_STATE = 'trainingState',\r\n    USER_DATA = 'userData',\r\n    ALL_EXERCISES = 'allExercises',\r\n    QUERY_PARAMS = 'queryParams',\r\n}\r\n","import { DateInterval } from '../../training/past-trainings/past-trainings.model';\r\nimport { Page } from '../types/page.type';\r\n\r\nexport interface Paginator<T> {\r\n    readonly Results?: T;\r\n    readonly Next?: PaginatorParams;\r\n    readonly Previous?: PaginatorParams;\r\n    readonly CurrentPage?: number;\r\n    readonly Size?: number;\r\n    readonly TotalCount?: number;\r\n    readonly TotalPages?: number;\r\n}\r\n\r\nexport interface PaginatorParams {\r\n    readonly Page: number;\r\n    readonly Size: number;\r\n}\r\n\r\nexport interface PaginatorChanged {\r\n    readonly Page: number;\r\n    readonly Size: number;\r\n    readonly IsSearch?: boolean;\r\n    readonly PageType?: Page;\r\n    readonly DateInterval?: DateInterval;\r\n    readonly EarliestTrainingDate?: Date;\r\n}\r\n\r\nexport const DEFAULT_SIZE = 3;\r\nexport const INITIAL_PAGE = 1;\r\n","\r\nexport enum DialogRoles {\r\n    CANCEL = 'CANCEL',\r\n    DELETE_EXERCISE = 'DELETE_EXERCISE',\r\n    DELETE_TRAINING = 'DELETE_TRAINING',\r\n    SELECT_DATE = 'SELECT_DATE',\r\n    REORDER_EXERCISES = 'REORDER_EXERCISES',\r\n}\r\n","\r\nexport interface Preferences {\r\n    UserId?: string;\r\n    LanguageCode?: LanguageCode;\r\n    WeightFormat?: WeightFormat;\r\n    //TODO: Training: { showTrainingsBy?: 'week' | 'day' }\r\n}\r\n\r\nexport type LanguageCode = 'en' | 'hr';\r\n\r\nexport type WeightFormat = 'lbs' | 'kg';\r\n\r\nexport const DEFAULT_WEIGHT_FORMAT: WeightFormat = 'kg';\r\n","import { Exercise } from '../exercise.model';\r\nimport { SingleExercise } from '../shared/single-exercise.model';\r\nimport { Training } from './training.model';\r\n\r\nexport type EditNewTrainingData = {\r\n    editedDate?: Date;\r\n    editTraining?: Training;\r\n};\r\n\r\nexport const EMPTY_TRAINING_EDIT: EditNewTrainingData = {\r\n    editedDate: null,\r\n    editTraining: null,\r\n};\r\n\r\nexport const EMPTY_TRAINING: Training = {\r\n    exercises: [],\r\n    _id: '',\r\n    bodyweight: null,\r\n    editMode: false,\r\n    userId: null,\r\n};\r\n\r\nexport const createEmptyExercise = (exercises: Exercise[]): SingleExercise =>\r\n    ({\r\n        exerciseName: null,\r\n        sets: [],\r\n        total: null,\r\n        disabledTooltip: true,\r\n        availableExercises: [ ...exercises ],\r\n    });\r\n","import { Training } from '../new-training/training.model';\r\n\r\nexport interface PastTrainings {\r\n    readonly Trainings: Training[];\r\n    readonly Dates: DateInterval;\r\n    readonly IsPreviousWeek?: boolean;\r\n    readonly IsNextWeek?: boolean;\r\n    readonly EarliestTrainingDate?: Date;\r\n    readonly Message?: string;\r\n}\r\n\r\nexport interface DateInterval {\r\n    readonly StartDate: Date;\r\n    readonly EndDate: Date;\r\n}\r\n\r\nexport interface PastTrainingsQueryParams {\r\n    readonly startDate: string;\r\n    readonly endDate: string;\r\n    readonly search?: string;\r\n    readonly page?: string;\r\n    readonly size?: string;\r\n    readonly showBy?: PeriodFilterType;\r\n}\r\n\r\nexport const QUERY_PARAMS_DATE_FORMAT = 'dd-MM-yyyy';\r\nexport const TEMPLATE_DATE_FORMAT = 'dd.MM.yyyy';\r\n\r\nexport type PeriodFilterType = 'week' | 'day';\r\n\r\nexport interface PastTrainingsFilterType {\r\n    periodFilter?: PeriodFilterType;\r\n    //TODO: add more types\r\n}\r\n","\r\nexport interface Set {\r\n    setNumber: number;\r\n    weightLifted: number;\r\n    reps: number;\r\n    _id?: string;\r\n}\r\n\r\nexport interface SetStateChanged {\r\n    indexExercise: number;\r\n    indexSet: number;\r\n    isWeightLiftedValid?: boolean;\r\n    isRepsValid?: boolean;\r\n    newTotal?: number;\r\n    newSet?: Set;\r\n}\r\n\r\nexport interface SetTrainingData {\r\n    exerciseName: string;\r\n    setNumber: number;\r\n    weightLifted: number;\r\n    reps: number;\r\n    total: number;\r\n}\r\n\r\nexport function createInitialSet(): Set[] {\r\n    const sets: Set[] = [];\r\n    sets.push({\r\n        setNumber: 1,\r\n        weightLifted: null,\r\n        reps: null,\r\n    } as Set);\r\n    return sets;\r\n}\r\n\r\nexport type SetFormValidationErrors =\r\n    'setNotFilled' |\r\n    'setNotEntered' |\r\n    'setNotValid' |\r\n    'repsRequired' |\r\n    'weightLiftedRequired' |\r\n    'min' |\r\n    'max' |\r\n    'pattern' |\r\n    'onlyNumbers';\r\n\r\nexport type FormSetData = {\r\n    setNumber?: number;\r\n    weightLifted?: number;\r\n    reps?: number;\r\n};\r\n\r\nexport type SetConstituent = 'weightLifted' | 'reps';\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from 'src/app/views/auth/login/login.component';\r\nimport { SignupComponent } from 'src/app/views/auth/signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignupComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LoginService } from '../../services/auth/login.service';\r\nimport { SignupService } from '../../services/auth/signup.service';\r\nimport { LoginComponent } from '../../views/auth/login/login.component';\r\nimport { SignupComponent } from '../../views/auth/signup/signup.component';\r\nimport { SharedModule } from '../shared.module';\r\nimport { AutofocusModule } from '../../directives/autofocus/autofocus.module';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\nconst COMPONENTS = [\r\n    SignupComponent,\r\n    LoginComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    IonicModule,\r\n];\r\n\r\nconst MY_IMPORTS = [\r\n    SharedModule,\r\n    AuthRoutingModule,\r\n    AutofocusModule,\r\n];\r\n\r\nconst SERVICES = [\r\n    SignupService,\r\n    LoginService,\r\n];\r\n\r\n@NgModule({\r\n    declarations: [ ...COMPONENTS ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...MY_IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n    providers: [ ...SERVICES ],\r\n})\r\nexport class AuthModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LanguagesComponent } from '../views/navigation/side-nav/languages/languages.component';\r\nimport { SideNavComponent } from '../views/navigation/side-nav/side-nav.component';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\nconst COMPONENTS = [\r\n    SideNavComponent,\r\n    LanguagesComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    TranslateModule,\r\n    FlexLayoutModule,\r\n    RouterModule,\r\n    IonicModule,\r\n];\r\n\r\nconst IMPORTS = [AuthModule];\r\n\r\n@NgModule({\r\n    declarations: [ ...COMPONENTS ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n})\r\nexport class NavigationModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { RoundTotalWeightModule } from '../pipes/training/new-training/round-total-weight/round-total-weight.module';\r\nimport { ShowAllExercisesModule } from '../pipes/training/past-trainings/show-all-exercises/show-all-exercises.module';\r\nimport { NotFoundResolverService } from '../services/shared/not-found-resolver.service';\r\nimport { DeleteTrainingActionService } from '../services/training/training-actions/delete-training-action.service';\r\nimport { DeleteExerciseDialogComponent } from '../views/shared/delete-exercise-dialog/delete-exercise-dialog.component';\r\nimport { NotFoundComponent } from '../views/shared/not-found/not-found.component';\r\nimport { SetsComponent } from '../views/shared/training/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../views/shared/training/single-exercise/single-exercise.component';\r\nimport { TotalWeightComponent } from '../views/shared/training/total-weight/total-weight.component';\r\nimport { DeleteTrainingActionComponent } from '../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\nimport { MoreTrainingActionComponent } from '../views/shared/training/training-actions/more-training-action/more-training-action.component';\r\nimport { PaginationComponent } from '../views/shared/pagination/pagination.component';\r\nimport { PaginationDirective } from '../directives/pagination/pagination.directive';\r\nimport { DateTimePickerComponent } from '../views/shared/datetime-picker/datetime-picker.component';\r\n\r\nconst DIRECTIVES = [PaginationDirective];\r\n\r\nconst COMPONENTS = [\r\n    DeleteExerciseDialogComponent,\r\n    SingleExerciseComponent,\r\n    SetsComponent,\r\n    TotalWeightComponent,\r\n    NotFoundComponent,\r\n    PaginationComponent,\r\n    DateTimePickerComponent,\r\n];\r\n\r\nconst ACTION_COMPONENTS = [\r\n    DeleteTrainingActionComponent,\r\n    MoreTrainingActionComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    IonicModule,\r\n];\r\n\r\nconst IMPORTS = [\r\n    ShowAllExercisesModule,\r\n    PipesModule,\r\n    RoundTotalWeightModule,\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ...COMPONENTS,\r\n        ...DIRECTIVES,\r\n        ...ACTION_COMPONENTS,\r\n    ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n    entryComponents: [\r\n        DeleteExerciseDialogComponent,\r\n        DeleteTrainingActionComponent,\r\n        DateTimePickerComponent,\r\n    ],\r\n    providers: [\r\n        NotFoundResolverService,\r\n        DeleteTrainingActionService,\r\n    ],\r\n})\r\nexport class SharedModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { NewTrainingPipe } from './training/new-training/new-training.pipe';\r\nimport { MapTrainingItemActionsPipe } from './training/past-trainings/map-training-actions.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NewTrainingPipe,\r\n        MapTrainingItemActionsPipe,\r\n    ],\r\n    exports: [\r\n        NewTrainingPipe,\r\n        MapTrainingItemActionsPipe,\r\n    ],\r\n})\r\nexport class PipesModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport { Training } from '../../../models/training/new-training/training.model';\r\nimport { NewTrainingService } from '../../../services/training/new-training.service';\r\n\r\n@Pipe({ name: 'newTraining' })\r\nexport class NewTrainingPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private readonly newTrainingService: NewTrainingService,\r\n    ) { }\r\n\r\n    transform(\r\n        _value: Observable<Exercise[]>,\r\n        index: number,\r\n        _exerciseChanged: boolean,\r\n    ): Observable<Exercise[]> {\r\n        return this.newTrainingService.currentTrainingChanged$\r\n            .pipe(\r\n                take(1),\r\n                map((training: Training) => training.exercises[index]?.availableExercises ?? []),\r\n        );\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RoundTotalWeightPipe } from './round-total-weight.pipe';\r\n\r\n@NgModule({\r\n    declarations: [RoundTotalWeightPipe],\r\n    exports: [RoundTotalWeightPipe],\r\n    providers: [RoundTotalWeightPipe],\r\n})\r\nexport class RoundTotalWeightModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DEFAULT_WEIGHT_FORMAT } from '../../../../models/preferences.model';\r\n\r\n@Pipe({\r\n    name: 'roundTotalWeight',\r\n})\r\nexport class RoundTotalWeightPipe implements PipeTransform {\r\n\r\n    transform(totalWeight: number): string {\r\n        return totalWeight ? `${(Math.round(totalWeight * 100) / 100).toString()} ${DEFAULT_WEIGHT_FORMAT}` : `0 ${DEFAULT_WEIGHT_FORMAT}`;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TrainingItemActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\n\r\ninterface TrainingItemActionsProperties {\r\n    icon: string;\r\n    tooltip: string;\r\n}\r\n\r\n@Pipe({ name: 'mapTrainingItemActions' })\r\n\r\nexport class MapTrainingItemActionsPipe implements PipeTransform {\r\n\r\n    private readonly actionToIcon: { [key: string]: TrainingItemActionsProperties } = {\r\n        'delete': {\r\n            icon: 'trash-sharp',\r\n            tooltip: 'training.past_trainings.buttons.delete_training',\r\n        },\r\n        'more': {\r\n            icon: 'ellipsis-vertical-sharp',\r\n            tooltip: 'TODO',\r\n        },\r\n    };\r\n\r\n    transform(\r\n        action: TrainingItemActions,\r\n        purpose: string,\r\n    ): string {\r\n        if (purpose === 'icon') {\r\n            return this.actionToIcon[action].icon as string;\r\n        }\r\n        else {\r\n            return this.actionToIcon[action].tooltip as string;\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ShowAllExercisesPipe } from './show-all-exercises.pipe';\r\n\r\n@NgModule({\r\n    declarations: [ShowAllExercisesPipe],\r\n    exports: [ShowAllExercisesPipe],\r\n})\r\nexport class ShowAllExercisesModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Training } from '../../../../models/training/new-training/training.model';\r\nimport { SingleExercise } from '../../../../models/training/shared/single-exercise.model';\r\n\r\n@Pipe({\r\n    name: 'showAllExercises',\r\n})\r\nexport class ShowAllExercisesPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    transform(training: Training): Observable<string> {\r\n        return this.translateService.stream(training.exercises?.map((x: SingleExercise) => x?.exerciseName) ?? []).pipe(\r\n            map((value: {[key: string]: string}) => {\r\n                let exercisesToConcat = '';\r\n                Object.values(value).forEach((exerciseName: string, index: number) => {\r\n                    exercisesToConcat += `${index+1}. ${exerciseName}\\n`;\r\n                });\r\n                return exercisesToConcat as string;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { mergeMap, switchMap, tap } from 'rxjs/operators';\r\nimport { Preferences } from 'src/app/models/preferences.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Login, Signup } from '../../models/auth/auth-data.model';\r\nimport { AuthResponseData } from '../../models/auth/auth-data.model';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\nimport { LanguageCode, WeightFormat } from '../../models/preferences.model';\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n    private readonly loggedUser$$: BehaviorSubject<AuthResponseData> = new BehaviorSubject<AuthResponseData>(null);\r\n    readonly loggedUser$: Observable<AuthResponseData> = this.loggedUser$$.asObservable();\r\n\r\n    private readonly isAuth$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    readonly isAuth$: Observable<boolean> = this.isAuth$$.asObservable();\r\n\r\n    private tokenTimer: NodeJS.Timeout;\r\n    private token: string;\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly router: Router,\r\n        private readonly translateService: TranslateService,\r\n    ) { }\r\n\r\n    getToken(): string {\r\n        return this.token;\r\n    }\r\n\r\n    updateUserData(preferences?: Preferences): void {\r\n        //TODO: Ovdje treba pokupiti podatke iz Subjecta, a ne LS\r\n        const userData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n        const updatedUserData: AuthResponseData = {\r\n            ...userData,\r\n            Preferences: {\r\n                UserId: preferences.UserId,\r\n                LanguageCode: preferences.LanguageCode,\r\n                WeightFormat: 'kg',\r\n            } as Preferences,\r\n        };\r\n        this.loggedUser$$.next({ ...updatedUserData });\r\n        localStorage.setItem(LocalStorageItems.USER_DATA, JSON.stringify({ ...updatedUserData }));\r\n    }\r\n\r\n    signup(\r\n        language: LanguageCode,\r\n        weightFormat: WeightFormat,\r\n        email: string,\r\n        password: string,\r\n        confirmPassword: string,\r\n    ): Observable<AuthResponseData> {\r\n        const signupData: Signup = {\r\n            Email: email,\r\n            Password: password,\r\n            ConfirmPassword: confirmPassword,\r\n        };\r\n        const preferences: Partial<Preferences> = {\r\n            LanguageCode: language,\r\n            WeightFormat: weightFormat,\r\n        };\r\n        return this.http.post<AuthResponseData>(environment.BACKEND + '/auth/signup', {\r\n            signupData: signupData,\r\n            preferences: preferences,\r\n        });\r\n    }\r\n\r\n    login(\r\n        email: string,\r\n        password: string,\r\n    ): Observable<AuthResponseData> {\r\n        const authData: Login = {\r\n            Email: email,\r\n            Password: password,\r\n        };\r\n        return this.http.post<AuthResponseData>(environment.BACKEND + '/auth/login', authData).pipe(\r\n            tap(async (response: AuthResponseData) => {\r\n                if (response.Token) {\r\n                    this.loggedUser$$.next(response);\r\n                    this.isAuth$$.next(true);\r\n                    this.token = response.Token as string;\r\n                    const expiresInDuration: number = response.ExpiresIn as number;\r\n                    this.setAuthTimer(expiresInDuration);\r\n                    const now: Date = new Date();\r\n                    const expirationDate: Date = new Date(now.getTime() + expiresInDuration * 1000);\r\n                    this.saveLS(\r\n                        this.token,\r\n                        expirationDate,\r\n                        response._id,\r\n                        response.Preferences,\r\n                    );\r\n                    await this.router.navigate(['/training/new-training']);\r\n                }\r\n            }),\r\n            mergeMap((response: AuthResponseData) =>\r\n                this.translateService.use(response.Preferences.LanguageCode)\r\n                    .pipe(\r\n                        switchMap(_ => of(response)),\r\n                    ),\r\n            ),\r\n        );\r\n    }\r\n\r\n    autoLogin(): void {\r\n        if (JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA))) {\r\n            const userData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n            if (!userData.Token || !userData.ExpirationDate) {\r\n                return;\r\n            }\r\n            const authData: AuthResponseData = {\r\n                Token: userData.Token,\r\n                ExpirationDate: new Date(userData.ExpirationDate),\r\n                _id: userData._id,\r\n                Preferences: userData.Preferences,\r\n            };\r\n            const now: Date = new Date();\r\n            const expiresIn: number = authData.ExpirationDate.getTime() - now.getTime();\r\n            if (expiresIn > 0) {\r\n                this.token = userData.Token;\r\n                this.setAuthTimer(expiresIn / 1000);\r\n                this.isAuth$$.next(true);\r\n                this.loggedUser$$.next(authData);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(): Promise<void> {\r\n        this.token = null;\r\n        this.isAuth$$.next(false);\r\n        clearTimeout(this.tokenTimer);\r\n        this.clearLS();\r\n        await this.router.navigate(['/auth/login']);\r\n    }\r\n\r\n    private setAuthTimer(duration: number): void {\r\n        this.tokenTimer = setTimeout(async () => {\r\n            await this.logout();\r\n        }, duration * 1000);\r\n    }\r\n\r\n    private saveLS(\r\n        token: string,\r\n        expirationDate: Date,\r\n        userId: string,\r\n        preferences: Preferences,\r\n    ): void {\r\n        const userData: AuthResponseData = {\r\n            Token: token,\r\n            ExpirationDate: expirationDate,\r\n            _id: userId,\r\n            Preferences: preferences,\r\n        };\r\n        localStorage.setItem(LocalStorageItems.USER_DATA, JSON.stringify(userData));\r\n    }\r\n\r\n    private clearLS(): void {\r\n        localStorage.removeItem(LocalStorageItems.USER_DATA);\r\n        localStorage.removeItem(LocalStorageItems.TRAINING_STATE);\r\n        localStorage.removeItem(LocalStorageItems.ALL_EXERCISES);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n    ) { }\r\n\r\n    passwordFitsEmail(\r\n        email: string,\r\n        password: string,\r\n    ): Observable<boolean> {\r\n        const params = `?Email=${email}&Password=${password}`;\r\n        return this.http.get<boolean>(environment.BACKEND + '/auth/check_pass' + params);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SignupService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n    ) { }\r\n\r\n    getEmails(email: string): Observable<boolean> {\r\n        const params = `?email=${email}`;\r\n        return this.http.get<boolean>(environment.BACKEND + '/auth/get_all_emails' + params);\r\n    }\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { captureException } from '@sentry/minimal';\r\n\r\n@Injectable()\r\nexport class SentryService implements ErrorHandler {\r\n\r\n    handleError(error: unknown): void {\r\n        captureException(error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController, LoadingOptions } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadingControllerService {\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly loadingController: LoadingController,\r\n    ) { }\r\n\r\n    async displayLoader(options: LoadingOptions): Promise<void> {\r\n        const loading = await this.loadingController.create({\r\n            message: this.translateService.instant(options.message as string),\r\n            keyboardClose: true,\r\n        });\r\n        await loading.present();\r\n    }\r\n\r\n    async dismissLoader(): Promise<void> {\r\n        await this.loadingController.dismiss();\r\n    }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MESSAGE_DURATION } from '../../constants/message-duration.const';\r\nimport { GeneralResponseData } from '../../models/general-response.model';\r\nimport { Preferences, WeightFormat } from '../../models/preferences.model';\r\nimport { LanguageCode } from '../../models/preferences.model';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { ToastControllerService } from './toast-controller.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NavigationService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly authService: AuthService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly toastControllerService: ToastControllerService,\r\n    ) { }\r\n\r\n    setPreferences(\r\n        userId: string,\r\n        language: LanguageCode,\r\n        weightFormat: WeightFormat,\r\n    ): Observable<GeneralResponseData> {\r\n        const preferences: Partial<Preferences> = {\r\n            LanguageCode: language,\r\n            WeightFormat: weightFormat,\r\n        };\r\n        return this.http.put<GeneralResponseData>(environment.BACKEND + `/preferences/${userId}`, { preferences: preferences }).pipe(\r\n            tap(_ => {\r\n                this.authService.updateUserData({\r\n                    UserId: userId,\r\n                    LanguageCode: language,\r\n                    WeightFormat: weightFormat,\r\n                } as Preferences);\r\n            }),\r\n            switchMap((response: GeneralResponseData) =>\r\n                this.translateService.use(language).pipe(\r\n                    tap(async _ => {\r\n                        await this.toastControllerService.displayToast({\r\n                            message: this.translateService.instant(response.Message),\r\n                            duration: MESSAGE_DURATION.GENERAL,\r\n                            color: 'primary',\r\n                        });\r\n                    }),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\n\r\n@Injectable()\r\nexport class NotFoundResolverService implements Resolve<void> {\r\n\r\n    resolve(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): void {\r\n        localStorage.removeItem(LocalStorageItems.TRAINING_STATE);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { StreamData } from '../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings, PastTrainingsQueryParams } from '../../models/training/past-trainings/past-trainings.model';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SharedService {\r\n\r\n    readonly editingTraining$$: Subject<boolean> = new Subject<boolean>();\r\n\r\n    readonly pastTrainingsQueryParams$$: BehaviorSubject<PastTrainingsQueryParams> = new BehaviorSubject<PastTrainingsQueryParams>(null);\r\n\r\n    readonly deletedTraining$$: Subject<StreamData<Paginator<PastTrainings>>> = new Subject<StreamData<Paginator<PastTrainings>>>();\r\n\r\n    keepQueryParams(): void {\r\n        const queryParams = JSON.parse(localStorage.getItem(LocalStorageItems.QUERY_PARAMS));\r\n        if (!queryParams) {\r\n            return;\r\n        }\r\n        this.pastTrainingsQueryParams$$.next(queryParams);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController, ToastOptions } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastControllerService {\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly toastController: ToastController,\r\n    ) { }\r\n\r\n    async displayToast(options: ToastOptions): Promise<void> {\r\n        const toast = await this.toastController.create({\r\n            message: this.translateService.instant(options?.message as string),\r\n            duration: options.duration,\r\n            color: options.color,\r\n        });\r\n        await toast.present();\r\n    }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UnsubscribeService extends Subject<void> implements OnDestroy {\r\n\r\n    ngOnDestroy(): void {\r\n        this.next();\r\n        this.complete();\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { AuthResponseData } from 'src/app/models/auth/auth-data.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { StreamData } from '../../models/common/interfaces/common.model';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\nimport { GeneralResponseData } from '../../models/general-response.model';\r\nimport { Exercise } from '../../models/training/exercise.model';\r\nimport { createEmptyExercise, EMPTY_TRAINING } from '../../models/training/new-training/empty-training.model';\r\nimport { Training } from '../../models/training/new-training/training.model';\r\nimport { SetTrainingData } from '../../models/training/shared/set.model';\r\nimport { Set } from '../../models/training/shared/set.model';\r\nimport { SingleExercise } from '../../models/training/shared/single-exercise.model';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NewTrainingService {\r\n\r\n    private readonly _allExercisesChanged$$: BehaviorSubject<Exercise[]> = new BehaviorSubject<Exercise[]>([]);\r\n    readonly allExercisesChanged$: Observable<Exercise[]> = this._allExercisesChanged$$.asObservable();\r\n\r\n    private readonly _currentTrainingChanged$$: BehaviorSubject<Training> = new BehaviorSubject<Training>(EMPTY_TRAINING);\r\n    readonly currentTrainingChanged$: Observable<Training> = this._currentTrainingChanged$$.asObservable();\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly authService: AuthService,\r\n    ) { }\r\n\r\n    getExerciseByName(exerciseName: string): Observable<Exercise> {\r\n        const params = new HttpParams().set('exerciseName', exerciseName);\r\n        return this.http.get<Exercise>(environment.BACKEND + '/training/get_exercise', { params: params });\r\n    }\r\n\r\n    getExercises(): Observable<StreamData<Exercise[]>> {\r\n        return this.http.get<StreamData<Exercise[]>>(environment.BACKEND + '/training/get_exercises').pipe(\r\n            switchMap((response: StreamData<Exercise[]>) => {\r\n                const trainingState: Training = JSON.parse(localStorage.getItem(LocalStorageItems.TRAINING_STATE));\r\n                if (!trainingState) {\r\n                    return this.authService.loggedUser$\r\n                        .pipe(\r\n                            take(1),\r\n                            tap((authResponseData: AuthResponseData) => {\r\n                                this.updateTrainingState(\r\n                                    undefined,\r\n                                    response.Value,\r\n                                    true,\r\n                                    authResponseData._id,\r\n                                );\r\n                                this._allExercisesChanged$$.next(response.Value);\r\n                                localStorage.setItem(LocalStorageItems.ALL_EXERCISES, JSON.stringify(response.Value));\r\n                            }),\r\n                            switchMap(_ => of(response)),\r\n                        );\r\n                }\r\n                else {\r\n                    return of(response);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    addTraining(trainingData: Training): Observable<GeneralResponseData> {\r\n        return this.http.post<GeneralResponseData>(environment.BACKEND + '/training/handle_training', { trainingData: trainingData });\r\n    }\r\n\r\n    updateTraining(\r\n        trainingData: Training,\r\n        trainingId: string,\r\n    ): Observable<GeneralResponseData> {\r\n        return this.http.put<GeneralResponseData>(environment.BACKEND + `/training/handle_training/${trainingId}`, { updatedTrainingData: trainingData });\r\n    }\r\n\r\n    /**************************************** */\r\n\r\n    getCurrentTrainingState(): Training {\r\n        return this._currentTrainingChanged$$.getValue();\r\n    }\r\n\r\n    addBodyweightToStorage(value: string): void {\r\n        const updatedTraining = {\r\n            ...this._currentTrainingChanged$$.getValue(),\r\n            bodyweight: +value,\r\n        };\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    deleteSet(\r\n        indexExercise: number,\r\n        indexSet: number,\r\n        newTotal: number,\r\n    ): void {\r\n        const updatedTraining: Training = { ...this._currentTrainingChanged$$.getValue() };\r\n        updatedTraining.exercises[indexExercise].sets.splice(indexSet, 1);\r\n        updatedTraining.exercises[indexExercise].sets.map((set: Set) => {\r\n            if (set.setNumber > (indexSet + 1)) {\r\n                set.setNumber--;\r\n            }\r\n        });\r\n        updatedTraining.exercises[indexExercise].total = newTotal;\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    pushToAvailableExercises(\r\n        currentTrainingState: Training,\r\n        toBeAddedExercise: Exercise[],\r\n    ): void {\r\n        const updatedTraining: Training = { ...currentTrainingState };\r\n        updatedTraining.exercises.map((exercise: SingleExercise) => {\r\n            const isDeletedExerciseInAE: Exercise = exercise.availableExercises.find((exercise: Exercise) => exercise._id === toBeAddedExercise[0]._id);\r\n            if (!isDeletedExerciseInAE) {\r\n                exercise.availableExercises.push(toBeAddedExercise[0]);\r\n                exercise.availableExercises.sort(this.compare);\r\n            }\r\n        });\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    deleteExercise(\r\n        currentTrainingState: Training,\r\n        deletedExerciseName?: string,\r\n        indexExercise?: number,\r\n    ): Observable<[Training, Exercise[]]> {\r\n        let updatedExercises: SingleExercise[] = [ ...currentTrainingState.exercises ];\r\n        let updatedTraining: Training;\r\n        if (deletedExerciseName) {\r\n            return this.allExercisesChanged$.pipe(\r\n                take(1),\r\n                tap(_ => {\r\n                    updatedExercises = updatedExercises.filter((exercise: SingleExercise) => exercise.exerciseName !== deletedExerciseName);\r\n                    updatedTraining = {\r\n                        ...currentTrainingState,\r\n                        exercises: updatedExercises,\r\n                    };\r\n                }),\r\n                map((allExercises: Exercise[]) =>\r\n                    [\r\n                        updatedTraining,\r\n                        allExercises.filter(exercise => exercise.Name === deletedExerciseName),\r\n                    ],\r\n                ),\r\n            );\r\n        }\r\n        else {\r\n            updatedExercises = updatedExercises.filter((_exercise: SingleExercise, index: number) => index !== indexExercise);\r\n            updatedTraining = {\r\n                ...currentTrainingState,\r\n                exercises: updatedExercises,\r\n            };\r\n            this.saveTrainingData(updatedTraining);\r\n            return of([\r\n                updatedTraining,\r\n                null,\r\n            ]);\r\n        }\r\n    }\r\n\r\n    setsChanged(trainingData: SetTrainingData): void {\r\n        const updatedTraining: Training = { ...this._currentTrainingChanged$$.getValue() };\r\n        const indexOfChangedExercise: number = updatedTraining.exercises.findIndex((singleExercise: SingleExercise) => singleExercise.exerciseName === trainingData.exerciseName);\r\n        const indexFoundSet = updatedTraining.exercises[indexOfChangedExercise].sets.findIndex(set => set.setNumber === trainingData.setNumber);\r\n\r\n        if (indexFoundSet > -1) {\r\n            updatedTraining.exercises[indexOfChangedExercise].sets[indexFoundSet] = {\r\n                ...updatedTraining.exercises[indexOfChangedExercise].sets[indexFoundSet],\r\n                weightLifted: trainingData.weightLifted,\r\n                reps: trainingData.reps,\r\n            };\r\n            updatedTraining.exercises[indexOfChangedExercise].total = trainingData.total;\r\n        }\r\n        else {\r\n            updatedTraining.exercises[indexOfChangedExercise].sets.push({\r\n                setNumber: trainingData.setNumber,\r\n                weightLifted: trainingData.weightLifted,\r\n                reps: trainingData.reps,\r\n            });\r\n            updatedTraining.exercises[indexOfChangedExercise].total = trainingData.total;\r\n        }\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    addNewExercise(alreadyUsedExercises: string[]): void {\r\n        const allExercises: Exercise[] = [ ...this._allExercisesChanged$$.getValue() ];\r\n        const availableExercises: Exercise[] = allExercises.filter((exercise: Exercise) => alreadyUsedExercises.indexOf(exercise.Name) === -1);\r\n        this.updateTrainingState(undefined, availableExercises);\r\n    }\r\n\r\n    updateExerciseChoices(\r\n        selectedExercise: string,\r\n        selectedIndex: number,\r\n        disabledTooltip: boolean,\r\n    ): void {\r\n        const updatedTraining: Training = { ...this._currentTrainingChanged$$.getValue() };\r\n        updatedTraining.exercises[selectedIndex].exerciseName = selectedExercise;\r\n        updatedTraining.exercises[selectedIndex].disabledTooltip = disabledTooltip;\r\n        updatedTraining.exercises.forEach((exercise: SingleExercise, index: number) => {\r\n            if (index !== selectedIndex) {\r\n                exercise.availableExercises = exercise.availableExercises.filter((exercise: Exercise) => exercise.Name !== selectedExercise);\r\n            }\r\n        });\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    keepTrainingState(): void {\r\n        const trainingState: Training = JSON.parse(localStorage.getItem(LocalStorageItems.TRAINING_STATE));\r\n        const allExercises: Exercise[] = JSON.parse(localStorage.getItem(LocalStorageItems.ALL_EXERCISES));\r\n\r\n        if (!trainingState || !allExercises) {\r\n            return;\r\n        }\r\n        this._currentTrainingChanged$$.next({ ...trainingState });\r\n        this._allExercisesChanged$$.next([ ...allExercises ]);\r\n    }\r\n\r\n    updateTrainingState(\r\n        newTrainingState?: Training,\r\n        exercises?: Exercise[],\r\n        restartAll?: boolean,\r\n        userId?: string,\r\n    ): void {\r\n        let updatedTraining: Training;\r\n        if (exercises) {\r\n            updatedTraining = this._currentTrainingChanged$$.getValue();\r\n            if (restartAll) {\r\n                updatedTraining = {\r\n                    ...EMPTY_TRAINING,\r\n                    userId: userId,\r\n                };\r\n            }\r\n            updatedTraining.exercises.push(createEmptyExercise(exercises));\r\n        }\r\n        else {\r\n            updatedTraining = newTrainingState;\r\n        }\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    clearTrainingState(): void {\r\n        this.saveTrainingData({ ...EMPTY_TRAINING });\r\n    }\r\n\r\n    private saveTrainingData(updatedTraining: Training): void {\r\n        this._currentTrainingChanged$$.next({ ...updatedTraining });\r\n        localStorage.setItem(LocalStorageItems.TRAINING_STATE, JSON.stringify({ ...updatedTraining }));\r\n    }\r\n\r\n    private compare(\r\n        a: Exercise,\r\n        b: Exercise,\r\n    ): number {\r\n        if (a.Name < b.Name) {\r\n            return -1;\r\n        }\r\n        if (a.Name > b.Name) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { mapDateInterval } from '../../../helpers/training/past-trainings/map-past-trainings-dates.helper';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { TrainingActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport { DeleteTrainingActionData } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport {\r\n    DeleteTrainingActionComponent,\r\n    DeleteTrainingActionDialogData } from '../../../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\n\r\n@Injectable()\r\nexport class DeleteTrainingActionService implements TrainingActions {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly modalController: ModalController,\r\n        private readonly datePipe: DatePipe,\r\n        private readonly translateService: TranslateService,\r\n    ) { }\r\n\r\n    async perform(data: DeleteTrainingActionData): Promise<void> {\r\n        await this.openDeleteTrainingDialog(data);\r\n    }\r\n\r\n    async openDeleteTrainingDialog(data: DeleteTrainingActionData): Promise<void> {\r\n        const modal = await this.modalController.create({\r\n            component: DeleteTrainingActionComponent,\r\n            componentProps: {\r\n                title$: this.translateService.stream('training.past_trainings.actions.delete_training'),\r\n                dateCreated$: this.translateService.stream(`weekdays.${data.weekDays[data.dayIndex]}`).pipe(\r\n                    map((value: { [key: string]: string }) => `${value} (${this.datePipe.transform(data.training.trainingDate, 'dd.MM.yyyy')})`),\r\n                ),\r\n                timeCreated$: of(data.timeCreated),\r\n                training$: of(data.training),\r\n            } as DeleteTrainingActionDialogData,\r\n        });\r\n        await modal.present();\r\n    }\r\n\r\n    deleteTraining(\r\n        trainingId: string,\r\n        currentDate: Date,\r\n    ): Observable<StreamData<Paginator<PastTrainings>>> {\r\n        const params = `?currentDate=${currentDate}`;\r\n        return this.http.delete<StreamData<Paginator<PastTrainings>>>(environment.BACKEND + `/training/delete_training/${trainingId}${params}`)\r\n            .pipe(\r\n                map((response: StreamData<Paginator<PastTrainings>>) => mapDateInterval(response)),\r\n            );\r\n    }\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { EMPTY, of, timer } from 'rxjs';\r\nimport { catchError, finalize, map, switchMap } from 'rxjs/operators';\r\nimport { SignupService } from 'src/app/services/auth/signup.service';\r\nimport { LoginService } from '../../services/auth/login.service';\r\n\r\nexport function passwordFitsEmail(\r\n    loginService: LoginService,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (group: AbstractControl) =>\r\n        timer(350).pipe(\r\n            switchMap(_ => {\r\n                if (group) {\r\n                    const email: string = group.get('email')?.value;\r\n                    const password: string = group.get('password')?.value;\r\n                    if (!email || !password) {\r\n                        return of(null);\r\n                    }\r\n                    return loginService.passwordFitsEmail(email, password)\r\n                        .pipe(\r\n                            map((response: boolean) => {\r\n                                if (!response) {\r\n                                    return { 'passwordFitsEmail': true };\r\n                                }\r\n                                return null;\r\n                            }),\r\n                            catchError(_ => of(null)),\r\n                            finalize(() => changeDetectorRef.markForCheck()),\r\n                        );\r\n                }\r\n                else {\r\n                    return of(null);\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function isEmailAvailable(\r\n    signupService: SignupService,\r\n    cd: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (control: AbstractControl) =>\r\n        timer(350).pipe(\r\n            switchMap(_ => {\r\n                if (control) {\r\n                    const email: string = control?.value;\r\n                    if (!email) {\r\n                        return EMPTY;\r\n                    }\r\n                    return signupService.getEmails(email.trim().toLowerCase())\r\n                        .pipe(\r\n                            map((response: boolean) => {\r\n                                if (!response) {\r\n                                    return { 'availableEmail': true };\r\n                                }\r\n                                return null;\r\n                            }),\r\n                            catchError(_ => EMPTY),\r\n                            finalize(() => cd.markForCheck()),\r\n                        );\r\n                }\r\n                else {\r\n                    return EMPTY;\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function samePasswords(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            const password: string = group.get('password')?.value;\r\n            const confirmPassword: string = group.get('confirmPassword')?.value;\r\n            if (!password || !confirmPassword) {\r\n                return null;\r\n            }\r\n            else {\r\n                if (password !== confirmPassword) {\r\n                    return { 'equalPass': true };\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function isNumber(): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        if (control.value) {\r\n            if (!isNaN(parseFloat(control.value)) && isFinite(control.value)) {\r\n                return null;\r\n            }\r\n            return { 'onlyNumbers': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { AbstractControl, FormArray, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function allSetsFilled(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            let isSetFilled = true;\r\n            (array as FormArray).controls.forEach((set: AbstractControl) => {\r\n                if (!set.get('weightLifted').value || !set.get('reps').value ||\r\n                    set.get('weightLifted').errors || set.get('reps').errors) {\r\n                    isSetFilled = false;\r\n                }\r\n            });\r\n            if (isSetFilled) {\r\n                return null;\r\n            }\r\n            return { 'setNotFilled': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function isSetValid(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            const weightLifted: AbstractControl = group?.get('weightLifted');\r\n            const reps: AbstractControl = group?.get('reps');\r\n            if (weightLifted && reps) {\r\n                if (!weightLifted.value || !reps.value) {\r\n                    return { 'setNotEntered': true };\r\n                }\r\n                if (!weightLifted.valid || !reps.valid) {\r\n                    return { 'setNotValid': true };\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nexport function bothValuesRequired(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            if (group.get('weightLifted')?.value && !group.get('reps')?.value) {\r\n                return { 'repsRequired': true };\r\n            }\r\n            else if (!group.get('weightLifted')?.value && group.get('reps')?.value) {\r\n                return { 'weightLiftedRequired': true };\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { AbstractControl, FormArray, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\n//TODO: create no empty training validator (exercises.length === 0)\r\nexport function checkExerciseNumber(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            const exerciseNumber = (array as FormArray)?.controls?.length;\r\n            if (exerciseNumber) {\r\n                return null;\r\n            }\r\n            return { 'emptyTraining': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function checkDuplicateExerciseName(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            const exerciseNames: string[] = [];\r\n            for (const group of (array as FormArray).controls) {\r\n                if (exerciseNames.indexOf(group.get('name')?.value) !== -1) {\r\n                    return { 'duplicateExerciseName': group.get('name').value };\r\n                }\r\n                else {\r\n                    exerciseNames.push(group.get('name')?.value);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { catchError, finalize, takeUntil } from 'rxjs/operators';\r\nimport { IonInput } from '@ionic/angular';\r\nimport { EMPTY } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { MESSAGE_DURATION } from '../../../constants/message-duration.const';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { LoginService } from '../../../services/auth/login.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport { IonFocusDurations } from '../../../constants/ion-focus-durations.const';\r\nimport { LoadingControllerService } from '../../../services/shared/loading-controller.service';\r\nimport { ToastControllerService } from '../../../services/shared/toast-controller.service';\r\n\r\ntype FormData = {\r\n    email?: string;\r\n    password?: string;\r\n};\r\n\r\n@Component({\r\n    selector: 'bl-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class LoginComponent {\r\n\r\n    isLoading = false;\r\n\r\n    form: FormGroup;\r\n\r\n    @ViewChild('passwordEl', { read: IonInput })\r\n    private readonly passwordInput: IonInput;\r\n\r\n    constructor(\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly loginService: LoginService,\r\n        private readonly authService: AuthService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly router: Router,\r\n        private readonly loadingControllerService: LoadingControllerService,\r\n        private readonly toastControllerService: ToastControllerService,\r\n    ) {\r\n        this.form = new FormGroup({\r\n            email: new FormControl(null, [\r\n                Validators.required,\r\n                Validators.email,\r\n            ]),\r\n            password: new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20),\r\n            ]),\r\n        }, { asyncValidators: AuthCustomValidators.passwordFitsEmail(\r\n            this.loginService,\r\n            this.changeDetectorRef) });\r\n    }\r\n\r\n    get focusDuration(): number {\r\n        return IonFocusDurations.LOGIN;\r\n    }\r\n\r\n    async onSubmit(): Promise<void> {\r\n        if (!this.form.valid) {\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        await this.loadingControllerService.displayLoader({ message: 'auth.logging_in' });\r\n\r\n        this.authService.login(\r\n            this.accessFormData('email').value as string,\r\n            this.accessFormData('password').value as string,\r\n        ).pipe(\r\n            catchError(_ => EMPTY),\r\n            finalize(async () => {\r\n                this.isLoading = false;\r\n                await this.loadingControllerService.dismissLoader();\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe(async (response: AuthResponseData) => {\r\n            if (response) {\r\n                await this.toastControllerService.displayToast({\r\n                    message: this.translateService.instant(response.Message),\r\n                    duration: MESSAGE_DURATION.GENERAL,\r\n                    color: response.Token ? 'primary' : 'danger',\r\n                });\r\n                await this.router.navigate(['/training/new-training']);\r\n            }\r\n        });\r\n    }\r\n\r\n    accessFormData(formFieldName: keyof FormData): FormControl {\r\n        return this.form.get(formFieldName) as FormControl;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EMPTY } from 'rxjs';\r\nimport { catchError, finalize, takeUntil } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { MESSAGE_DURATION } from '../../../constants/message-duration.const';\r\nimport { LanguageCode, WeightFormat } from '../../../models/preferences.model';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { SignupService } from '../../../services/auth/signup.service';\r\nimport { LoadingControllerService } from '../../../services/shared/loading-controller.service';\r\nimport { ToastControllerService } from '../../../services/shared/toast-controller.service';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\nimport { IonFocusDurations } from '../../../constants/ion-focus-durations.const';\r\n\r\ntype FormData = {\r\n    language?: LanguageCode;\r\n    weightFormat?: WeightFormat;\r\n    email?: string;\r\n    password?: string;\r\n    confirmPassword?: string;\r\n};\r\n@Component({\r\n    selector: 'bl-signup',\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class SignupComponent {\r\n\r\n    isLoading = false;\r\n\r\n    form: FormGroup;\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly signupService: SignupService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly loadingControllerService: LoadingControllerService,\r\n        private readonly toastControllerService: ToastControllerService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly router: Router,\r\n    ) {\r\n        this.form = new FormGroup({\r\n            language: new FormControl('en', [Validators.required]),\r\n            weightFormat: new FormControl('kg', [Validators.required]),\r\n            email: new FormControl(null, {\r\n                validators: [Validators.required, Validators.email],\r\n                asyncValidators: [AuthCustomValidators.isEmailAvailable(this.signupService, this.changeDetectorRef)],\r\n            }),\r\n            password: new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)],\r\n            ),\r\n            confirmPassword: new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)],\r\n            ),\r\n        }, { validators: AuthCustomValidators.samePasswords() });\r\n    }\r\n\r\n    get focusDuration(): number {\r\n        return IonFocusDurations.SIGNUP;\r\n    }\r\n\r\n    async onSubmit(): Promise<void> {\r\n        if (!this.form.valid) {\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n        await this.loadingControllerService.displayLoader({ message: 'auth.signing_in' });\r\n\r\n        this.authService.signup(\r\n            this.accessFormData('language').value as LanguageCode,\r\n            this.accessFormData('weightFormat').value as WeightFormat,\r\n            this.accessFormData('email').value,\r\n            this.accessFormData('password').value,\r\n            this.accessFormData('confirmPassword').value,\r\n        ).pipe(\r\n            catchError(_ => EMPTY),\r\n            finalize(async () => {\r\n                this.isLoading = false;\r\n                await this.loadingControllerService.dismissLoader();\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n            takeUntil(this.unsubscribeService),\r\n        )\r\n        .subscribe(async response => {\r\n            if (response.Success) {\r\n                await this.toastControllerService.displayToast({\r\n                    message: this.translateService.instant(response.Message),\r\n                    duration: MESSAGE_DURATION.GENERAL,\r\n                    color: response.Success ? 'primary' : 'danger',\r\n                });\r\n                await this.router.navigate(['/auth/login']);\r\n            }\r\n        });\r\n    }\r\n\r\n    accessFormData(formFieldName: keyof FormData): FormControl {\r\n        return this.form.get(formFieldName) as FormControl;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { Observable } from 'rxjs';\r\nimport { take, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { AuthResponseData } from '../../../../models/auth/auth-data.model';\r\nimport { LanguageCode } from '../../../../models/preferences.model';\r\nimport { AuthService } from '../../../../services/auth/auth.service';\r\nimport { NavigationService } from '../../../../services/shared/navigation.service';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\n\r\ninterface LanguageData {\r\n    LanguageCode: LanguageCode;\r\n    ImageUrl: string;\r\n    LanguageName: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'bl-languages',\r\n    templateUrl: './languages.component.html',\r\n    styleUrls: ['./languages.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class LanguagesComponent {\r\n\r\n    readonly languageData: Readonly<LanguageData[]> = [\r\n        {\r\n            LanguageCode: 'en',\r\n            ImageUrl: '../../../../assets/images/flags/united-kingdom.png',\r\n            LanguageName: 'languages.english',\r\n        },\r\n        {\r\n            LanguageCode: 'hr',\r\n            ImageUrl: '../../../../assets/images/flags/croatia.png',\r\n            LanguageName: 'languages.croatian',\r\n        },\r\n    ];\r\n\r\n    @Input()\r\n    loggedUserData$: Observable<AuthResponseData>;\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly navigationService: NavigationService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly popoverController: PopoverController,\r\n    ) { }\r\n\r\n    changeLanguage(language: LanguageCode): void {\r\n        this.authService.loggedUser$.pipe(\r\n            take(1),\r\n            switchMap((userData: AuthResponseData) =>\r\n                this.navigationService.setPreferences(\r\n                    userData._id,\r\n                    language,\r\n                    'kg',\r\n                ),\r\n            ),\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe(async _ => await this.popoverController.dismiss());\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { endOfDay, endOfWeek, format, startOfDay, startOfWeek } from 'date-fns';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { PastTrainingsQueryParams, QUERY_PARAMS_DATE_FORMAT } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { NewTrainingService } from '../../../services/training/new-training.service';\r\nimport { LanguagesComponent } from './languages/languages.component';\r\n\r\n@Component({\r\n    selector: 'bl-side-nav',\r\n    templateUrl: './side-nav.component.html',\r\n    styleUrls: ['./side-nav.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n\r\n    isAuthenticated$: Observable<boolean>;\r\n    loggedUserData$: Observable<AuthResponseData>;\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly popoverController: PopoverController,\r\n        private readonly router: Router,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.isAuthenticated$ = this.authService.isAuth$;\r\n        this.loggedUserData$ = this.authService.loggedUser$;\r\n    }\r\n\r\n    async onLogout(): Promise<void> {\r\n        this.newTrainingService.clearTrainingState();\r\n        await this.authService.logout();\r\n    }\r\n\r\n    async goToPastTrainings(): Promise<void> {\r\n        const startDate: Date = startOfWeek(startOfDay(new Date()), {\r\n            weekStartsOn: 1,\r\n        });\r\n        const endDate: Date = endOfWeek(endOfDay(new Date()), {\r\n            weekStartsOn: 1,\r\n        });\r\n        await this.router.navigate(['/training/past-trainings'], {\r\n            queryParams: {\r\n                startDate: format(startDate, QUERY_PARAMS_DATE_FORMAT),\r\n                endDate: format(endDate, QUERY_PARAMS_DATE_FORMAT),\r\n                showBy: 'week',\r\n            } as PastTrainingsQueryParams,\r\n        });\r\n    }\r\n\r\n    async openPopover($event: Event): Promise<void> {\r\n        const popover = await this.popoverController.create({\r\n            component: LanguagesComponent,\r\n            event: $event,\r\n            componentProps: { loggedUserData$: this.loggedUserData$ },\r\n            side: 'left',\r\n            keyboardClose: true,\r\n        });\r\n        await popover.present();\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, ViewChild } from '@angular/core';\r\nimport { IonDatetime, ModalController } from '@ionic/angular';\r\nimport { format } from 'date-fns';\r\nimport { DialogRoles } from '../../../models/common/types/modal-roles.type';\r\n\r\n@Component({\r\n    templateUrl: './datetime-picker.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DateTimePickerComponent {\r\n\r\n    maxDate: string = format(new Date(), 'yyyy-MM-dd');\r\n\r\n    @Input()\r\n    dateValue: string;\r\n\r\n    @ViewChild('datetime', { read: IonDatetime })\r\n    dateTimeEl: IonDatetime;\r\n\r\n    constructor(\r\n        private readonly modalController: ModalController,\r\n    ) { }\r\n\r\n    dateChanged(currentDateValue: string): void {\r\n        this.dateValue = currentDateValue;\r\n    }\r\n\r\n    async close(): Promise<void> {\r\n        await this.dateTimeEl?.cancel();\r\n        await this.modalController.dismiss(undefined, DialogRoles.CANCEL);\r\n    }\r\n\r\n    async select(): Promise<void> {\r\n        await this.dateTimeEl?.confirm();\r\n        await this.modalController.dismiss(this.dateValue, DialogRoles.SELECT_DATE);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { Observable } from 'rxjs';\r\nimport { DialogRoles } from '../../../models/common/types/modal-roles.type';\r\n\r\nexport interface DialogData {\r\n    isError: boolean;\r\n    deleteExercise: DeleteExerciseDialogData;\r\n}\r\n\r\nexport interface DeleteExerciseDialogData {\r\n    message$: Observable<string>;\r\n    exerciseName: string;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './delete-exercise-dialog.component.html',\r\n    styleUrls: ['./delete-exercise-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeleteExerciseDialogComponent {\r\n\r\n    @Input()\r\n    isError = false;\r\n\r\n    @Input()\r\n    deleteExercise: DeleteExerciseDialogData;\r\n\r\n    constructor(\r\n        private readonly modalController: ModalController,\r\n    ) { }\r\n\r\n    async onCancel(): Promise<void> {\r\n        await this.modalController.dismiss(false, DialogRoles.CANCEL);\r\n    }\r\n\r\n    async onDeleteExercise(): Promise<void> {\r\n        await this.modalController.dismiss(true, DialogRoles.DELETE_EXERCISE);\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\n\r\n@Component({\r\n    selector: 'bl-not-found',\r\n    templateUrl: './not-found.component.html',\r\n    styleUrls: ['./not-found.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NotFoundComponent {\r\n\r\n    isAuth$: Observable<boolean> = this.authService.isAuth$;\r\n\r\n    constructor(private readonly authService: AuthService) {}\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { isNeverCheck } from '../../../helpers/is-never-check.helper';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { DEFAULT_SIZE, INITIAL_PAGE, Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { Page } from '../../../models/common/types/page.type';\r\nimport { DateInterval, PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { PaginatorChanged } from '../../../models/common/interfaces/paginator.model';\r\n\r\n@Component({\r\n    selector: 'bl-pagination',\r\n    templateUrl: './pagination.component.html',\r\n    styleUrls: ['./pagination.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationComponent {\r\n\r\n    readonly pageSizeOptions: number[] = [1, 3, 5, 10];\r\n\r\n    @Input()\r\n    isSearch = false;\r\n\r\n    @Input()\r\n    page: number = INITIAL_PAGE;\r\n\r\n    @Input()\r\n    size: number = DEFAULT_SIZE;\r\n\r\n    @Input()\r\n    isPreviousPage = false;\r\n\r\n    @Input()\r\n    isNextPage = false;\r\n\r\n    @Input()\r\n    data: StreamData<Paginator<PastTrainings>> | undefined = undefined;\r\n\r\n    @Output()\r\n    readonly paginatorChanged: EventEmitter<PaginatorChanged> = new EventEmitter<PaginatorChanged>();\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n    ) { }\r\n\r\n    loadPage(\r\n        page?: Page,\r\n        dateInterval?: DateInterval,\r\n        earliestTrainingDate?: Date,\r\n        lastPage?: number,\r\n    ): void {\r\n        if (this.isSearch) {\r\n            if (page) {\r\n                switch (page) {\r\n                    case 'First': {\r\n                        this.page = INITIAL_PAGE;\r\n                        break;\r\n                    }\r\n                    case 'Previous': {\r\n                        this.page--;\r\n                        break;\r\n                    }\r\n                    case 'Next': {\r\n                        this.page++;\r\n                        break;\r\n                    }\r\n                    case 'Last': {\r\n                        this.page = lastPage;\r\n                        break;\r\n                    }\r\n                    default:\r\n                        isNeverCheck(page);\r\n                }\r\n            }\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: true,\r\n            } as PaginatorChanged);\r\n        }\r\n        else {\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: false,\r\n                PageType: page,\r\n                DateInterval: dateInterval,\r\n                EarliestTrainingDate: earliestTrainingDate,\r\n            } as PaginatorChanged);\r\n        }\r\n    }\r\n\r\n    setPageText(totalPages: number): Observable<string> {\r\n        return this.translateService.stream('common')\r\n            .pipe(\r\n                map((value: { [key: string]: string }) =>\r\n                    `\r\n                        ${value['page']}\r\n                        <strong class=\"primary\">${this.page?.toString() ?? '1'}</strong>\r\n                        ${value['of']}\r\n                        <strong class=\"primary\">${totalPages?.toString() ?? '1'}</strong>\r\n                    `),\r\n            );\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { IonInput } from '@ionic/angular';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, filter, takeUntil } from 'rxjs/operators';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\nimport { ExerciseStateType } from '../../../../models/training/new-training/training.model';\r\nimport { SetStateChanged } from '../../../../models/training/shared/set.model';\r\nimport { Set, SetConstituent } from '../../../../models/training/shared/set.model';\r\nimport { FormSetData } from '../../../../models/training/shared/set.model';\r\nimport { SetFormValidationErrors } from '../../../../models/training/shared/set.model';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport * as CommonValidators from '../../../../validators/shared/common.validators';\r\nimport * as SetValidators from '../../../../validators/training/set.validators';\r\n\r\n@Component({\r\n    selector: 'bl-sets',\r\n    templateUrl: './sets.component.html',\r\n    styleUrls: ['./sets.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        getControlValueAccessor(SetsComponent),\r\n        UnsubscribeService,\r\n    ],\r\n})\r\nexport class SetsComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n\r\n    readonly form: FormArray = new FormArray([]);\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    isExerciseFormSubmitted$: Observable<boolean> = of(false);\r\n\r\n    @Input()\r\n    exerciseStateChanged$: Observable<ExerciseStateType> = of(null);\r\n\r\n    @Input()\r\n    exerciseNameControl: AbstractControl | null;\r\n\r\n    @Input()\r\n    indexExercise = 0;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Output()\r\n    readonly setAdded: EventEmitter<SetStateChanged> = new EventEmitter<SetStateChanged>();\r\n\r\n    @Output()\r\n    readonly setDeleted: EventEmitter<Partial<SetStateChanged>> = new EventEmitter<Partial<SetStateChanged>>();\r\n\r\n    @Output()\r\n    readonly formStateChanged: EventEmitter<SetFormValidationErrors[]> = new EventEmitter<SetFormValidationErrors[]>();\r\n\r\n    @ViewChildren('weightLiftedEl')\r\n    weightLiftedEl: QueryList<IonInput>;\r\n\r\n    constructor(\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n    ) { }\r\n\r\n    get formErrors(): SetFormValidationErrors[] {\r\n        let errors: SetFormValidationErrors[] = [];\r\n        if (this.form?.errors) {\r\n            const mappedKeys: SetFormValidationErrors[] =\r\n                Object.keys(this.form.errors)\r\n                    .map((key: string) => key as SetFormValidationErrors);\r\n            errors = errors.concat(mappedKeys);\r\n        }\r\n        this.form.controls.forEach((group: AbstractControl) => {\r\n            if (group?.errors) {\r\n                const mappedKeys: SetFormValidationErrors[] =\r\n                    Object.keys(group.errors)\r\n                        .map((key: string) => key as SetFormValidationErrors);\r\n                errors = errors.concat(mappedKeys);\r\n            }\r\n        });\r\n        return errors;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.form.setValidators([SetValidators.allSetsFilled()]);\r\n        this.form.updateValueAndValidity();\r\n        this.formStateChanged.emit(this.formErrors);\r\n\r\n        this.exerciseNameControl.valueChanges.pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe((value: string) => {\r\n            value ? this.accessFormField('weightLifted', 0).enable() : this.accessFormField('weightLifted', 0).disable();\r\n            value ? this.accessFormField('reps', 0).enable() : this.accessFormField('reps', 0).disable();\r\n        });\r\n\r\n        this.exerciseStateChanged$\r\n            .pipe(\r\n                filter(state => state === 'Update'),\r\n                delay(200),\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe(async _ => {\r\n                if (this.weightLiftedEl?.first) {\r\n                    await this.weightLiftedEl.first.setFocus();\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.form.updateValueAndValidity({ emitEvent: true });\r\n    }\r\n\r\n    writeValue(value: Set[]): void {\r\n        if (value) {\r\n            if (value.length > 0) {\r\n                for (const set of value) {\r\n                    this.addSet(set);\r\n                }\r\n            }\r\n            else {\r\n                this.addSet();\r\n            }\r\n        }\r\n    }\r\n    //Sending parent new form value when form value changes\r\n    registerOnChange(fn: (formValue: Partial<Set[]>) => void): void {\r\n        this.form.valueChanges.pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe((formValue: Partial<Set[]>) => {\r\n            this.formStateChanged.emit(this.formErrors);\r\n            fn(formValue as Partial<Set[]>);\r\n        });\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    getSets(): AbstractControl[] {\r\n        return (this.form as FormArray).controls;\r\n    }\r\n\r\n    addSet(set?: Set): void {\r\n        this.form.push(\r\n            new FormGroup({\r\n                setNumber: new FormControl(set ? (set.setNumber as number) : this.getSets().length + 1, [Validators.required]),\r\n                weightLifted: new FormControl({\r\n                    value: set ? set.weightLifted : null,\r\n                    disabled: this.exerciseNameControl.value ? false : true,\r\n                }, [Validators.min(1),\r\n                    Validators.max(1000),\r\n                    CommonValidators.isNumber()]),\r\n                reps: new FormControl({\r\n                    value: set ? set.reps : null,\r\n                    disabled: this.exerciseNameControl.value ? false : true,\r\n                }, [Validators.min(1),\r\n                    Validators.max(1000),\r\n                    Validators.pattern('^[0-9]*$')]),\r\n            }, {\r\n                validators: [SetValidators.bothValuesRequired(), SetValidators.isSetValid()],\r\n            }),\r\n        );\r\n        of(null)\r\n            .pipe(\r\n                delay(200),\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe(async _ => {\r\n                if (this.weightLiftedEl) {\r\n                    await this.weightLiftedEl.last?.setFocus();\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteSet(indexSet: number): void {\r\n        this.form.removeAt(indexSet);\r\n        this.setDeleted.emit({\r\n            indexExercise: this.indexExercise as number,\r\n            indexSet: indexSet as number,\r\n            newTotal: this.calculateTotal(),\r\n        } as Partial<SetStateChanged>);\r\n    }\r\n\r\n    onChangeSets(indexSet: number): void {\r\n        let total = 0;\r\n        let isWeightLiftedValid = false;\r\n        let isRepsValid = false;\r\n        if (this.accessFormField('weightLifted', indexSet)?.valid && this.accessFormField('weightLifted', indexSet)?.value) {\r\n            isWeightLiftedValid = true;\r\n        }\r\n        if (this.accessFormField('reps', indexSet)?.valid && this.accessFormField('reps', indexSet)?.value) {\r\n            isRepsValid = true;\r\n        }\r\n        if (isWeightLiftedValid && isRepsValid) {\r\n            total = this.calculateTotal();\r\n        }\r\n        this.setAdded.emit({\r\n            indexExercise: this.indexExercise,\r\n            indexSet: indexSet,\r\n            isWeightLiftedValid: isWeightLiftedValid,\r\n            isRepsValid: isRepsValid,\r\n            newTotal: total,\r\n            newSet: {\r\n                setNumber: +this.accessFormField('setNumber', indexSet).value,\r\n                weightLifted: +this.accessFormField('weightLifted', indexSet).value,\r\n                reps: +this.accessFormField('reps', indexSet).value,\r\n            } as Set,\r\n        } as SetStateChanged);\r\n    }\r\n\r\n    accessFormField(\r\n        formField: keyof FormSetData,\r\n        indexSet: number,\r\n    ): AbstractControl {\r\n        return this.form.at(indexSet)?.get(formField);\r\n    }\r\n\r\n    setIonComponentClass(\r\n        set: AbstractControl,\r\n        isExerciseFormSubmitted: boolean,\r\n        exerciseName: string | undefined,\r\n        setConstituent: SetConstituent,\r\n    ): boolean {\r\n        return ((setConstituent === 'weightLifted' ? set.errors?.weightLiftedRequired : set.errors?.repsRequired) && (isExerciseFormSubmitted || !!exerciseName));\r\n    }\r\n\r\n    private calculateTotal(): number {\r\n        let total = 0;\r\n        for (const group of this.getSets()) {\r\n            total += (+group.get('weightLifted')?.value * +group.get('reps')?.value);\r\n        }\r\n        return total;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { IonSelect, ModalController } from '@ionic/angular';\r\nimport { OverlayEventDetail } from '@ionic/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, EMPTY, forkJoin, from, Observable, of, Subject } from 'rxjs';\r\nimport { finalize, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\r\nimport { MESSAGE_DURATION } from '../../../../constants/message-duration.const';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\nimport { GeneralResponseData } from '../../../../models/general-response.model';\r\nimport { DEFAULT_WEIGHT_FORMAT } from '../../../../models/preferences.model';\r\nimport { Exercise } from '../../../../models/training/exercise.model';\r\nimport { EditNewTrainingData, EMPTY_TRAINING_EDIT } from '../../../../models/training/new-training/empty-training.model';\r\nimport { Training } from '../../../../models/training/new-training/training.model';\r\nimport { createInitialSet, SetFormValidationErrors, SetStateChanged, SetTrainingData } from '../../../../models/training/shared/set.model';\r\nimport { Set } from '../../../../models/training/shared/set.model';\r\nimport { SingleExercise } from '../../../../models/training/shared/single-exercise.model';\r\nimport { FormSingleExerciseData } from '../../../../models/training/shared/single-exercise.model';\r\nimport { RoundTotalWeightPipe } from '../../../../pipes/training/new-training/round-total-weight/round-total-weight.pipe';\r\nimport { ToastControllerService } from '../../../../services/shared/toast-controller.service';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport { NewTrainingService } from '../../../../services/training/new-training.service';\r\nimport * as SingleExerciseValidators from '../../../../validators/training/single-exercise.validators';\r\nimport { DeleteExerciseDialogData, DeleteExerciseDialogComponent, DialogData } from '../../delete-exercise-dialog/delete-exercise-dialog.component';\r\nimport { DialogRoles } from '../../../../models/common/types/modal-roles.type';\r\nimport { ExerciseStateType } from '../../../../models/training/new-training/training.model';\r\n\r\nconst INITIAL_WEIGHT = 0;\r\n\r\n@Component({\r\n    selector: 'bl-single-exercise',\r\n    templateUrl: './single-exercise.component.html',\r\n    styleUrls: ['./single-exercise.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        getControlValueAccessor(SingleExerciseComponent),\r\n        UnsubscribeService,\r\n    ],\r\n})\r\nexport class SingleExerciseComponent implements ControlValueAccessor {\r\n\r\n    readonly exerciseStateChanged$$: Subject<ExerciseStateType> = new Subject<ExerciseStateType>();\r\n    readonly isSubmitted$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    readonly exercises$: Observable<Exercise[]> | undefined = undefined;\r\n\r\n    readonly form: FormArray = new FormArray([]);\r\n    setErrors: SetFormValidationErrors[] = [];\r\n\r\n    exerciseChanged = false;\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    editData: EditNewTrainingData = EMPTY_TRAINING_EDIT;\r\n\r\n    @Input()\r\n    bodyweight: AbstractControl | null;\r\n\r\n    @Input()\r\n    trainingDate: AbstractControl | null;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @Output()\r\n    readonly exerciseAdded: EventEmitter<UIEvent> = new EventEmitter();\r\n\r\n    @ViewChildren('exercisePicker')\r\n    exercisePickerEls: QueryList<IonSelect>;\r\n\r\n    readonly currentExerciseState$: Observable<[SingleExercise[], Exercise[]]> =\r\n        this.exerciseStateChanged$$.pipe(\r\n            startWith(undefined as ExerciseStateType),\r\n            switchMap(_ =>\r\n                forkJoin([\r\n                    this.newTrainingService.currentTrainingChanged$\r\n                        .pipe(\r\n                            take(1),\r\n                            map((currentTrainingState: Training) => currentTrainingState.exercises),\r\n                        ),\r\n                        this.newTrainingService.allExercisesChanged$.pipe(\r\n                            take(1),\r\n                        ),\r\n                ]),\r\n            ),\r\n        );\r\n\r\n    constructor(\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly toastControllerService: ToastControllerService,\r\n        private readonly modalController: ModalController,\r\n        private readonly roundTotalWeightPipe: RoundTotalWeightPipe,\r\n    ) {\r\n        this.form.setValidators([SingleExerciseValidators.checkDuplicateExerciseName(), SingleExerciseValidators.checkExerciseNumber()]);\r\n        this.form.updateValueAndValidity();\r\n    }\r\n\r\n    writeValue(exercises: SingleExercise[]): void {\r\n        if (exercises) {\r\n            if (exercises?.length > 0) {\r\n                (exercises as SingleExercise[]).forEach((exercise: SingleExercise, indexExercise: number) => {\r\n                    this.addExercise();\r\n                    if (exercise.exerciseName) {\r\n                        this.accessFormField('name', indexExercise).patchValue(exercise.exerciseName as string);\r\n                        this.accessFormField('sets', indexExercise).patchValue(exercise.sets as Set[]);\r\n                        this.accessFormField('total', indexExercise).patchValue(exercise.total ? this.roundTotalWeightPipe.transform(exercise.total) : `0 ${DEFAULT_WEIGHT_FORMAT}`);\r\n                        this.accessFormField('disabledTooltip', indexExercise).patchValue(exercise.disabledTooltip as boolean);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.addExercise();\r\n            }\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: (formValue: Partial<SingleExercise[]>) => void): void {\r\n        this.form.valueChanges\r\n            .pipe(\r\n                takeUntil(this.unsubscribeService),\r\n            ).subscribe(fn);\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    onExerciseNameChange(\r\n        indexExercise: number,\r\n        element: IonSelect,\r\n    ): void {\r\n        if (element?.value) {\r\n            this.newTrainingService.updateExerciseChoices(\r\n                element.value,\r\n                indexExercise,\r\n                this.accessFormField('disabledTooltip', indexExercise).value as boolean,\r\n            );\r\n            this.exerciseChanged = !this.exerciseChanged;\r\n            this.exerciseStateChanged$$.next('Update');\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    addExercise(event?: UIEvent): void {\r\n        this.form.push(new FormGroup({\r\n            'name': new FormControl(null, [Validators.required]),\r\n            'sets': new FormControl(createInitialSet()),\r\n            'total': new FormControl(this.roundTotalWeightPipe.transform(INITIAL_WEIGHT), [Validators.required]),\r\n            'disabledTooltip': new FormControl(true, [Validators.required]),\r\n        }));\r\n\r\n        if (event) {\r\n            this.newTrainingService.addNewExercise(this.getAlreadyUsedExercises());\r\n            this.exerciseStateChanged$$.next('Add');\r\n            this.exerciseAdded.next(event);\r\n        }\r\n    }\r\n\r\n    async deleteExercise(\r\n        indexExercise: number,\r\n        exerciseName: string,\r\n    ): Promise<void> {\r\n        if (exerciseName) {\r\n            const modal = await this.modalController.create({\r\n                component: DeleteExerciseDialogComponent,\r\n                componentProps: {\r\n                    isError: false,\r\n                    deleteExercise: {\r\n                        message$: this.translateService.stream('training.new_training.delete_exercise_prompt'),\r\n                        exerciseName: exerciseName,\r\n                    } as DeleteExerciseDialogData,\r\n                } as DialogData,\r\n                keyboardClose: true,\r\n                swipeToClose: true,\r\n            });\r\n            await modal.present();\r\n\r\n            from(modal.onDidDismiss<boolean>())\r\n                .pipe(\r\n                    switchMap((response: OverlayEventDetail<boolean>) => {\r\n                        if (response.role === DialogRoles.DELETE_EXERCISE) {\r\n                            return this.newTrainingService.currentTrainingChanged$\r\n                                .pipe(\r\n                                    take(1),\r\n                                    switchMap((currentTrainingState: Training) =>\r\n                                        this.newTrainingService.deleteExercise(\r\n                                            currentTrainingState as Training,\r\n                                            exerciseName as string,\r\n                                        ),\r\n                                    ),\r\n                                );\r\n                        }\r\n                        else {\r\n                            return EMPTY;\r\n                        }\r\n                    }),\r\n                    finalize(() => {\r\n                        this.exerciseStateChanged$$.next('Delete');\r\n                        this.changeDetectorRef.markForCheck();\r\n                    }),\r\n                    takeUntil(this.unsubscribeService),\r\n                )\r\n                .subscribe((data: [Training, Exercise[]]) => {\r\n                    this.exerciseChanged = !this.exerciseChanged;\r\n                    this.form.removeAt(indexExercise);\r\n                    this.newTrainingService.pushToAvailableExercises(\r\n                        data[0] as Training,\r\n                        data[1] as Exercise[],\r\n                    );\r\n                });\r\n        }\r\n        else {\r\n            this.newTrainingService.currentTrainingChanged$\r\n                .pipe(\r\n                    take(1),\r\n                    switchMap((currentTrainingState: Training) =>\r\n                        this.newTrainingService.deleteExercise(\r\n                            currentTrainingState as Training,\r\n                            null,\r\n                            indexExercise,\r\n                        ),\r\n                    ),\r\n                    finalize(() => this.exerciseStateChanged$$.next('Delete')),\r\n                    takeUntil(this.unsubscribeService),\r\n                )\r\n                .subscribe(_ => this.form.removeAt(indexExercise));\r\n        }\r\n    }\r\n\r\n    onChangeSets($event: SetStateChanged): void {\r\n        of(null).pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe(_ => {\r\n            if ($event?.isWeightLiftedValid &&\r\n                $event?.isRepsValid &&\r\n                this.accessFormField('name', $event.indexExercise).value) {\r\n                    const trainingData: SetTrainingData = {\r\n                        exerciseName: this.accessFormField('name', $event.indexExercise).value as string,\r\n                        setNumber: $event.newSet.setNumber as number,\r\n                        weightLifted: $event.newSet.weightLifted as number,\r\n                        reps: $event.newSet.reps as number,\r\n                        total: $event.newTotal as number,\r\n                    };\r\n                    this.newTrainingService.setsChanged(trainingData);\r\n                    this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform($event.newTotal));\r\n            }\r\n            else {\r\n                this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform(0));\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteSet($event: Partial<SetStateChanged>): void {\r\n        this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform($event.newTotal));\r\n        this.newTrainingService.deleteSet(\r\n            $event.indexExercise as number,\r\n            $event.indexSet as number,\r\n            $event.newTotal as number,\r\n        );\r\n    }\r\n\r\n    getExercises(): AbstractControl[] {\r\n        return (this.form as FormArray).controls;\r\n    }\r\n\r\n    accessFormField(\r\n        formField: keyof FormSingleExerciseData,\r\n        indexExercise: number,\r\n    ): AbstractControl {\r\n        return this.form.at(indexExercise)?.get(formField);\r\n    }\r\n\r\n    onSetFormChange($event: SetFormValidationErrors[]): void {\r\n        this.setErrors = $event;\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    isAddingExercisesDisabled(\r\n        currentExercisesLength: number,\r\n        allExercisesLength: number,\r\n    ): boolean {\r\n        if (this.getExercises().length > 0) {\r\n            return (currentExercisesLength >= allExercisesLength)\r\n                || ((!this.accessFormField('name', this.getExercises().length - 1)?.value) && this.getExercises().length > 0)\r\n                || this.setErrors.includes('setNotEntered')\r\n                || this.setErrors.includes('setNotValid');\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.isSubmitted$$.next(true);\r\n        if (!this.form.valid || this.setErrors.length > 0) {\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n\r\n        this.gatherAllFormData().pipe(\r\n            switchMap((apiNewTraining: Training) => {\r\n                if (this.editMode) {\r\n                    return this.newTrainingService.updateTraining(\r\n                        apiNewTraining,\r\n                        this.editData.editTraining?._id,\r\n                    );\r\n                }\r\n                else {\r\n                    return this.newTrainingService.addTraining(apiNewTraining);\r\n                }\r\n            }),\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe(async (response: GeneralResponseData) => {\r\n            await this.toastControllerService.displayToast({\r\n                message: this.translateService.instant(response.Message),\r\n                duration: MESSAGE_DURATION.GENERAL,\r\n                color: 'primary',\r\n            });\r\n        });\r\n    }\r\n\r\n    private gatherAllFormData(): Observable<Training> {\r\n        return this.newTrainingService.currentTrainingChanged$.pipe(\r\n            take(1),\r\n            map((currentTrainingState: Training) => {\r\n                const exerciseFormData: SingleExercise[] = [];\r\n\r\n                this.getExercises().forEach((_exercise: AbstractControl, indexExercise: number) => {\r\n                    const splittedTotal: string[] = (this.accessFormField('total', indexExercise).value as string).split(' ');\r\n                    exerciseFormData.push({\r\n                        exerciseName: this.accessFormField('name', indexExercise).value as string,\r\n                        sets: [],\r\n                        total: +splittedTotal[0],\r\n                        disabledTooltip: this.accessFormField('disabledTooltip', indexExercise).value as boolean,\r\n                        availableExercises: (currentTrainingState.exercises)[indexExercise]?.availableExercises || [],\r\n                    });\r\n\r\n                    const formSetData: Set[] = [];\r\n                    (this.accessFormField('sets', indexExercise).value as Set[]).forEach((set: Set) => {\r\n                        const apiSet: Set = {\r\n                            setNumber: +set.setNumber as number,\r\n                            weightLifted: +set.weightLifted as number,\r\n                            reps: +set.reps as number,\r\n                        };\r\n                        formSetData.push(apiSet);\r\n                    });\r\n                    exerciseFormData[indexExercise].sets = formSetData;\r\n                });\r\n\r\n                return {\r\n                    exercises: exerciseFormData,\r\n                    bodyweight: this.bodyweight.value ? +this.bodyweight.value : null,\r\n                    trainingDate: new Date(this.trainingDate.value) ?? new Date(),\r\n                    editMode: this.editMode,\r\n                    userId: currentTrainingState.userId,\r\n                } as Training;\r\n            }),\r\n            takeUntil(this.unsubscribeService),\r\n        );\r\n    }\r\n\r\n    private getAlreadyUsedExercises(): string[] {\r\n        const alreadyUsedExercises: string[] = [];\r\n        for (const exercise of this.getExercises()) {\r\n            if (exercise.get('name').value) {\r\n                alreadyUsedExercises.push(exercise.get('name').value as string);\r\n            }\r\n        }\r\n        return alreadyUsedExercises as string[];\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\n\r\n@Component({\r\n    selector: 'bl-total-weight',\r\n    templateUrl: './total-weight.component.html',\r\n    styleUrls: ['./total-weight.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [getControlValueAccessor(TotalWeightComponent)],\r\n})\r\nexport class TotalWeightComponent implements ControlValueAccessor {\r\n\r\n    value: string;\r\n\r\n    onChange: () => void;\r\n    onTouched: () => void;\r\n\r\n    constructor(\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n    ){}\r\n\r\n    writeValue(value: string): void {\r\n        this.value = value;\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: () => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EMPTY, Observable, of } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { Training } from 'src/app/models/training/new-training/training.model';\r\nimport { MESSAGE_DURATION } from '../../../../../constants/message-duration.const';\r\nimport { StreamData } from '../../../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../../../models/common/interfaces/paginator.model';\r\nimport { DialogRoles } from '../../../../../models/common/types/modal-roles.type';\r\nimport { PastTrainings } from '../../../../../models/training/past-trainings/past-trainings.model';\r\nimport { SharedService } from '../../../../../services/shared/shared.service';\r\nimport { ToastControllerService } from '../../../../../services/shared/toast-controller.service';\r\nimport { DeleteTrainingActionService } from '../../../../../services/training/training-actions/delete-training-action.service';\r\n\r\nexport interface DeleteTrainingActionDialogData {\r\n    readonly title$: Observable<string>;\r\n    readonly dateCreated$: Observable<string>;\r\n    readonly timeCreated$: Observable<string>;\r\n    readonly training$: Observable<Training>;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './delete-training-action.component.html',\r\n    styleUrls: ['./delete-training-action.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeleteTrainingActionComponent {\r\n\r\n    @Input()\r\n    title$: Observable<string> = of('');\r\n\r\n    @Input()\r\n    dateCreated$: Observable<string> = of('');\r\n\r\n    @Input()\r\n    timeCreated$: Observable<string> = of('');\r\n\r\n    @Input()\r\n    training$: Observable<Training>;\r\n\r\n    isLoading = false;\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly sharedService: SharedService,\r\n        private readonly toastControllerService: ToastControllerService,\r\n        private readonly deleteTrainingActionService: DeleteTrainingActionService,\r\n        private readonly modalController: ModalController,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly route: ActivatedRoute,\r\n    ) { }\r\n\r\n    deleteTraining(trainingId: string): void {\r\n        this.isLoading = true;\r\n        this.deleteTrainingActionService.deleteTraining(\r\n            trainingId,\r\n            new Date(`\r\n                ${this.getSplittedCurrentDate()[2]}-\r\n                ${this.getSplittedCurrentDate()[1]}-\r\n                ${this.getSplittedCurrentDate()[0]}\r\n            `),\r\n        ).pipe(\r\n            catchError(_ => EMPTY),\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe(async (response: StreamData<Paginator<PastTrainings>>) => {\r\n            this.sharedService.deletedTraining$$.next(response);\r\n            await this.toastControllerService.displayToast({\r\n                message: this.translateService.instant(response?.Value?.Results?.Message ?? ''),\r\n                duration: MESSAGE_DURATION.GENERAL,\r\n                color: 'primary',\r\n            });\r\n            await this.modalController.dismiss(false, DialogRoles.DELETE_TRAINING);\r\n        });\r\n    }\r\n\r\n    async onCancel(): Promise<void> {\r\n        await this.modalController.dismiss(false, DialogRoles.CANCEL);\r\n    }\r\n\r\n    private getSplittedCurrentDate(): string[] {\r\n        return (this.route.snapshot.queryParams.startDate as string)?.split('-');\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bl-more-training-action',\r\n    templateUrl: './more-training-action.component.html',\r\n    styleUrls: ['./more-training-action.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MoreTrainingActionComponent {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n//if using mobile device emulator: http://192.168.0.114:3000\r\nexport const environment = {\r\n    production: false,\r\n    BACKEND: 'http://localhost:3000',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(_err => {\r\n      //TODO\r\n  });\r\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t70079,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t25593,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t13225,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t4812,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t86655,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t44856,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t13059,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t58648,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t98308,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t44690,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t64090,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t36214,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t69447,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t79689,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t18840,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t40749,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t69667,\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t83288,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t35473,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t53634,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t22855,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t495,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t58737,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t99632,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t54446,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t32275,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t48050,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t18994,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t23592,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t35454,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t290,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t92666,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t64816,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t45534,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t94902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t91938,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t14832,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t90668,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t61624,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t19989,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t28902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t70199,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t48395,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t96357,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t38268,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t15269,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t32875,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 50863;\nmodule.exports = webpackAsyncContext;"],"names":["NgModule","PreloadAllModules","RouterModule","AuthGuard","NotFoundResolverService","NotFoundComponent","routes","path","redirectTo","pathMatch","loadChildren","then","module","AuthModule","TrainingModule","canLoad","component","resolve","AppRoutingModule","imports","forRoot","preloadingStrategy","exports","HttpClient","Injectable","Router","TranslateService","BehaviorSubject","of","mergeMap","switchMap","tap","environment","LocalStorageItems","AuthService","constructor","http","router","translateService","loggedUser$$","asObservable","isAuth$$","getToken","token","updateUserData","preferences","userData","JSON","parse","localStorage","getItem","USER_DATA","updatedUserData","Preferences","UserId","LanguageCode","WeightFormat","next","Object","setItem","stringify","signup","language","weightFormat","email","password","confirmPassword","signupData","Email","Password","ConfirmPassword","post","BACKEND","login","authData","pipe","response","Token","expiresInDuration","ExpiresIn","setAuthTimer","now","Date","expirationDate","getTime","saveLS","_id","navigate","use","_","autoLogin","ExpirationDate","expiresIn","logout","clearTimeout","tokenTimer","clearLS","duration","setTimeout","userId","removeItem","TRAINING_STATE","ALL_EXERCISES","providedIn","LoadingController","LoadingControllerService","loadingController","displayLoader","options","loading","create","message","instant","keyboardClose","present","dismissLoader","dismiss","MESSAGE_DURATION","ToastControllerService","NavigationService","authService","toastControllerService","setPreferences","put","displayToast","Message","GENERAL","color","ToastController","toastController","toast","DatePipe","ModalController","map","mapDateInterval","DeleteTrainingActionComponent","DeleteTrainingActionService","modalController","datePipe","perform","data","openDeleteTrainingDialog","modal","componentProps","title$","stream","dateCreated$","weekDays","dayIndex","value","transform","training","trainingDate","timeCreated$","timeCreated","training$","deleteTraining","trainingId","currentDate","params","delete","ChangeDetectionStrategy","ChangeDetectorRef","Component","ViewChild","FormControl","FormGroup","Validators","catchError","finalize","takeUntil","IonInput","EMPTY","LoginService","AuthCustomValidators","UnsubscribeService","IonFocusDurations","LoginComponent","unsubscribeService","loginService","changeDetectorRef","loadingControllerService","form","required","minLength","maxLength","asyncValidators","passwordFitsEmail","focusDuration","LOGIN","onSubmit","valid","isLoading","accessFormData","markForCheck","subscribe","formFieldName","get","args","read","selector","template","changeDetection","OnPush","providers","SignupService","SignupComponent","signupService","validators","isEmailAvailable","samePasswords","SIGNUP","Success","Input","PopoverController","take","LanguagesComponent","navigationService","popoverController","ImageUrl","LanguageName","changeLanguage","loggedUser$","endOfDay","endOfWeek","format","startOfDay","startOfWeek","QUERY_PARAMS_DATE_FORMAT","NewTrainingService","SideNavComponent","newTrainingService","ngOnInit","isAuthenticated$","isAuth$","loggedUserData$","onLogout","clearTrainingState","goToPastTrainings","startDate","weekStartsOn","endDate","queryParams","showBy","openPopover","$event","popover","event","side","IonDatetime","DialogRoles","DateTimePickerComponent","dateChanged","currentDateValue","dateValue","close","dateTimeEl","_a","cancel","undefined","CANCEL","select","confirm","SELECT_DATE","DeleteExerciseDialogComponent","onCancel","onDeleteExercise","DELETE_EXERCISE","EventEmitter","Output","ViewChildren","FormArray","delay","filter","getControlValueAccessor","CommonValidators","SetValidators","SetsComponent","formErrors","errors","mappedKeys","keys","key","concat","controls","forEach","group","setValidators","allSetsFilled","updateValueAndValidity","formStateChanged","emit","exerciseNameControl","valueChanges","accessFormField","enable","disable","exerciseStateChanged$","state","weightLiftedEl","first","setFocus","ngOnChanges","emitEvent","writeValue","length","set","addSet","registerOnChange","fn","formValue","registerOnTouched","onTouched","getSets","push","setNumber","weightLifted","disabled","min","max","isNumber","reps","pattern","bothValuesRequired","isSetValid","last","deleteSet","indexSet","removeAt","setDeleted","indexExercise","newTotal","calculateTotal","onChangeSets","total","isWeightLiftedValid","isRepsValid","_b","_c","_d","setAdded","newSet","formField","at","setIonComponentClass","isExerciseFormSubmitted","exerciseName","setConstituent","weightLiftedRequired","repsRequired","SetsComponent_1","forkJoin","from","Subject","startWith","DEFAULT_WEIGHT_FORMAT","EMPTY_TRAINING_EDIT","createInitialSet","RoundTotalWeightPipe","SingleExerciseValidators","INITIAL_WEIGHT","SingleExerciseComponent","roundTotalWeightPipe","exerciseStateChanged$$","currentTrainingChanged$","currentTrainingState","exercises","allExercisesChanged$","checkDuplicateExerciseName","checkExerciseNumber","exercise","addExercise","patchValue","sets","disabledTooltip","onExerciseNameChange","element","updateExerciseChoices","exerciseChanged","addNewExercise","getAlreadyUsedExercises","exerciseAdded","deleteExercise","isError","message$","swipeToClose","onDidDismiss","role","pushToAvailableExercises","trainingData","setsChanged","getExercises","onSetFormChange","setErrors","isAddingExercisesDisabled","currentExercisesLength","allExercisesLength","includes","isSubmitted$$","gatherAllFormData","apiNewTraining","editMode","updateTraining","editData","editTraining","addTraining","exerciseFormData","_exercise","splittedTotal","split","availableExercises","formSetData","apiSet","bodyweight","alreadyUsedExercises","SingleExerciseComponent_1","ActivatedRoute","SharedService","sharedService","deleteTrainingActionService","route","getSplittedCurrentDate","deletedTraining$$","Value","Results","DELETE_TRAINING","snapshot"],"sourceRoot":"webpack:///"}