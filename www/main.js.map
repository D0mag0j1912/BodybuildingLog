{"version":3,"file":"main.js","mappings":"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,eAAe,EAAE,CAAC,QAAQ;CAC7D,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACjBvB;AAC4B;AAE9B;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,yFAAsB,EAAE,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,IAAI,CAAC,EAAE;IACV,MAAM;AACV,CAAC,CAAC,CAAC;;;;;;;;;;;ACbL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/constants/snack-bar-duration.const.ts","./src/app/constants/spinner-size.const.ts","./src/app/guards/auth.guard.ts","./src/app/helpers/control-value-accessor.helper.ts","./src/app/helpers/dates.helper.ts","./src/app/helpers/error-matchers/exercise-name-error-state-matcher.helper.ts","./src/app/helpers/error-matchers/form-error-state-matcher.helper.ts","./src/app/helpers/is-never-check.helper.ts","./src/app/helpers/training/past-trainings/map-past-trainings-dates.helper.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/interceptors/error.interceptor.ts","./src/app/material.module.ts","./src/app/models/common/interfaces/common.model.ts","./src/app/models/common/interfaces/paginator.model.ts","./src/app/models/preferences.model.ts","./src/app/models/training/new-training/empty-training.model.ts","./src/app/models/training/past-trainings/past-trainings.model.ts","./src/app/models/training/shared/set.model.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/navigation.module.ts","./src/app/modules/shared.module.ts","./src/app/pipes/pipes.module.ts","./src/app/pipes/training/new-training/new-training.pipe.ts","./src/app/pipes/training/new-training/round-total-weight/round-total-weight.module.ts","./src/app/pipes/training/new-training/round-total-weight/round-total-weight.pipe.ts","./src/app/pipes/training/past-trainings/map-training-actions.pipe.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.module.ts","./src/app/pipes/training/past-trainings/show-all-exercises/show-all-exercises.pipe.ts","./src/app/services/auth/auth.service.ts","./src/app/services/auth/login.service.ts","./src/app/services/auth/signup.service.ts","./src/app/services/errors/sentry.service.ts","./src/app/services/shared/navigation.service.ts","./src/app/services/shared/not-found-resolver.service.ts","./src/app/services/shared/shared.service.ts","./src/app/services/shared/unsubscribe.service.ts","./src/app/services/training/new-training.service.ts","./src/app/services/training/training-actions/delete-training-action.service.ts","./src/app/validators/auth/auth.validators.ts","./src/app/validators/shared/common.validators.ts","./src/app/validators/training/set.validators.ts","./src/app/validators/training/single-exercise.validators.ts","./src/app/views/auth/login/login.component.ts","./src/app/views/auth/signup/signup.component.ts","./src/app/views/navigation/header/header.component.ts","./src/app/views/navigation/side-nav/side-nav.component.ts","./src/app/views/shared/dialog/dialog.component.ts","./src/app/views/shared/not-found/not-found.component.ts","./src/app/views/shared/pagination/pagination.component.ts","./src/app/views/shared/training/sets/sets.component.ts","./src/app/views/shared/training/single-exercise/single-exercise.component.ts","./src/app/views/shared/training/total-weight/total-weight.component.ts","./src/app/views/shared/training/training-actions/delete-training-action/delete-training-action.component.ts","./src/app/views/shared/training/training-actions/more-training-action/more-training-action.component.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm|lazy|/^/.*/.entry/.js$/|include: /.entry/.js$/|exclude: /.system/.entry/.js$/|groupOptions: {}|namespace object"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotFoundResolverService } from './services/shared/not-found-resolver.service';\r\nimport { NotFoundComponent } from './views/shared/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '/auth/login',\r\n        pathMatch: 'full',\r\n    },\r\n    {\r\n        path: 'auth',\r\n        loadChildren: async () => import('./modules/auth/auth.module').then(module => module.AuthModule),\r\n    },\r\n    {\r\n        path: 'training',\r\n        loadChildren: async () => import('./modules/training/training.module').then(module => module.TrainingModule),\r\n        canActivate: [AuthGuard],\r\n    },\r\n    {\r\n        path: 'not-found',\r\n        component: NotFoundComponent,\r\n        resolve: [NotFoundResolverService],\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '/not-found',\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { AuthResponseData } from './models/auth/auth-data.model';\r\nimport { LocalStorageItems } from './models/common/interfaces/common.model';\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { SharedService } from './services/shared/shared.service';\r\nimport { UnsubscribeService } from './services/shared/unsubscribe.service';\r\nimport { NewTrainingService } from './services/training/new-training.service';\r\n\r\n@Component({\r\n    selector: 'bl-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly sharedService: SharedService,\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n    ) {\r\n        this.translateService.setDefaultLang('en');\r\n        const authData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n        this.translateService.use(authData?.Preferences?.language || 'en')\r\n            .pipe(\r\n                takeUntil(this.unsubscribeService),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authService.autoLogin();\r\n        this.newTrainingService.keepTrainingState();\r\n        this.sharedService.keepQueryParams();\r\n    }\r\n}\r\n","import { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { init } from '@sentry/angular';\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\r\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\r\nimport { MaterialModule } from './material.module';\r\nimport { NavigationModule } from './modules/navigation.module';\r\nimport { SentryService } from './services/errors/sentry.service';\r\n\r\ninit({\r\n    dsn: 'https://b4903b17554c4e40bbada176e50e4719@o997027.ingest.sentry.io/5955490',\r\n});\r\n\r\nexport function httpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n    return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FlexLayoutModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        MaterialModule,\r\n        NavigationModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: httpLoaderFactory,\r\n                deps: [HttpClient],\r\n            },\r\n        }),\r\n        IonicModule.forRoot(),\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi: true,\r\n        }, {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ErrorInterceptor,\r\n            multi: true,\r\n        }, {\r\n            provide: ErrorHandler,\r\n            useClass: SentryService,\r\n        },\r\n        {\r\n            provide: RouteReuseStrategy,\r\n            useClass: IonicRouteStrategy,\r\n        },\r\n        HttpClient,\r\n        AuthGuard,\r\n\r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","\r\nexport const SNACK_BAR_DURATION = Object.freeze({\r\n    GENERAL: 3000,\r\n    ERROR: 5000,\r\n} as const);\r\n","\r\nexport const SPINNER_SIZE = 40;\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Route, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly router: Router,\r\n    ) { }\r\n\r\n    canActivate(\r\n        _route: ActivatedRouteSnapshot,\r\n        _state: RouterStateSnapshot,\r\n    ): Observable<boolean | UrlTree>  {\r\n        return this.authService.isAuth$.pipe(\r\n            take(1),\r\n            map((isAuth: boolean) => {\r\n                if (!isAuth) {\r\n                    return this.router.createUrlTree(['/auth/login']);\r\n                }\r\n                return true;\r\n            }),\r\n        );\r\n    }\r\n\r\n    canLoad(_route: Route): Observable<boolean | UrlTree> {\r\n        return this.authService.isAuth$.pipe(\r\n            take(1),\r\n            map((isAuth: boolean) => {\r\n                if (!isAuth) {\r\n                    return this.router.createUrlTree(['/auth/login']);\r\n                }\r\n                return true;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { forwardRef, InjectionToken, Type } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { SetsComponent } from '../views/shared/training/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../views/shared/training/single-exercise/single-exercise.component';\r\nimport { TotalWeightComponent } from '../views/shared/training/total-weight/total-weight.component';\r\n\r\nexport type Components = SingleExerciseComponent | SetsComponent | TotalWeightComponent;\r\n\r\nexport function getControlValueAccessor(component: Type<Components>): ControlValueAccessorType {\r\n    return {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => component),\r\n        multi: true,\r\n    };\r\n}\r\n\r\ntype ControlValueAccessorType = {\r\n    provide: InjectionToken<readonly ControlValueAccessor[]>;\r\n    useExisting: Type<Components>;\r\n    multi: boolean;\r\n};\r\n","import { startOfWeek, endOfWeek } from \"date-fns\";\r\nimport { DateInterval } from \"../models/training/past-trainings/past-trainings.model\";\r\n\r\nexport const isValidDate = (dateStr: string): boolean => !isNaN(new Date(dateStr).getDate());\r\n\r\nexport const constructDates = (date: Date): DateInterval => {\r\n    const startDate: Date = startOfWeek(date, {\r\n        weekStartsOn: 1,\r\n    });\r\n    const endDate: Date = endOfWeek(date, {\r\n        weekStartsOn: 1,\r\n    });\r\n    return {\r\n        StartDate: startDate,\r\n        EndDate: endDate,\r\n    } as DateInterval;\r\n};\r\n","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nexport class ExerciseNameErrorStateMatcher implements ErrorStateMatcher {\r\n\r\n    isErrorState(\r\n        control: FormControl,\r\n        form: FormGroupDirective | NgForm,\r\n    ): boolean {\r\n        const isSubmitted = form?.submitted;\r\n        return (form?.invalid && isSubmitted) ||\r\n            (control?.invalid && (control?.dirty || control?.touched || isSubmitted));\r\n    }\r\n}\r\n","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nexport class FormErrorStateMatcher implements ErrorStateMatcher {\r\n\r\n    isErrorState(\r\n        control: FormControl,\r\n        _form: FormGroupDirective | NgForm,\r\n    ): boolean {\r\n        const controlTouched: boolean = control && (control.dirty || control.touched);\r\n        const parentInvalid: boolean = control && control.parent && control.parent.invalid && (control.parent.dirty || control.parent.touched);\r\n        return parentInvalid && controlTouched;\r\n    }\r\n}\r\n","\r\nexport function isNeverCheck(_x: never): never {\r\n    throw new Error(\"Didn't expect to get here\");\r\n}\r\n","import { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { DateInterval, PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\n\r\nexport function mapDateInterval(response: StreamData<Paginator<PastTrainings>>): StreamData<Paginator<PastTrainings>> {\r\n    return {\r\n        ...response,\r\n        Value: {\r\n            ...response.Value,\r\n            Results: {\r\n                ...response.Value.Results,\r\n                Dates: {\r\n                    StartDate: new Date(response.Value?.Results?.Dates?.StartDate ?? null),\r\n                    EndDate: new Date(response.Value?.Results?.Dates?.EndDate ?? null),\r\n                } as DateInterval,\r\n            } as PastTrainings,\r\n        } as Paginator<PastTrainings>,\r\n    };\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n    ){}\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        const token: string = this.authService.getToken();\r\n        const authRequest: HttpRequest<unknown> = request.clone({ headers: request.headers.set('authorization', 'Bearer ' + token) });\r\n        return next.handle(authRequest);\r\n    }\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { captureException } from '@sentry/minimal';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { SNACK_BAR_DURATION } from '../constants/snack-bar-duration.const';\r\nimport { ErrorMessage } from '../models/common/interfaces/common.model';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private readonly snackBar: MatSnackBar,\r\n        private readonly translateService: TranslateService,\r\n    ){}\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        return next.handle(request).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                let errorMessage: string;\r\n                if(error instanceof HttpErrorResponse) {\r\n                    captureException(error);\r\n                    if(!window.navigator.onLine){\r\n                        errorMessage = this.translateService.instant('common.errors.internet_required');\r\n                    }\r\n                    else {\r\n                        if((error.error as ErrorMessage).statusCode === 404) {\r\n                            errorMessage = this.translateService.instant('common.errors.unknown_error');\r\n                        }\r\n                        else {\r\n                            if(Array.isArray((error.error as ErrorMessage).message)) {\r\n                                errorMessage = this.translateService.instant((error.error as ErrorMessage).message[0].substring(\r\n                                    (error.error as ErrorMessage).message[0].indexOf('@') + 1,\r\n                                    (error.error as ErrorMessage).message[0].length,\r\n                                ));\r\n                            }\r\n                            else {\r\n                                errorMessage = this.translateService.instant((error.error as ErrorMessage).message);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    errorMessage = this.translateService.instant('common.errors.unknown_error');\r\n                }\r\n                this.snackBar.open(errorMessage, null, {\r\n                    duration: SNACK_BAR_DURATION.ERROR,\r\n                    panelClass: 'app__snackbar-error',\r\n                });\r\n                return throwError(error as HttpErrorResponse);\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatDialogModule,\r\n        MatProgressSpinnerModule,\r\n        MatNativeDateModule,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatTooltipModule,\r\n        MatSnackBarModule,\r\n        MatCardModule,\r\n        MatMenuModule,\r\n        MatRadioModule,\r\n    ],\r\n})\r\nexport class MaterialModule {}\r\n","\r\nexport interface ErrorMessage {\r\n    readonly message: string;\r\n    readonly statusCode?: number;\r\n}\r\n\r\nexport interface StreamData<T> {\r\n    IsLoading: boolean;\r\n    IsError: boolean;\r\n    Value?: T;\r\n}\r\n\r\nexport enum LocalStorageItems {\r\n    TRAINING_STATE = 'trainingState',\r\n    USER_DATA = 'userData',\r\n    ALL_EXERCISES = 'allExercises',\r\n    QUERY_PARAMS = 'queryParams',\r\n}\r\n","import { DateInterval } from \"../../training/past-trainings/past-trainings.model\";\r\nimport { Page } from \"../types/page.type\";\r\n\r\nexport interface Paginator<T> {\r\n    readonly Results?: T;\r\n    readonly Next?: PaginatorParams;\r\n    readonly Previous?: PaginatorParams;\r\n    readonly CurrentPage?: number;\r\n    readonly Size?: number;\r\n    readonly TotalCount?: number;\r\n    readonly TotalPages?: number;\r\n}\r\n\r\nexport interface PaginatorParams {\r\n    readonly Page: number;\r\n    readonly Size: number;\r\n}\r\n\r\nexport interface PaginatorChanged {\r\n    readonly Page: number;\r\n    readonly Size: number;\r\n    readonly IsSearch?: boolean;\r\n    readonly PageType?: Page;\r\n    readonly DateInterval?: DateInterval;\r\n    readonly EarliestTrainingDate?: Date;\r\n}\r\n\r\nexport const DEFAULT_SIZE = 3;\r\nexport const INITIAL_PAGE = 1;\r\n","\r\nexport interface Preferences {\r\n    userId?: string;\r\n    language?: Language;\r\n    weightFormat?: WeightFormat;\r\n    //TODO: Training: { showTrainingsBy?: 'week' | 'day' }\r\n}\r\n\r\nexport type Language = 'en' | 'hr';\r\n\r\nexport type WeightFormat = 'lbs' | 'kg';\r\n\r\nexport const DEFAULT_WEIGHT_FORMAT: WeightFormat = 'kg';\r\n","import { Exercise } from '../exercise.model';\r\nimport { SingleExercise } from '../shared/single-exercise.model';\r\nimport { Training } from './new-training.model';\r\n\r\nexport type EditNewTrainingData = {\r\n    _id?: string;\r\n    editedDate?: Date;\r\n    editTraining?: Training;\r\n};\r\n\r\nexport const EMPTY_TRAINING_EDIT: EditNewTrainingData = {\r\n    _id: null,\r\n    editedDate: null,\r\n    editTraining: null,\r\n};\r\n\r\nexport const EMPTY_TRAINING: Training = {\r\n    exercise: [],\r\n    _id: '',\r\n    bodyweight: null,\r\n    editMode: false,\r\n    userId: null,\r\n};\r\n\r\nexport const createEmptyExercise = (exercises: Exercise[]): SingleExercise =>\r\n    ({\r\n        exerciseName: null,\r\n        sets: [],\r\n        total: null,\r\n        disabledTooltip: true,\r\n        availableExercises: [ ...exercises ],\r\n    });\r\n","import { Training } from '../new-training/new-training.model';\r\n\r\nexport interface PastTrainings {\r\n    readonly Trainings: Training[];\r\n    readonly Dates: DateInterval;\r\n    readonly IsPreviousWeek?: boolean;\r\n    readonly IsNextWeek?: boolean;\r\n    readonly EarliestTrainingDate?: Date;\r\n    readonly Message?: string;\r\n}\r\n\r\nexport interface DateInterval {\r\n    readonly StartDate: Date;\r\n    readonly EndDate: Date;\r\n}\r\n\r\nexport interface PastTrainingsQueryParams {\r\n    readonly startDate: string;\r\n    readonly endDate: string;\r\n    readonly search?: string;\r\n    readonly page?: string;\r\n    readonly size?: string;\r\n}\r\n\r\nexport const QUERY_PARAMS_DATE_FORMAT = 'dd-MM-yyyy';\r\nexport const TEMPLATE_DATE_FORMAT = 'dd.MM.yyyy';\r\n","\r\nexport interface Set {\r\n    setNumber: number;\r\n    weightLifted: number;\r\n    reps: number;\r\n    _id?: string;\r\n}\r\n\r\nexport interface SetStateChanged {\r\n    indexExercise: number;\r\n    indexSet: number;\r\n    isWeightLiftedValid?: boolean;\r\n    isRepsValid?: boolean;\r\n    newTotal?: number;\r\n    newSet?: Set;\r\n}\r\n\r\nexport interface SetTrainingData {\r\n    exerciseName: string;\r\n    setNumber: number;\r\n    weightLifted: number;\r\n    reps: number;\r\n    total: number;\r\n}\r\n\r\nexport function createInitialSet(): Set[] {\r\n    const sets: Set[] = [];\r\n    sets.push({\r\n        setNumber: 1,\r\n        weightLifted: null,\r\n        reps: null,\r\n    } as Set);\r\n    return sets as Set[];\r\n}\r\n\r\nexport type SetFormValidationErrors =\r\n    'setNotFilled' |\r\n    'setNotEntered' |\r\n    'setNotValid' |\r\n    'repsRequired' |\r\n    'weightLiftedRequired' |\r\n    'min' |\r\n    'max' |\r\n    'pattern' |\r\n    'onlyNumbers';\r\n\r\nexport type FormSetData = {\r\n    setNumber?: number;\r\n    weightLifted?: number;\r\n    reps?: number;\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from 'src/app/views/auth/login/login.component';\r\nimport { SignupComponent } from 'src/app/views/auth/signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignupComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { LoginService } from '../../services/auth/login.service';\r\nimport { SignupService } from '../../services/auth/signup.service';\r\nimport { LoginComponent } from '../../views/auth/login/login.component';\r\nimport { SignupComponent } from '../../views/auth/signup/signup.component';\r\nimport { SharedModule } from '../shared.module';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\nconst COMPONENTS = [\r\n    SignupComponent,\r\n    LoginComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    IonicModule,\r\n];\r\n\r\nconst MY_IMPORTS = [\r\n    MaterialModule,\r\n    SharedModule,\r\n    AuthRoutingModule,\r\n];\r\n\r\nconst SERVICES = [\r\n    SignupService,\r\n    LoginService,\r\n];\r\n\r\n@NgModule({\r\n    declarations: [ ...COMPONENTS ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...MY_IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n    providers: [ ...SERVICES ],\r\n})\r\nexport class AuthModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { HeaderComponent } from '../views/navigation/header/header.component';\r\nimport { SideNavComponent } from '../views/navigation/side-nav/side-nav.component';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\nconst COMPONENTS = [\r\n    HeaderComponent,\r\n    SideNavComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    TranslateModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    RouterModule,\r\n    IonicModule,\r\n];\r\n\r\nconst IMPORTS = [AuthModule];\r\n\r\n@NgModule({\r\n    declarations: [ ...COMPONENTS ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n})\r\nexport class NavigationModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from '../material.module';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { RoundTotalWeightModule } from '../pipes/training/new-training/round-total-weight/round-total-weight.module';\r\nimport { ShowAllExercisesModule } from '../pipes/training/past-trainings/show-all-exercises/show-all-exercises.module';\r\nimport { NotFoundResolverService } from '../services/shared/not-found-resolver.service';\r\nimport { DeleteTrainingActionService } from '../services/training/training-actions/delete-training-action.service';\r\nimport { DialogComponent } from '../views/shared/dialog/dialog.component';\r\nimport { NotFoundComponent } from '../views/shared/not-found/not-found.component';\r\nimport { SetsComponent } from '../views/shared/training/sets/sets.component';\r\nimport { SingleExerciseComponent } from '../views/shared/training/single-exercise/single-exercise.component';\r\nimport { TotalWeightComponent } from '../views/shared/training/total-weight/total-weight.component';\r\nimport { DeleteTrainingActionComponent } from '../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\nimport { MoreTrainingActionComponent } from '../views/shared/training/training-actions/more-training-action/more-training-action.component';\r\nimport { PaginationComponent } from '../views/shared/pagination/pagination.component';\r\n\r\nconst COMPONENTS = [\r\n    DialogComponent,\r\n    SingleExerciseComponent,\r\n    SetsComponent,\r\n    TotalWeightComponent,\r\n    NotFoundComponent,\r\n    PaginationComponent,\r\n];\r\n\r\nconst ACTION_COMPONENTS = [\r\n    DeleteTrainingActionComponent,\r\n    MoreTrainingActionComponent,\r\n];\r\n\r\nconst EXTERNAL_IMPORTS = [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    TranslateModule,\r\n];\r\n\r\nconst IMPORTS = [\r\n    ShowAllExercisesModule,\r\n    PipesModule,\r\n    RoundTotalWeightModule,\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ...COMPONENTS,\r\n        ...ACTION_COMPONENTS,\r\n    ],\r\n    imports: [\r\n        ...EXTERNAL_IMPORTS,\r\n        ...IMPORTS,\r\n    ],\r\n    exports: [ ...COMPONENTS ],\r\n    entryComponents: [\r\n        DialogComponent,\r\n        DeleteTrainingActionComponent,\r\n    ],\r\n    providers: [\r\n        NotFoundResolverService,\r\n        DeleteTrainingActionService,\r\n    ],\r\n})\r\nexport class SharedModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { NewTrainingPipe } from './training/new-training/new-training.pipe';\r\nimport { MapTrainingItemActionsPipe } from './training/past-trainings/map-training-actions.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NewTrainingPipe,\r\n        MapTrainingItemActionsPipe,\r\n    ],\r\n    exports: [\r\n        NewTrainingPipe,\r\n        MapTrainingItemActionsPipe,\r\n    ],\r\n})\r\nexport class PipesModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { Exercise } from '../../../models/training/exercise.model';\r\nimport { Training } from '../../../models/training/new-training/new-training.model';\r\nimport { NewTrainingService } from '../../../services/training/new-training.service';\r\n\r\n@Pipe({\r\n    name: 'newTraining',\r\n})\r\nexport class NewTrainingPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private readonly newTrainingService: NewTrainingService,\r\n    ) {}\r\n\r\n    transform(\r\n        _value: Observable<Exercise[]>,\r\n        index: number,\r\n        _exerciseChanged: boolean,\r\n    ): Observable<Exercise[]> {\r\n        return this.newTrainingService.currentTrainingChanged$\r\n            .pipe(\r\n                take(1),\r\n                map((training: Training) => training.exercise[index]?.availableExercises ?? []),\r\n        );\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RoundTotalWeightPipe } from './round-total-weight.pipe';\r\n\r\n@NgModule({\r\n    declarations: [RoundTotalWeightPipe],\r\n    exports: [RoundTotalWeightPipe],\r\n    providers: [RoundTotalWeightPipe],\r\n})\r\nexport class RoundTotalWeightModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DEFAULT_WEIGHT_FORMAT } from '../../../../models/preferences.model';\r\n\r\n@Pipe({\r\n    name: 'roundTotalWeight',\r\n})\r\nexport class RoundTotalWeightPipe implements PipeTransform {\r\n\r\n    transform(totalWeight: number): string {\r\n        return totalWeight ? `${(Math.round(totalWeight * 100) / 100).toString()} ${DEFAULT_WEIGHT_FORMAT}` : `0 ${DEFAULT_WEIGHT_FORMAT}`;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TrainingItemActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\n\r\ninterface TrainingItemActionsProperties {\r\n    icon: string;\r\n    tooltip: string;\r\n}\r\n\r\n@Pipe({\r\n    name: 'mapTrainingItemActions',\r\n})\r\n\r\nexport class MapTrainingItemActionsPipe implements PipeTransform {\r\n\r\n    private readonly actionToIcon: { [key: string]: TrainingItemActionsProperties } = {\r\n        'delete': {\r\n            icon: 'delete',\r\n            tooltip: 'training.past_trainings.buttons.delete_training',\r\n        },\r\n        'more': {\r\n            icon: 'more_vert',\r\n            tooltip: 'TODO',\r\n        },\r\n    };\r\n\r\n    transform(\r\n        action: TrainingItemActions,\r\n        purpose: string,\r\n    ): string {\r\n        if (purpose === 'icon') {\r\n            return this.actionToIcon[action].icon as string;\r\n        }\r\n        else {\r\n            return this.actionToIcon[action].tooltip as string;\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ShowAllExercisesPipe } from './show-all-exercises.pipe';\r\n\r\n@NgModule({\r\n    declarations: [ShowAllExercisesPipe],\r\n    exports: [ShowAllExercisesPipe],\r\n})\r\nexport class ShowAllExercisesModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Training } from '../../../../models/training/new-training/new-training.model';\r\nimport { SingleExercise } from '../../../../models/training/shared/single-exercise.model';\r\n\r\n@Pipe({\r\n    name: 'showAllExercises',\r\n})\r\nexport class ShowAllExercisesPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    transform(training: Training): Observable<string> {\r\n        return this.translateService.stream(training.exercise?.map((x: SingleExercise) => x?.exerciseName) ?? []).pipe(\r\n            map((value: {[key: string]: string}) => {\r\n                let exercisesToConcat = '';\r\n                Object.values(value).forEach((exerciseName: string, index: number) => {\r\n                    exercisesToConcat += `${index+1}. ${exerciseName}\\n`;\r\n                });\r\n                return exercisesToConcat as string;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { mergeMap, switchMap, tap } from 'rxjs/operators';\r\nimport { Preferences } from 'src/app/models/preferences.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Login, Signup } from '../../models/auth/auth-data.model';\r\nimport { AuthResponseData } from '../../models/auth/auth-data.model';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\nimport { Language, WeightFormat } from '../../models/preferences.model';\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n    private readonly loggedUser$$: BehaviorSubject<AuthResponseData> = new BehaviorSubject<AuthResponseData>(null);\r\n    readonly loggedUser$: Observable<AuthResponseData> = this.loggedUser$$.asObservable();\r\n\r\n    private readonly isAuth$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    readonly isAuth$: Observable<boolean> = this.isAuth$$.asObservable();\r\n\r\n    private tokenTimer: NodeJS.Timeout;\r\n    private token: string;\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly router: Router,\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    getToken(): string {\r\n        return this.token;\r\n    }\r\n\r\n    updateUserData(preferences?: Preferences): void {\r\n        //TODO: Ovdje treba pokupiti podatke iz Subjecta, a ne LS\r\n        const userData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n        const updatedUserData: AuthResponseData = {\r\n            ...userData,\r\n            Preferences: {\r\n                userId: preferences.userId,\r\n                language: preferences.language,\r\n                weightFormat: 'kg',\r\n            } as Preferences,\r\n        };\r\n        this.loggedUser$$.next({ ...updatedUserData });\r\n        localStorage.setItem(LocalStorageItems.USER_DATA, JSON.stringify({ ...updatedUserData }));\r\n    }\r\n\r\n    signup(\r\n        language: Language,\r\n        weightFormat: WeightFormat,\r\n        email: string,\r\n        password: string,\r\n        confirmPassword: string,\r\n    ): Observable<AuthResponseData> {\r\n        const signupData: Signup = {\r\n            email,\r\n            password,\r\n            confirmPassword,\r\n        };\r\n        const preferences: Partial<Preferences> = {\r\n            language: language,\r\n            weightFormat: weightFormat,\r\n        };\r\n        return this.http.post<AuthResponseData>(environment.BACKEND + '/auth/signup', {\r\n            signupData: signupData,\r\n            preferences: preferences,\r\n        });\r\n    }\r\n\r\n    login(\r\n        email: string,\r\n        password: string,\r\n    ): Observable<AuthResponseData> {\r\n        const authData: Login = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        return this.http.post<AuthResponseData>(environment.BACKEND + '/auth/login', authData).pipe(\r\n            tap(async (response: AuthResponseData) => {\r\n                if (response.Token) {\r\n                    this.loggedUser$$.next(response);\r\n                    this.isAuth$$.next(true);\r\n                    this.token = response.Token as string;\r\n                    const expiresInDuration: number = response.ExpiresIn as number;\r\n                    this.setAuthTimer(expiresInDuration);\r\n                    const now: Date = new Date();\r\n                    const expirationDate: Date = new Date(now.getTime() + expiresInDuration * 1000);\r\n                    this.saveLS(\r\n                        this.token,\r\n                        expirationDate,\r\n                        response._id,\r\n                        response.Preferences,\r\n                    );\r\n                    await this.router.navigate(['/training/new-training']);\r\n                }\r\n            }),\r\n            mergeMap((response: AuthResponseData) =>\r\n                this.translateService.use(response.Preferences.language).pipe(\r\n                    switchMap(_ => of(response)),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n\r\n    autoLogin(): void {\r\n        if (JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA))) {\r\n            const userData: AuthResponseData = JSON.parse(localStorage.getItem(LocalStorageItems.USER_DATA));\r\n            if (!userData.Token || !userData.ExpirationDate) {\r\n                return;\r\n            }\r\n            const authData: AuthResponseData = {\r\n                Token: userData.Token,\r\n                ExpirationDate: new Date(userData.ExpirationDate),\r\n                _id: userData._id,\r\n                Preferences: userData.Preferences,\r\n            };\r\n            const now: Date = new Date();\r\n            const expiresIn: number = authData.ExpirationDate.getTime() - now.getTime();\r\n            if (expiresIn > 0) {\r\n                this.token = userData.Token;\r\n                this.setAuthTimer(expiresIn / 1000);\r\n                this.isAuth$$.next(true);\r\n                this.loggedUser$$.next(authData);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(): Promise<void> {\r\n        this.token = null;\r\n        this.isAuth$$.next(false);\r\n        clearTimeout(this.tokenTimer);\r\n        this.clearLS();\r\n        await this.router.navigate(['/auth/login']);\r\n    }\r\n\r\n    private setAuthTimer(duration: number): void {\r\n        this.tokenTimer = setTimeout(async () => {\r\n            await this.logout();\r\n        }, duration * 1000);\r\n    }\r\n\r\n    private saveLS(\r\n        token: string,\r\n        expirationDate: Date,\r\n        userId: string,\r\n        preferences: Preferences,\r\n    ): void {\r\n        const userData: AuthResponseData = {\r\n            Token: token,\r\n            ExpirationDate: expirationDate,\r\n            _id: userId,\r\n            Preferences: preferences,\r\n        };\r\n        localStorage.setItem(LocalStorageItems.USER_DATA, JSON.stringify(userData));\r\n    }\r\n\r\n    private clearLS(): void {\r\n        localStorage.removeItem(LocalStorageItems.USER_DATA);\r\n        localStorage.removeItem(LocalStorageItems.TRAINING_STATE);\r\n        localStorage.removeItem(LocalStorageItems.ALL_EXERCISES);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n    ) {}\r\n\r\n    passwordFitsEmail(\r\n        email: string,\r\n        password: string,\r\n    ): Observable<boolean> {\r\n        const params = `?email=${email}&password=${password}`;\r\n        return this.http.get<boolean>(environment.BACKEND + '/check_pass' + params);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SignupService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n    ){}\r\n\r\n    getEmails(email: string): Observable<boolean> {\r\n        const params = `?email=${email}`;\r\n        return this.http.get<boolean>(environment.BACKEND + '/get_all_emails' + params);\r\n    }\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { captureException } from '@sentry/minimal';\r\n\r\n@Injectable()\r\nexport class SentryService implements ErrorHandler {\r\n\r\n    handleError(error: unknown): void {\r\n        captureException(error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SNACK_BAR_DURATION } from '../../constants/snack-bar-duration.const';\r\nimport { GeneralResponseData } from '../../models/general-response.model';\r\nimport { Preferences, WeightFormat } from '../../models/preferences.model';\r\nimport { Language } from '../../models/preferences.model';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NavigationService {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly authService: AuthService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly snackBar: MatSnackBar,\r\n    ) {}\r\n\r\n    setPreferences(\r\n        userId: string,\r\n        language: Language,\r\n        weightFormat: WeightFormat,\r\n    ): Observable<GeneralResponseData> {\r\n        const preferences: Partial<Preferences> = {\r\n            language: language,\r\n            weightFormat: weightFormat,\r\n        };\r\n        return this.http.put<GeneralResponseData>(environment.BACKEND + `/preferences/${userId}`, { preferences: preferences }).pipe(\r\n            tap(_ => {\r\n                this.authService.updateUserData({\r\n                    userId: userId,\r\n                    language: language,\r\n                    weightFormat: weightFormat,\r\n                } as Preferences);\r\n            }),\r\n            switchMap((response: GeneralResponseData) =>\r\n                this.translateService.use(language).pipe(\r\n                    tap(_ => {\r\n                        this.snackBar.open(this.translateService.instant(response.Message), null, {\r\n                            duration: SNACK_BAR_DURATION.GENERAL,\r\n                            panelClass: 'app__snackbar',\r\n                        });\r\n                    }),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\n\r\n@Injectable()\r\nexport class NotFoundResolverService implements Resolve<void> {\r\n\r\n    resolve(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): void {\r\n        localStorage.removeItem(LocalStorageItems.TRAINING_STATE);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { StreamData } from '../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings, PastTrainingsQueryParams } from '../../models/training/past-trainings/past-trainings.model';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SharedService {\r\n\r\n    readonly editingTraining$$: Subject<boolean> = new Subject<boolean>();\r\n\r\n    readonly pastTrainingsQueryParams$$: BehaviorSubject<PastTrainingsQueryParams> = new BehaviorSubject<PastTrainingsQueryParams>(null);\r\n\r\n    readonly deletedTraining$$: Subject<StreamData<Paginator<PastTrainings>>> = new Subject<StreamData<Paginator<PastTrainings>>>();\r\n\r\n    subtractTwoHours(date: Date): Date {\r\n        return new Date(new Date(date).setHours(new Date(date).getHours() - 2));\r\n    }\r\n\r\n    keepQueryParams(): void {\r\n        const queryParams = JSON.parse(localStorage.getItem(LocalStorageItems.QUERY_PARAMS));\r\n        if (!queryParams) {\r\n            return;\r\n        }\r\n        this.pastTrainingsQueryParams$$.next(queryParams);\r\n    }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UnsubscribeService extends Subject<void> implements OnDestroy {\r\n\r\n    ngOnDestroy(): void {\r\n        this.next();\r\n        this.complete();\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { AuthResponseData } from 'src/app/models/auth/auth-data.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { StreamData } from '../../models/common/interfaces/common.model';\r\nimport { LocalStorageItems } from '../../models/common/interfaces/common.model';\r\nimport { GeneralResponseData } from '../../models/general-response.model';\r\nimport { Exercise } from '../../models/training/exercise.model';\r\nimport { createEmptyExercise, EMPTY_TRAINING } from '../../models/training/new-training/empty-training.model';\r\nimport { Training } from '../../models/training/new-training/new-training.model';\r\nimport { SetTrainingData } from '../../models/training/shared/set.model';\r\nimport { Set } from '../../models/training/shared/set.model';\r\nimport { SingleExercise } from '../../models/training/shared/single-exercise.model';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NewTrainingService {\r\n\r\n    private readonly allExercisesChanged$$: BehaviorSubject<Exercise[]> = new BehaviorSubject<Exercise[]>([]);\r\n    readonly allExercisesChanged$: Observable<Exercise[]> = this.allExercisesChanged$$.asObservable();\r\n\r\n    private readonly currentTrainingChanged$$: BehaviorSubject<Training> = new BehaviorSubject<Training>(EMPTY_TRAINING);\r\n    readonly currentTrainingChanged$: Observable<Training> = this.currentTrainingChanged$$.asObservable();\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly authService: AuthService,\r\n    ) {}\r\n\r\n    getExercises(): Observable<StreamData<Exercise[]>> {\r\n        return this.http.get<StreamData<Exercise[]>>(environment.BACKEND + '/training/get_exercises').pipe(\r\n            switchMap((response: StreamData<Exercise[]>) => {\r\n                const trainingState: Training = JSON.parse(localStorage.getItem(LocalStorageItems.TRAINING_STATE));\r\n                if (!trainingState) {\r\n                    return this.authService.loggedUser$.pipe(\r\n                        take(1),\r\n                        tap((authResponseData: AuthResponseData) => {\r\n                            this.updateTrainingState(\r\n                                response.Value,\r\n                                true,\r\n                                authResponseData._id,\r\n                            );\r\n                            this.allExercisesChanged$$.next(response.Value);\r\n                            localStorage.setItem(LocalStorageItems.ALL_EXERCISES, JSON.stringify(response.Value));\r\n                        }),\r\n                        switchMap(_ => of(response)),\r\n                    );\r\n                }\r\n                else {\r\n                    return of(response);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    addTraining(trainingData: Training): Observable<GeneralResponseData> {\r\n        return this.http.post<GeneralResponseData>(environment.BACKEND + '/training/handle_training', { trainingData: trainingData });\r\n    }\r\n\r\n    updateTraining(\r\n        trainingData: Training,\r\n        trainingId: string,\r\n    ): Observable<GeneralResponseData> {\r\n        return this.http.put<GeneralResponseData>(environment.BACKEND + `/training/handle_training/${trainingId}`, { updatedTrainingData: trainingData });\r\n    }\r\n\r\n    /**************************************** */\r\n\r\n    getCurrentTrainingState(): Training {\r\n        return this.currentTrainingChanged$$.getValue();\r\n    }\r\n\r\n    addBodyweightToStorage(value: string): void {\r\n        const updatedTraining = {\r\n            ...this.currentTrainingChanged$$.getValue(),\r\n            bodyweight: +value,\r\n        };\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    deleteSet(\r\n        indexExercise: number,\r\n        indexSet: number,\r\n        newTotal: number,\r\n    ): void {\r\n        const updatedTraining: Training = { ...this.currentTrainingChanged$$.getValue() };\r\n        updatedTraining.exercise[indexExercise].sets.splice(indexSet, 1);\r\n        updatedTraining.exercise[indexExercise].sets.map((set: Set) => {\r\n            if (set.setNumber > (indexSet + 1)) {\r\n                set.setNumber--;\r\n            }\r\n        });\r\n        updatedTraining.exercise[indexExercise].total = newTotal;\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    pushToAvailableExercises(\r\n        currentTrainingState: Training,\r\n        toBeAddedExercise: Exercise[],\r\n    ): void {\r\n        const updatedTraining: Training = { ...currentTrainingState };\r\n        updatedTraining.exercise.map((exercise: SingleExercise) => {\r\n            const isDeletedExerciseInAE: Exercise = exercise.availableExercises.find((exercise: Exercise) => exercise._id === toBeAddedExercise[0]._id);\r\n            if (!isDeletedExerciseInAE) {\r\n                exercise.availableExercises.push(toBeAddedExercise[0]);\r\n                exercise.availableExercises.sort(this.compare);\r\n            }\r\n        });\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    deleteExercise(\r\n        currentTrainingState: Training,\r\n        deletedExerciseName?: string,\r\n        indexExercise?: number,\r\n    ): Observable<[Training, Exercise[]]> {\r\n        let updatedExercises: SingleExercise[] = [ ...currentTrainingState.exercise ];\r\n        let updatedTraining: Training;\r\n        if (deletedExerciseName) {\r\n            return this.allExercisesChanged$.pipe(\r\n                take(1),\r\n                tap(_ => {\r\n                    updatedExercises = updatedExercises.filter((exercise: SingleExercise) => exercise.exerciseName !== deletedExerciseName);\r\n                    updatedTraining = {\r\n                        ...currentTrainingState,\r\n                        exercise: updatedExercises,\r\n                    };\r\n                }),\r\n                map((allExercises: Exercise[]) =>\r\n                    [\r\n                        updatedTraining,\r\n                        allExercises.filter(exercise => exercise.name === deletedExerciseName),\r\n                    ],\r\n                ),\r\n            );\r\n        }\r\n        else {\r\n            updatedExercises = updatedExercises.filter((_exercise: SingleExercise, index: number) => index !== indexExercise);\r\n            updatedTraining = {\r\n                ...currentTrainingState,\r\n                exercise: updatedExercises,\r\n            };\r\n            this.saveTrainingData(updatedTraining);\r\n            return of([\r\n                updatedTraining,\r\n                null,\r\n            ]);\r\n        }\r\n    }\r\n\r\n    setsChanged(trainingData: SetTrainingData): void {\r\n        const updatedTraining: Training = { ...this.currentTrainingChanged$$.getValue() };\r\n        const indexOfChangedExercise: number = updatedTraining.exercise.findIndex((singleExercise: SingleExercise) => singleExercise.exerciseName === trainingData.exerciseName);\r\n        const indexFoundSet = updatedTraining.exercise[indexOfChangedExercise].sets.findIndex(set => set.setNumber === trainingData.setNumber);\r\n\r\n        if (indexFoundSet > -1) {\r\n            updatedTraining.exercise[indexOfChangedExercise].sets[indexFoundSet] = {\r\n                ...updatedTraining.exercise[indexOfChangedExercise].sets[indexFoundSet],\r\n                weightLifted: trainingData.weightLifted,\r\n                reps: trainingData.reps,\r\n            };\r\n            updatedTraining.exercise[indexOfChangedExercise].total = trainingData.total;\r\n        }\r\n        else {\r\n            updatedTraining.exercise[indexOfChangedExercise].sets.push({\r\n                setNumber: trainingData.setNumber,\r\n                weightLifted: trainingData.weightLifted,\r\n                reps: trainingData.reps,\r\n            });\r\n            updatedTraining.exercise[indexOfChangedExercise].total = trainingData.total;\r\n        }\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    addNewExercise(alreadyUsedExercises: string[]): void {\r\n        const allExercises: Exercise[] = [ ...this.allExercisesChanged$$.getValue() ];\r\n        const availableExercises: Exercise[] = allExercises.filter((exercise: Exercise) => alreadyUsedExercises.indexOf(exercise.name) === -1);\r\n        this.updateTrainingState(availableExercises);\r\n    }\r\n\r\n    updateExerciseChoices(\r\n        selectedExercise: string,\r\n        selectedIndex: number,\r\n        disabledTooltip: boolean,\r\n    ): void {\r\n        const updatedTraining: Training = { ...this.currentTrainingChanged$$.getValue() };\r\n        updatedTraining.exercise[selectedIndex].exerciseName = selectedExercise;\r\n        updatedTraining.exercise[selectedIndex].disabledTooltip = disabledTooltip;\r\n        updatedTraining.exercise.forEach((exercise: SingleExercise, index: number) => {\r\n            if (index !== selectedIndex) {\r\n                exercise.availableExercises = exercise.availableExercises.filter((exercise: Exercise) => exercise.name !== selectedExercise);\r\n            }\r\n        });\r\n        this.saveTrainingData({ ...updatedTraining });\r\n    }\r\n\r\n    keepTrainingState(): void {\r\n        const trainingState: Training = JSON.parse(localStorage.getItem(LocalStorageItems.TRAINING_STATE));\r\n        const allExercises: Exercise[] = JSON.parse(localStorage.getItem(LocalStorageItems.ALL_EXERCISES));\r\n\r\n        if (!trainingState || !allExercises) {\r\n            return;\r\n        }\r\n        this.currentTrainingChanged$$.next({ ...trainingState });\r\n        this.allExercisesChanged$$.next([ ...allExercises ]);\r\n    }\r\n\r\n    updateTrainingState(\r\n        exercises: Exercise[],\r\n        restartAll?: boolean,\r\n        userId?: string,\r\n    ): void {\r\n        let updatedTraining: Training = this.currentTrainingChanged$$.getValue();\r\n        if (restartAll) {\r\n            updatedTraining = {\r\n                ...EMPTY_TRAINING,\r\n                userId: userId,\r\n            };\r\n        }\r\n        updatedTraining.exercise.push(createEmptyExercise(exercises));\r\n        this.saveTrainingData(updatedTraining);\r\n    }\r\n\r\n    updateTrainingData(editTraining: Training): void {\r\n        this.saveTrainingData({ ...editTraining });\r\n    }\r\n\r\n    clearTrainingData(): void {\r\n        this.saveTrainingData({ ...EMPTY_TRAINING });\r\n    }\r\n\r\n    private saveTrainingData(updatedTraining: Training): void {\r\n        this.currentTrainingChanged$$.next({ ...updatedTraining });\r\n        localStorage.setItem(LocalStorageItems.TRAINING_STATE, JSON.stringify({ ...updatedTraining }));\r\n    }\r\n\r\n    private compare(\r\n        a: Exercise,\r\n        b: Exercise,\r\n    ): number {\r\n        if (a.name < b.name) {\r\n            return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Training } from 'src/app/models/training/new-training/new-training.model';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { mapDateInterval } from '../../../helpers/training/past-trainings/map-past-trainings-dates.helper';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { TrainingActions } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport { DeleteTrainingActionData } from '../../../models/training/past-trainings/training-actions/training-actions.model';\r\nimport {\r\n    DeleteTrainingActionComponent,\r\n    DeleteTrainingActionDialogData } from '../../../views/shared/training/training-actions/delete-training-action/delete-training-action.component';\r\n\r\n@Injectable()\r\nexport class DeleteTrainingActionService implements TrainingActions {\r\n\r\n    constructor(\r\n        private readonly http: HttpClient,\r\n        private readonly dialog: MatDialog,\r\n        private readonly datePipe: DatePipe,\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    perform(data: DeleteTrainingActionData): void {\r\n        this.openDeleteTrainingDialog(data);\r\n    }\r\n\r\n    openDeleteTrainingDialog(data: DeleteTrainingActionData): void {\r\n        this.dialog.open(DeleteTrainingActionComponent, {\r\n            data: {\r\n                title$: this.translateService.stream('training.past_trainings.actions.delete_training') as Observable<string>,\r\n                dateCreated$: this.translateService.stream(`weekdays.${data.weekDays[data.dayIndex]}`).pipe(\r\n                    map((value: { [key: string]: string }) => `${value} (${this.datePipe.transform(data.training.createdAt as Date, 'dd.MM.yyyy')})`),\r\n                ) as Observable<string>,\r\n                timeCreated$: of(data.timeCreated) as Observable<string>,\r\n                training$: of(data.training as Training),\r\n                deleteTrainingFn: (\r\n                    trainingId: string,\r\n                    currentDate: Date,\r\n                ) => this.deleteTraining(trainingId, currentDate),\r\n            } as DeleteTrainingActionDialogData,\r\n            panelClass: 'delete-training-dialog',\r\n        });\r\n    }\r\n\r\n    deleteTraining(\r\n        trainingId: string,\r\n        currentDate: Date,\r\n    ): Observable<StreamData<Paginator<PastTrainings>>> {\r\n        const params = `?currentDate=${currentDate}`;\r\n        return this.http.delete<StreamData<Paginator<PastTrainings>>>(environment.BACKEND + `/training/delete_training/${trainingId}${params}`)\r\n            .pipe(\r\n                map((response: StreamData<Paginator<PastTrainings>>) => mapDateInterval(response)),\r\n            );\r\n    }\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { of, timer } from 'rxjs';\r\nimport { catchError, finalize, map, switchMap } from 'rxjs/operators';\r\nimport { SignupService } from 'src/app/services/auth/signup.service';\r\nimport { LoginService } from '../../services/auth/login.service';\r\n\r\nexport function passwordFitsEmail(\r\n    loginService: LoginService,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (group: AbstractControl) =>\r\n        timer(350).pipe(\r\n            switchMap(_ => {\r\n                if(group) {\r\n                    const email: string = group.get('email')?.value;\r\n                    const password: string = group.get('password')?.value;\r\n                    if(!email || !password){\r\n                        return of(null);\r\n                    }\r\n                    return loginService.passwordFitsEmail(email, password).pipe(\r\n                        map((response: boolean) => {\r\n                            if(!response){\r\n                                return { 'passwordFitsEmail': true };\r\n                            }\r\n                            return null;\r\n                        }),\r\n                        catchError(_ => of(null)),\r\n                        finalize(() => changeDetectorRef.markForCheck()),\r\n                    );\r\n                }\r\n                else {\r\n                    return of(null);\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function isEmailAvailable(\r\n    signupService: SignupService,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n): AsyncValidatorFn {\r\n    return (control: AbstractControl) =>\r\n        timer(350).pipe(\r\n            switchMap(_ => {\r\n                if(control) {\r\n                    const email: string = control?.value;\r\n                    if(!email) {\r\n                        return of(null);\r\n                    }\r\n                    return signupService.getEmails(email).pipe(\r\n                        map((response: boolean) => {\r\n                            if(!response){\r\n                                return { 'availableEmail': true };\r\n                            }\r\n                            return null;\r\n                        }),\r\n                        catchError(_ => of(null)),\r\n                        finalize(() => changeDetectorRef.markForCheck()),\r\n                    );\r\n                }\r\n                else {\r\n                    return of(null);\r\n                }\r\n            }),\r\n        );\r\n}\r\n\r\nexport function samePasswords(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if(group) {\r\n            const password: string = group.get('password')?.value;\r\n            const confirmPassword: string = group.get('confirmPassword')?.value;\r\n            if(!password || !confirmPassword) {\r\n                return null;\r\n            }\r\n            else {\r\n                if(password !== confirmPassword) {\r\n                    return { 'equalPass': true };\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function isBroj(): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        if (control.value) {\r\n            if (!isNaN(parseFloat(control.value)) && isFinite(control.value)) {\r\n                return null;\r\n            }\r\n            return { 'onlyNumbers': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { AbstractControl, FormArray, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function allSetsFilled(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if(array) {\r\n            let isSetFilled = true;\r\n            (array as FormArray).controls.forEach((set: AbstractControl) => {\r\n                if(!set.get('weightLifted').value || !set.get('reps').value\r\n                    || set.get('weightLifted').errors || set.get('reps').errors) {\r\n                    isSetFilled = false;\r\n                }\r\n            });\r\n            if(isSetFilled) {\r\n                return null;\r\n            }\r\n            return { 'setNotFilled': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function isSetValid(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            const weightLifted: AbstractControl = group?.get('weightLifted');\r\n            const reps: AbstractControl = group?.get('reps');\r\n            if (weightLifted && reps) {\r\n                if (!weightLifted.value || !reps.value) {\r\n                    return { 'setNotEntered': true };\r\n                }\r\n                if (!weightLifted.valid || !reps.valid) {\r\n                    return { 'setNotValid': true };\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nexport function bothValuesRequired(): ValidatorFn {\r\n    return (group: AbstractControl): ValidationErrors | null => {\r\n        if (group) {\r\n            if (group.get('weightLifted')?.value && !group.get('reps')?.value) {\r\n                return { 'repsRequired': true };\r\n            }\r\n            else if (!group.get('weightLifted')?.value && group.get('reps')?.value) {\r\n                return { 'weightLiftedRequired': true };\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { AbstractControl, FormArray, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\n//TODO: create no empty training validator (exercises.length === 0)\r\nexport function checkExerciseNumber(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            const exerciseNumber = (array as FormArray)?.controls?.length;\r\n            if (exerciseNumber) {\r\n                return null;\r\n            }\r\n            return { 'emptyTraining': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function checkDuplicateExerciseName(): ValidatorFn {\r\n    return (array: AbstractControl): ValidationErrors | null => {\r\n        if (array) {\r\n            const exerciseNames: string[] = [];\r\n            for (const group of (array as FormArray).controls) {\r\n                if (exerciseNames.indexOf(group.get('name')?.value) !== -1) {\r\n                    return { 'duplicateExerciseName': group.get('name').value };\r\n                }\r\n                else {\r\n                    exerciseNames.push(group.get('name')?.value);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { AuthResponseData } from 'src/app/models/auth/auth-data.model';\r\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\r\nimport { FormErrorStateMatcher } from '../../../helpers/error-matchers/form-error-state-matcher.helper';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { LoginService } from '../../../services/auth/login.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\n\r\ntype FormData = {\r\n    email?: string;\r\n    password?: string;\r\n};\r\n\r\n@Component({\r\n    selector: 'bl-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LoginComponent implements AfterViewInit {\r\n\r\n    isLoading = false;\r\n\r\n    form: FormGroup;\r\n    formErrorStateMatcher: FormErrorStateMatcher = new FormErrorStateMatcher();\r\n\r\n    @ViewChild('emailRef', {\r\n        read: ElementRef,\r\n    })\r\n    private readonly emailInput: ElementRef;\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly loginService: LoginService,\r\n        private readonly authService: AuthService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly snackBar: MatSnackBar,\r\n    ) {\r\n        this.form = new FormGroup({\r\n            'email': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.email,\r\n            ]),\r\n            'password': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20),\r\n            ]),\r\n        }, { asyncValidators: AuthCustomValidators.passwordFitsEmail(\r\n            this.loginService,\r\n            this.changeDetectorRef) });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => (<HTMLInputElement>this.emailInput.nativeElement).focus());\r\n    }\r\n\r\n    onSubmit(): void {\r\n        if (!this.form.valid) {\r\n            this.snackBar.open(this.translateService.instant('auth.errors.invalid_form'), null, {\r\n                duration: SNACK_BAR_DURATION.ERROR,\r\n                panelClass: 'app__snackbar-error',\r\n            });\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n\r\n        this.authService.login(\r\n            this.accessFormData('email').value as string,\r\n            this.accessFormData('password').value as string,\r\n        ).pipe(\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe((response: AuthResponseData) => {\r\n            if (response) {\r\n                this.snackBar.open(this.translateService.instant(response.Message as string), null, {\r\n                    duration: SNACK_BAR_DURATION.GENERAL,\r\n                    panelClass: response.Token ? 'app__snackbar' : 'app__snackbar-error',\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    accessFormData(formFieldName: keyof FormData): FormControl {\r\n        return this.form.get(formFieldName) as FormControl;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { AuthResponseData } from 'src/app/models/auth/auth-data.model';\r\nimport { SNACK_BAR_DURATION } from '../../../constants/snack-bar-duration.const';\r\nimport { SPINNER_SIZE } from '../../../constants/spinner-size.const';\r\nimport { FormErrorStateMatcher } from '../../../helpers/error-matchers/form-error-state-matcher.helper';\r\nimport { Language, WeightFormat } from '../../../models/preferences.model';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { SignupService } from '../../../services/auth/signup.service';\r\nimport * as AuthCustomValidators from '../../../validators/auth/auth.validators';\r\n\r\ntype FormData = {\r\n    language?: Language;\r\n    weightFormat?: WeightFormat;\r\n    email?: string;\r\n    password?: string;\r\n    confirmPassword?: string;\r\n};\r\n\r\n@Component({\r\n    selector: 'bl-signup',\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: MAT_RADIO_DEFAULT_OPTIONS,\r\n        useValue: {\r\n            color: 'primary',\r\n        },\r\n    }],\r\n})\r\nexport class SignupComponent {\r\n\r\n    form: FormGroup;\r\n    readonly formErrorStateMatcher: FormErrorStateMatcher = new FormErrorStateMatcher();\r\n\r\n    isLoading = false;\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly signupService: SignupService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly snackBar: MatSnackBar,\r\n        private readonly router: Router,\r\n    ) {\r\n        this.form = new FormGroup({\r\n            'language': new FormControl('en', [Validators.required]),\r\n            'weightFormat': new FormControl('kg', [Validators.required]),\r\n            'email': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.email],\r\n                [AuthCustomValidators.isEmailAvailable(\r\n                    this.signupService,\r\n                    this.changeDetectorRef,\r\n                )],\r\n            ),\r\n            'password': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)],\r\n            ),\r\n            'confirmPassword': new FormControl(null, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(20)],\r\n            ),\r\n        }, { validators: AuthCustomValidators.samePasswords() });\r\n    }\r\n\r\n    get spinnerSize(): number {\r\n        return SPINNER_SIZE;\r\n    }\r\n\r\n    onSubmit(): void {\r\n        if (!this.form.valid) {\r\n            this.snackBar.open(this.translateService.instant('auth.errors.invalid_form'), null, {\r\n                duration: SNACK_BAR_DURATION.ERROR,\r\n                panelClass: 'app__snackbar-error',\r\n            });\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n\r\n        this.authService.signup(\r\n            this.accessFormData('language').value as Language,\r\n            this.accessFormData('weightFormat').value as WeightFormat,\r\n            this.accessFormData('email').value as string,\r\n            this.accessFormData('password').value as string,\r\n            this.accessFormData('confirmPassword').value as string,\r\n        ).pipe(\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe(async (response: AuthResponseData) => {\r\n            if (response.Success) {\r\n                this.snackBar.open(this.translateService.instant(response.Message as string), null, {\r\n                    duration: SNACK_BAR_DURATION.GENERAL,\r\n                    panelClass: response.Success ? 'app__snackbar' : 'app__snackbar-error',\r\n                });\r\n                await this.router.navigate(['/auth/login']);\r\n            }\r\n        });\r\n    }\r\n\r\n    accessFormData(formFieldName: keyof FormData): FormControl {\r\n        return this.form.get(formFieldName) as FormControl;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { format } from 'date-fns';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { Language } from '../../../models/preferences.model';\r\nimport { PastTrainingsQueryParams } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { QUERY_PARAMS_DATE_FORMAT } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { NavigationService } from '../../../services/shared/navigation.service';\r\nimport { SharedService } from '../../../services/shared/shared.service';\r\nimport { NewTrainingService } from '../../../services/training/new-training.service';\r\nimport { constructDates } from '../../../helpers/dates.helper';\r\nimport { LocalStorageItems } from '../../../models/common/interfaces/common.model';\r\n\r\ninterface IsActiveMatchOptions {\r\n    matrixParams: 'exact' | 'subset' | 'ignored';\r\n    queryParams: 'exact' | 'subset' | 'ignored';\r\n    paths: 'exact' | 'subset';\r\n    fragment: 'exact' | 'ignored';\r\n}\r\n\r\n@Component({\r\n    selector: 'bl-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n    readonly myMatchOptions: IsActiveMatchOptions = {\r\n        queryParams: 'ignored',\r\n        matrixParams: 'exact',\r\n        paths: 'exact',\r\n        fragment: 'exact',\r\n    };\r\n\r\n    isAuthenticated$: Observable<boolean>;\r\n    isEditing$: Observable<boolean>;\r\n    loggedUserData$: Observable<AuthResponseData>;\r\n\r\n    @Output()\r\n    readonly toggleSideNav: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly authService: AuthService,\r\n        private readonly sharedService: SharedService,\r\n        private readonly navigationService: NavigationService,\r\n        private readonly router: Router,\r\n    ) {}\r\n\r\n    get StartDate(): string {\r\n        return format(constructDates(new Date())?.StartDate ?? new Date(), QUERY_PARAMS_DATE_FORMAT);\r\n    }\r\n\r\n    get EndDate(): string {\r\n        return format(constructDates(new Date())?.EndDate ?? new Date(), QUERY_PARAMS_DATE_FORMAT);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isAuthenticated$ = this.authService.isAuth$;\r\n        this.loggedUserData$ = this.authService.loggedUser$;\r\n        this.isEditing$ = this.sharedService.editingTraining$$;\r\n    }\r\n\r\n    async onLogout(): Promise<void> {\r\n        this.newTrainingService.clearTrainingData();\r\n        await this.authService.logout();\r\n    }\r\n\r\n    goToPastTraining(): void {\r\n        this.sharedService.pastTrainingsQueryParams$$\r\n            .pipe(\r\n                take(1),\r\n            ).subscribe(async (response: PastTrainingsQueryParams) => {\r\n                await this.router.navigate(['/training/past-trainings'], {\r\n                    queryParams: {\r\n                        startDate: response?.startDate ? response.startDate : undefined,\r\n                        endDate: response?.endDate ? response.endDate : undefined,\r\n                        search: response?.search ? response.search : undefined,\r\n                        page: response?.page ? response.page : undefined,\r\n                        size: response?.size ? response.size : undefined,\r\n                    } as PastTrainingsQueryParams,\r\n                });\r\n                localStorage.removeItem(LocalStorageItems.QUERY_PARAMS);\r\n            });\r\n    }\r\n\r\n    onToggle(): void {\r\n        this.toggleSideNav.emit();\r\n    }\r\n\r\n    changeLanguage(language: Language): void {\r\n        this.authService.loggedUser$.pipe(\r\n            take(1),\r\n            switchMap((userData: AuthResponseData) =>\r\n                this.navigationService.setPreferences(\r\n                    userData._id,\r\n                    language,\r\n                    'kg',\r\n                ),\r\n            ),\r\n        ).subscribe();\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { endOfWeek, format, startOfWeek } from 'date-fns';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, take, takeUntil } from 'rxjs/operators';\r\nimport { AuthResponseData } from '../../../models/auth/auth-data.model';\r\nimport { Language } from '../../../models/preferences.model';\r\nimport { QUERY_PARAMS_DATE_FORMAT } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\nimport { NavigationService } from '../../../services/shared/navigation.service';\r\nimport { UnsubscribeService } from '../../../services/shared/unsubscribe.service';\r\nimport { NewTrainingService } from '../../../services/training/new-training.service';\r\n\r\n@Component({\r\n    selector: 'bl-side-nav',\r\n    templateUrl: './side-nav.component.html',\r\n    styleUrls: ['./side-nav.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UnsubscribeService],\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n\r\n    @Output()\r\n    readonly closeSideNav: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    isAuthenticated$: Observable<boolean>;\r\n    loggedUserData$: Observable<AuthResponseData>;\r\n\r\n    constructor(\r\n        private readonly authService: AuthService,\r\n        private readonly navigationService: NavigationService,\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly unsubsService: UnsubscribeService,\r\n        private readonly router: Router,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.isAuthenticated$ = this.authService.isAuth$;\r\n        this.loggedUserData$ = this.authService.loggedUser$;\r\n    }\r\n\r\n    async onLogout(): Promise<void> {\r\n        this.newTrainingService.clearTrainingData();\r\n        await this.authService.logout();\r\n    }\r\n\r\n    async goToPastTrainings(): Promise<void> {\r\n        const startDate: Date = startOfWeek(new Date(), {\r\n            weekStartsOn: 1,\r\n        });\r\n        const endDate: Date = endOfWeek(new Date(), {\r\n            weekStartsOn: 1,\r\n        });\r\n        await this.router.navigate(['/training/past-trainings'], {\r\n            queryParams: {\r\n                startDate: format(startDate, QUERY_PARAMS_DATE_FORMAT),\r\n                endDate: format(endDate, QUERY_PARAMS_DATE_FORMAT),\r\n            },\r\n        });\r\n    }\r\n\r\n    changeLanguage(language: Language): void {\r\n        this.authService.loggedUser$.pipe(\r\n            take(1),\r\n            switchMap((userData: AuthResponseData) =>\r\n                this.navigationService.setPreferences(\r\n                    userData._id,\r\n                    language,\r\n                    'kg',\r\n                ),\r\n            ),\r\n            takeUntil(this.unsubsService),\r\n        ).subscribe(_ => this.onCloseSideNav());\r\n    }\r\n\r\n    onCloseSideNav(): void {\r\n        this.closeSideNav.emit();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface DialogData {\r\n    isError: boolean;\r\n    message?: string;\r\n    deleteExercise?: DeleteExerciseDialogData;\r\n}\r\n\r\nexport interface DeleteExerciseDialogData {\r\n    message$: Observable<string>;\r\n    exerciseName: string;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './dialog.component.html',\r\n    styleUrls: ['./dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DialogComponent {\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public readonly data: DialogData,\r\n    ) {}\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\n\r\n@Component({\r\n    selector: 'bl-not-found',\r\n    templateUrl: './not-found.component.html',\r\n    styleUrls: ['./not-found.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NotFoundComponent {\r\n\r\n    isAuth$: Observable<boolean> = this.authService.isAuth$;\r\n\r\n    constructor(private readonly authService: AuthService) {}\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { isNeverCheck } from '../../../helpers/is-never-check.helper';\r\nimport { StreamData } from '../../../models/common/interfaces/common.model';\r\nimport { DEFAULT_SIZE, INITIAL_PAGE, Paginator } from '../../../models/common/interfaces/paginator.model';\r\nimport { Page } from '../../../models/common/types/page.type';\r\nimport { DateInterval, PastTrainings } from '../../../models/training/past-trainings/past-trainings.model';\r\nimport { PaginatorChanged } from '../../../models/common/interfaces/paginator.model';\r\n\r\n@Component({\r\n    selector: 'bl-pagination',\r\n    templateUrl: './pagination.component.html',\r\n    styleUrls: ['./pagination.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationComponent {\r\n\r\n    readonly pageSizeOptions: number[] = [1, 3, 5, 10];\r\n\r\n    @Input()\r\n    isSearch = false;\r\n\r\n    @Input()\r\n    page: number = INITIAL_PAGE;\r\n\r\n    @Input()\r\n    size: number = DEFAULT_SIZE;\r\n\r\n    @Input()\r\n    isPreviousPage = true;\r\n\r\n    @Input()\r\n    isNextPage = true;\r\n\r\n    @Input()\r\n    data: StreamData<Paginator<PastTrainings>> | undefined = undefined;\r\n\r\n    @Output()\r\n    readonly paginatorChanged: EventEmitter<PaginatorChanged> = new EventEmitter<PaginatorChanged>();\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n    ) {}\r\n\r\n    loadPage(\r\n        page?: Page,\r\n        dateInterval?: DateInterval,\r\n        earliestTrainingDate?: Date,\r\n        lastPage?: number,\r\n    ): void {\r\n        if (this.isSearch) {\r\n            if (page) {\r\n                switch (page) {\r\n                    case 'First': {\r\n                        this.page = INITIAL_PAGE;\r\n                        break;\r\n                    }\r\n                    case 'Previous': {\r\n                        this.page--;\r\n                        break;\r\n                    }\r\n                    case 'Next': {\r\n                        this.page++;\r\n                        break;\r\n                    }\r\n                    case 'Last': {\r\n                        this.page = lastPage;\r\n                        break;\r\n                    }\r\n                    default:\r\n                        isNeverCheck(page);\r\n                }\r\n            }\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: true,\r\n            } as PaginatorChanged);\r\n        }\r\n        else {\r\n            this.paginatorChanged.emit({\r\n                Page: +this.page,\r\n                Size: +this.size,\r\n                IsSearch: false,\r\n                PageType: page,\r\n                DateInterval: dateInterval,\r\n                EarliestTrainingDate: earliestTrainingDate,\r\n            } as PaginatorChanged);\r\n        }\r\n    }\r\n\r\n    setPageTooltip(\r\n        isSearch: boolean,\r\n        page: Page,\r\n    ): Observable<string> {\r\n        if (isSearch) {\r\n            if (page === 'First' || page === 'Last') {\r\n                return this.translateService.stream(`training.past_trainings.buttons.${page === 'First' ? 'first_page' : 'last_page'}`);\r\n            }\r\n            else {\r\n                return this.translateService.stream(`training.past_trainings.buttons.${page === 'Next' ? 'next_page' : 'previous_page'}`);\r\n            }\r\n        }\r\n        else {\r\n            if (page === 'First' || page === 'Last') {\r\n                return this.translateService.stream(`training.past_trainings.buttons.${page === 'First' ? 'first_week' : 'last_week'}`);\r\n            }\r\n            else {\r\n                if (page === 'Next') {\r\n                    return this.translateService.stream(`training.past_trainings.${this.isNextPage ? 'buttons.next_week' : 'disabled_next_week'}`);\r\n                }\r\n                else {\r\n                    return this.translateService.stream(`training.past_trainings.${this.isPreviousPage ? 'buttons.previous_week' : 'disabled_previous_week'}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setPageTooltipClass(\r\n        isSearch: boolean,\r\n        page: Page,\r\n    ): string {\r\n        if (isSearch) {\r\n            return 'tooltip';\r\n        }\r\n        else {\r\n            if (page === 'First' || page === 'Last') {\r\n                return 'tooltip';\r\n            }\r\n            if (page === 'Next') {\r\n                return this.isNextPage ? 'tooltip' : 'tooltip-error';\r\n            }\r\n            else {\r\n                return this.isPreviousPage ? 'tooltip' : 'tooltip-error';\r\n            }\r\n        }\r\n    }\r\n\r\n    setPageText(totalPages: number): Observable<string> {\r\n        return this.translateService.stream('common')\r\n            .pipe(\r\n                map((value: { [key: string]: string }) =>\r\n                    `\r\n                        ${value['page']}\r\n                        <strong class=\"primary\">${this.page?.toString() ?? '1'}</strong>\r\n                        ${value['of']}\r\n                        <strong class=\"primary\">${totalPages?.toString() ?? '1'}</strong>\r\n                    `),\r\n            );\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\nimport { FormErrorStateMatcher } from '../../../../helpers/error-matchers/form-error-state-matcher.helper';\r\nimport { SetStateChanged } from '../../../../models/training/shared/set.model';\r\nimport { Set } from '../../../../models/training/shared/set.model';\r\nimport { FormSetData } from '../../../../models/training/shared/set.model';\r\nimport { SetFormValidationErrors } from '../../../../models/training/shared/set.model';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport * as CommonValidators from '../../../../validators/shared/common.validators';\r\nimport * as SetValidators from '../../../../validators/training/set.validators';\r\n\r\n@Component({\r\n    selector: 'bl-sets',\r\n    templateUrl: './sets.component.html',\r\n    styleUrls: ['./sets.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        getControlValueAccessor(SetsComponent),\r\n        UnsubscribeService,\r\n    ],\r\n})\r\nexport class SetsComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n\r\n    readonly form: FormArray = new FormArray([]);\r\n    readonly formErrorStateMatcher: FormErrorStateMatcher = new FormErrorStateMatcher();\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    isExerciseFormSubmitted$: Observable<boolean> = of(false);\r\n\r\n    @Input()\r\n    exerciseStateChanged$: Observable<void> = of(null);\r\n\r\n    @Input()\r\n    exerciseNameControl: AbstractControl | null;\r\n\r\n    @Input()\r\n    indexExercise = 0;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Output()\r\n    readonly setAdded: EventEmitter<SetStateChanged> = new EventEmitter<SetStateChanged>();\r\n\r\n    @Output()\r\n    readonly setDeleted: EventEmitter<Partial<SetStateChanged>> = new EventEmitter<Partial<SetStateChanged>>();\r\n\r\n    @Output()\r\n    readonly formStateChanged: EventEmitter<SetFormValidationErrors[]> = new EventEmitter<SetFormValidationErrors[]>();\r\n\r\n    constructor(\r\n        private readonly translateService: TranslateService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.form.setValidators([SetValidators.allSetsFilled()]);\r\n        this.form.updateValueAndValidity();\r\n        this.formStateChanged.emit(this.formErrors);\r\n\r\n        this.exerciseNameControl.valueChanges.pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe((value: string) => {\r\n            value ? this.accessFormField('weightLifted', 0).enable() : this.accessFormField('weightLifted', 0).disable();\r\n            value ? this.accessFormField('reps', 0).enable() : this.accessFormField('reps', 0).disable();\r\n        });\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.form.updateValueAndValidity({ emitEvent: true });\r\n    }\r\n\r\n    writeValue(value: Set[]): void {\r\n        if (value.length > 0) {\r\n            for (const set of value) {\r\n                this.addSet(set);\r\n            }\r\n        }\r\n        else {\r\n            this.addSet();\r\n        }\r\n    }\r\n    //Sending parent new form value when form value changes\r\n    registerOnChange(fn: (formValue: Partial<Set[]>) => void): void {\r\n        this.form.valueChanges.pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe((formValue: Partial<Set[]>) => {\r\n            this.formStateChanged.emit(this.formErrors);\r\n            fn(formValue as Partial<Set[]>);\r\n        });\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    getSets(): AbstractControl[] {\r\n        return (this.form as FormArray).controls;\r\n    }\r\n\r\n    addSet(set?: Set): void {\r\n        this.form.push(\r\n            new FormGroup({\r\n                'setNumber': new FormControl(set ? (set.setNumber as number) : this.getSets().length + 1, [Validators.required]),\r\n                'weightLifted': new FormControl({\r\n                    value: set ? (set.weightLifted as number) : null,\r\n                    disabled: this.exerciseNameControl.value ? false : true,\r\n                }, [Validators.min(1),\r\n                    Validators.max(1000),\r\n                    CommonValidators.isBroj()]),\r\n                'reps': new FormControl({\r\n                    value: set ? (set.reps as number) : null,\r\n                    disabled: this.exerciseNameControl.value ? false : true,\r\n                }, [Validators.min(1),\r\n                    Validators.max(1000),\r\n                    Validators.pattern('^[0-9]*$')]),\r\n            }, {\r\n                validators: [SetValidators.bothValuesRequired(), SetValidators.isSetValid()],\r\n            }),\r\n        );\r\n    }\r\n\r\n    deleteSet(indexSet: number): void {\r\n        this.form.removeAt(indexSet);\r\n        this.setDeleted.emit({\r\n            indexExercise: this.indexExercise as number,\r\n            indexSet: indexSet as number,\r\n            newTotal: this.calculateTotal(),\r\n        } as Partial<SetStateChanged>);\r\n    }\r\n\r\n    onChangeSets(indexSet: number): void {\r\n        let total = 0;\r\n        let isWeightLiftedValid = false;\r\n        let isRepsValid = false;\r\n        if (this.accessFormField('weightLifted', indexSet)?.valid && this.accessFormField('weightLifted', indexSet)?.value) {\r\n            isWeightLiftedValid = true;\r\n        }\r\n        if (this.accessFormField('reps', indexSet)?.valid && this.accessFormField('reps', indexSet)?.value) {\r\n            isRepsValid = true;\r\n        }\r\n        if (isWeightLiftedValid && isRepsValid) {\r\n            total = this.calculateTotal();\r\n        }\r\n        this.setAdded.emit({\r\n            indexExercise: this.indexExercise as number,\r\n            indexSet: indexSet as number,\r\n            isWeightLiftedValid: isWeightLiftedValid as boolean,\r\n            isRepsValid: isRepsValid as boolean,\r\n            newTotal: total as number,\r\n            newSet: {\r\n                setNumber: +this.accessFormField('setNumber', indexSet).value,\r\n                weightLifted: +this.accessFormField('weightLifted', indexSet).value,\r\n                reps: +this.accessFormField('reps', indexSet).value,\r\n            } as Set,\r\n        } as SetStateChanged);\r\n    }\r\n\r\n    showAddSetTooltip(isSetError: boolean): Observable<string> {\r\n        if (isSetError) {\r\n            return this.translateService.stream('training.new_training.first_add_previous_set', {\r\n                setNumber: this.getSets().length > 0 ? this.getSets().length : 1,\r\n            });\r\n        }\r\n        else {\r\n            return of('');\r\n        }\r\n    }\r\n\r\n    showDeleteSetTooltip(indexSet: number): Observable<string> {\r\n        if (indexSet > 0) {\r\n            return this.translateService.stream('training.new_training.buttons.delete_set');\r\n        }\r\n        else {\r\n            return this.translateService.stream('training.new_training.errors.delete_first_set');\r\n        }\r\n    }\r\n\r\n    accessFormField(\r\n        formField: keyof FormSetData,\r\n        indexSet: number,\r\n    ): AbstractControl {\r\n        return this.form.at(indexSet)?.get(formField);\r\n    }\r\n\r\n    private calculateTotal(): number {\r\n        let total = 0;\r\n        for(const group of this.getSets()){\r\n            total += (+group.get('weightLifted')?.value * +group.get('reps')?.value);\r\n        }\r\n        return total;\r\n    }\r\n\r\n    get formErrors(): SetFormValidationErrors[] {\r\n        let errors: SetFormValidationErrors[] = [];\r\n        if (this.form.errors) {\r\n            const mappedKeys: SetFormValidationErrors[] =\r\n                Object.keys(this.form.errors)\r\n                    .map((key: string) => key as SetFormValidationErrors);\r\n            errors = errors.concat(mappedKeys);\r\n        }\r\n        this.form.controls.forEach((group: AbstractControl) => {\r\n            if (group?.errors) {\r\n                const mappedKeys: SetFormValidationErrors[] =\r\n                    Object.keys(group.errors)\r\n                        .map((key: string) => key as SetFormValidationErrors);\r\n                errors = errors.concat(mappedKeys);\r\n            }\r\n        });\r\n        return errors;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, EMPTY, forkJoin, Observable, of, Subject } from 'rxjs';\r\nimport { delay, finalize, map, startWith, switchMap, take, takeUntil, tap } from 'rxjs/operators';\r\nimport { SNACK_BAR_DURATION } from '../../../../constants/snack-bar-duration.const';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\nimport { ExerciseNameErrorStateMatcher } from '../../../../helpers/error-matchers/exercise-name-error-state-matcher.helper';\r\nimport { GeneralResponseData } from '../../../../models/general-response.model';\r\nimport { DEFAULT_WEIGHT_FORMAT } from '../../../../models/preferences.model';\r\nimport { Exercise } from '../../../../models/training/exercise.model';\r\nimport { EditNewTrainingData, EMPTY_TRAINING_EDIT } from '../../../../models/training/new-training/empty-training.model';\r\nimport { Training } from '../../../../models/training/new-training/new-training.model';\r\nimport { createInitialSet, SetFormValidationErrors, SetStateChanged, SetTrainingData } from '../../../../models/training/shared/set.model';\r\nimport { Set } from '../../../../models/training/shared/set.model';\r\nimport { SingleExercise } from '../../../../models/training/shared/single-exercise.model';\r\nimport { FormSingleExerciseData } from '../../../../models/training/shared/single-exercise.model';\r\nimport { RoundTotalWeightPipe } from '../../../../pipes/training/new-training/round-total-weight/round-total-weight.pipe';\r\nimport { UnsubscribeService } from '../../../../services/shared/unsubscribe.service';\r\nimport { NewTrainingService } from '../../../../services/training/new-training.service';\r\nimport * as SingleExerciseValidators from '../../../../validators/training/single-exercise.validators';\r\nimport { DeleteExerciseDialogData, DialogComponent, DialogData } from '../../dialog/dialog.component';\r\n\r\nconst INITIAL_WEIGHT = 0;\r\nconst MAX_EXERCISE_NAME_WIDTH = 181;\r\n\r\n@Component({\r\n    selector: 'bl-single-exercise',\r\n    templateUrl: './single-exercise.component.html',\r\n    styleUrls: ['./single-exercise.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        getControlValueAccessor(SingleExerciseComponent),\r\n        UnsubscribeService,\r\n    ],\r\n})\r\nexport class SingleExerciseComponent implements ControlValueAccessor {\r\n\r\n    readonly exerciseStateChanged$$: Subject<void> = new Subject<void>();\r\n    readonly isSubmitted$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    readonly exercises$: Observable<Exercise[]> | undefined = undefined;\r\n\r\n    readonly form: FormArray = new FormArray([]);\r\n    readonly exerciseNameErrorStateMatcher: ExerciseNameErrorStateMatcher = new ExerciseNameErrorStateMatcher();\r\n    setErrors: SetFormValidationErrors[] = [];\r\n\r\n    exerciseChanged = false;\r\n\r\n    onTouched: () => void;\r\n\r\n    @Input()\r\n    editData: EditNewTrainingData = EMPTY_TRAINING_EDIT;\r\n\r\n    @Input()\r\n    bodyweight: AbstractControl | null;\r\n\r\n    @Input()\r\n    isLoading = false;\r\n\r\n    @Input()\r\n    editMode = false;\r\n\r\n    @ViewChild('exerciseNameChoice', {\r\n        read: MatSelect,\r\n    })\r\n    set exerciseNameChoice(exerciseName: MatSelect) {\r\n        if (exerciseName) {\r\n            this.newTrainingService.currentTrainingChanged$.pipe(\r\n                take(1),\r\n                switchMap((currentTrainingState: Training) =>\r\n                    this.setExerciseNameTooltip(\r\n                        exerciseName as MatSelect,\r\n                        null,\r\n                        currentTrainingState as Training,\r\n                    )),\r\n                takeUntil(this.unsubscribeService),\r\n            ).subscribe();\r\n        }\r\n    }\r\n\r\n    readonly currentExerciseState$: Observable<[SingleExercise[], Exercise[]]> =\r\n        this.exerciseStateChanged$$.pipe(\r\n            startWith(undefined as void),\r\n            switchMap(_ =>\r\n                forkJoin([\r\n                    this.newTrainingService.currentTrainingChanged$\r\n                        .pipe(\r\n                            take(1),\r\n                            map((currentTrainingState: Training) => currentTrainingState.exercise),\r\n                        ),\r\n                        this.newTrainingService.allExercisesChanged$.pipe(\r\n                            take(1),\r\n                        ),\r\n                ]),\r\n            ),\r\n        );\r\n\r\n    constructor(\r\n        private readonly newTrainingService: NewTrainingService,\r\n        private readonly unsubscribeService: UnsubscribeService,\r\n        private readonly translateService: TranslateService,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly snackBar: MatSnackBar,\r\n        private readonly dialog: MatDialog,\r\n        private readonly roundTotalWeightPipe: RoundTotalWeightPipe,\r\n    ) {\r\n        this.form.setValidators([SingleExerciseValidators.checkDuplicateExerciseName(), SingleExerciseValidators.checkExerciseNumber()]);\r\n        this.form.updateValueAndValidity();\r\n    }\r\n\r\n    setErrorMatcher(index: number): ExerciseNameErrorStateMatcher {\r\n        if (this.accessFormField('name', index)?.value) {\r\n            if (this.form?.errors?.duplicateExerciseName === this.accessFormField('name', index).value) {\r\n                return this.exerciseNameErrorStateMatcher;\r\n            }\r\n            return null;\r\n        }\r\n        return this.exerciseNameErrorStateMatcher;\r\n    }\r\n\r\n    writeValue(data: Training): void {\r\n        if (data.exercise.length > 0) {\r\n            (data.exercise as SingleExercise[]).forEach((exercise: SingleExercise, indexExercise: number) => {\r\n                this.addExercise();\r\n                if (exercise.exerciseName) {\r\n                    this.accessFormField('name', indexExercise).patchValue(exercise.exerciseName as string);\r\n                    this.accessFormField('sets', indexExercise).patchValue(exercise.sets as Set[]);\r\n                    this.accessFormField('total', indexExercise).patchValue(exercise.total ? this.roundTotalWeightPipe.transform(exercise.total) : `0 ${DEFAULT_WEIGHT_FORMAT}`);\r\n                    this.accessFormField('disabledTooltip', indexExercise).patchValue(exercise.disabledTooltip as boolean);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.addExercise();\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: (formValue: Partial<SingleExercise[]>) => void): void {\r\n        this.form.valueChanges.pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe(fn);\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    onExerciseNameChange(\r\n        $event: MatSelectChange,\r\n        indexExercise: number,\r\n        element: MatSelect,\r\n    ): void {\r\n        if ($event.value) {\r\n            if (this.form?.errors?.duplicateExerciseName) {\r\n                this.setExerciseNameTooltip(\r\n                    element as MatSelect,\r\n                    indexExercise as number,\r\n                ).subscribe();\r\n            }\r\n            else {\r\n                this.setExerciseNameTooltip(\r\n                    element as MatSelect,\r\n                    indexExercise as number,\r\n                ).subscribe(_ => {\r\n                    this.newTrainingService.updateExerciseChoices(\r\n                        $event.value as string,\r\n                        indexExercise as number,\r\n                        this.accessFormField('disabledTooltip', indexExercise).value as boolean,\r\n                    );\r\n                    this.exerciseChanged = !this.exerciseChanged;\r\n                    this.exerciseStateChanged$$.next();\r\n                    this.changeDetectorRef.markForCheck();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    addExercise(clicked?: MouseEvent): void {\r\n        this.form.push(new FormGroup({\r\n            'name': new FormControl(null, [Validators.required]),\r\n            'sets': new FormControl(createInitialSet()),\r\n            'total': new FormControl(this.roundTotalWeightPipe.transform(INITIAL_WEIGHT), [Validators.required]),\r\n            'disabledTooltip': new FormControl(true, [Validators.required]),\r\n        }));\r\n\r\n        if (clicked) {\r\n            this.newTrainingService.addNewExercise(this.getAlreadyUsedExercises() as string[]);\r\n            this.exerciseStateChanged$$.next();\r\n        }\r\n    }\r\n\r\n    deleteExercise(\r\n        indexExercise: number,\r\n        exerciseName: string,\r\n    ): void {\r\n        if (exerciseName) {\r\n            const dialogRef = this.dialog.open(DialogComponent, {\r\n                data: {\r\n                    isError: false,\r\n                    deleteExercise: {\r\n                        message$: this.translateService.stream('training.new_training.delete_exercise_prompt'),\r\n                        exerciseName: exerciseName,\r\n                    } as DeleteExerciseDialogData,\r\n                } as DialogData,\r\n            });\r\n            dialogRef.afterClosed().pipe(\r\n                switchMap((response: boolean) => {\r\n                    if (response) {\r\n                        return this.newTrainingService.currentTrainingChanged$.pipe(\r\n                            take(1),\r\n                            switchMap((currentTrainingState: Training) =>\r\n                                this.newTrainingService.deleteExercise(\r\n                                    currentTrainingState as Training,\r\n                                    exerciseName as string,\r\n                                ),\r\n                            ),\r\n                        );\r\n                    }\r\n                    else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n                finalize(() => {\r\n                    this.exerciseStateChanged$$.next();\r\n                    this.changeDetectorRef.markForCheck();\r\n                }),\r\n                takeUntil(this.unsubscribeService),\r\n            ).subscribe((data: [Training, Exercise[]]) => {\r\n                this.exerciseChanged = !this.exerciseChanged;\r\n                this.form.removeAt(indexExercise);\r\n                this.newTrainingService.pushToAvailableExercises(\r\n                    data[0] as Training,\r\n                    data[1] as Exercise[],\r\n                );\r\n            });\r\n        }\r\n        else {\r\n            this.newTrainingService.currentTrainingChanged$.pipe(\r\n                take(1),\r\n                switchMap((currentTrainingState: Training) =>\r\n                    this.newTrainingService.deleteExercise(\r\n                        currentTrainingState as Training,\r\n                        null,\r\n                        indexExercise,\r\n                    ),\r\n                ),\r\n                finalize(() => this.exerciseStateChanged$$.next()),\r\n                takeUntil(this.unsubscribeService),\r\n            ).subscribe(_ => this.form.removeAt(indexExercise));\r\n        }\r\n    }\r\n\r\n    onChangeSets($event: SetStateChanged): void {\r\n        of(null).pipe(\r\n            takeUntil(this.unsubscribeService),\r\n        ).subscribe(_ => {\r\n            if ($event.isWeightLiftedValid\r\n                && $event.isRepsValid\r\n                && this.accessFormField('name', $event.indexExercise).value) {\r\n                    const trainingData: SetTrainingData = {\r\n                        exerciseName: this.accessFormField('name', $event.indexExercise).value as string,\r\n                        setNumber: $event.newSet.setNumber as number,\r\n                        weightLifted: $event.newSet.weightLifted as number,\r\n                        reps: $event.newSet.reps as number,\r\n                        total: $event.newTotal as number,\r\n                    };\r\n\r\n                    this.newTrainingService.setsChanged(trainingData as SetTrainingData);\r\n                    this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform($event.newTotal));\r\n            }\r\n            else {\r\n                this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform(0));\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteSet($event: Partial<SetStateChanged>): void {\r\n        this.accessFormField('total', $event.indexExercise).patchValue(this.roundTotalWeightPipe.transform($event.newTotal));\r\n        this.newTrainingService.deleteSet(\r\n            $event.indexExercise as number,\r\n            $event.indexSet as number,\r\n            $event.newTotal as number,\r\n        );\r\n    }\r\n\r\n    getExercises(): AbstractControl[] {\r\n        return (this.form as FormArray).controls;\r\n    }\r\n\r\n    accessFormField(\r\n        formField: keyof FormSingleExerciseData,\r\n        indexExercise: number,\r\n    ): AbstractControl {\r\n        return this.form.at(indexExercise)?.get(formField);\r\n    }\r\n\r\n    onSetFormChange($event: SetFormValidationErrors[]): void {\r\n        this.setErrors = $event;\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    showAddExerciseTooltip(\r\n        currentTrainingStateLength: number,\r\n        allExercisesLength: number,\r\n    ): Observable<string> {\r\n        if (currentTrainingStateLength >= allExercisesLength) {\r\n            return this.translateService.stream('training.new_training.errors.no_more_exercises_available');\r\n        }\r\n        else {\r\n            if (this.getExercises().length > 0) {\r\n                if (!this.accessFormField('name', this.getExercises().length - 1)?.value) {\r\n                    return this.translateService.stream('training.new_training.errors.pick_current_exercise');\r\n                }\r\n                else if (this.setErrors.includes('setNotEntered') && !this.setErrors.includes('setNotValid')) {\r\n                    return this.translateService.stream('training.new_training.errors.set_required');\r\n                }\r\n                else if (this.setErrors.includes('setNotValid')) {\r\n                    return this.translateService.stream('training.new_training.errors.set_invalid');\r\n                }\r\n                else {\r\n                    return of('');\r\n                }\r\n            }\r\n            else {\r\n                return of('');\r\n            }\r\n        }\r\n    }\r\n\r\n    isAddingExercisesDisabled(\r\n        currentExercisesLength: number,\r\n        allExercisesLength: number,\r\n    ): boolean {\r\n        if (this.getExercises().length > 0) {\r\n            return (currentExercisesLength >= allExercisesLength)\r\n                || ((!this.accessFormField('name', this.getExercises().length - 1)?.value) && this.getExercises().length > 0)\r\n                || this.setErrors.includes('setNotEntered')\r\n                || this.setErrors.includes('setNotValid');\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.isSubmitted$$.next(true);\r\n        if (!this.form.valid || this.setErrors.length > 0) {\r\n            return;\r\n        }\r\n        this.isLoading = true;\r\n\r\n        this.gatherAllFormData().pipe(\r\n            switchMap((apiNewTraining: Training) => {\r\n                if (this.editMode) {\r\n                    return this.newTrainingService.updateTraining(\r\n                        apiNewTraining,\r\n                        this.editData.editTraining?._id,\r\n                    );\r\n                }\r\n                else {\r\n                    return this.newTrainingService.addTraining(apiNewTraining);\r\n                }\r\n            }),\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe((response: GeneralResponseData) => {\r\n            this.snackBar.open(this.translateService.instant(response.Message), null, {\r\n                duration: SNACK_BAR_DURATION.GENERAL,\r\n                panelClass: 'app__snackbar',\r\n            });\r\n        });\r\n    }\r\n\r\n    private gatherAllFormData(): Observable<Training> {\r\n        return this.newTrainingService.currentTrainingChanged$.pipe(\r\n            take(1),\r\n            map((currentTrainingState: Training) => {\r\n                const exerciseFormData: SingleExercise[] = [];\r\n\r\n                this.getExercises().forEach((_exercise: AbstractControl, indexExercise: number) => {\r\n                    const splittedTotal: string[] = (this.accessFormField('total', indexExercise).value as string).split(' ');\r\n                    exerciseFormData.push({\r\n                        exerciseName: this.accessFormField('name', indexExercise).value as string,\r\n                        sets: [],\r\n                        total: +(splittedTotal[0] as string),\r\n                        disabledTooltip: this.accessFormField('disabledTooltip', indexExercise).value as boolean,\r\n                        availableExercises: (currentTrainingState.exercise as SingleExercise[])[indexExercise]?.availableExercises || [],\r\n                    });\r\n\r\n                    const formSetData: Set[] = [];\r\n                    (this.accessFormField('sets', indexExercise).value as Set[]).forEach((set: Set) => {\r\n                        const apiSet: Set = {\r\n                            setNumber: +set.setNumber as number,\r\n                            weightLifted: +set.weightLifted as number,\r\n                            reps: +set.reps as number,\r\n                        };\r\n                        formSetData.push(apiSet);\r\n                    });\r\n                    exerciseFormData[indexExercise].sets = formSetData;\r\n                });\r\n\r\n                return {\r\n                    createdAt: this.editMode ? this.editData.editedDate : new Date(),\r\n                    exercise: exerciseFormData as SingleExercise[],\r\n                    bodyweight: this.bodyweight.value ? +this.bodyweight.value as number : null,\r\n                    editMode: this.editMode as boolean,\r\n                    userId: currentTrainingState.userId as string,\r\n                } as Training;\r\n            }),\r\n            takeUntil(this.unsubscribeService),\r\n        );\r\n    }\r\n\r\n    private setExerciseNameTooltip(\r\n        element: MatSelect,\r\n        indexExercise?: number,\r\n        currentTrainingState?: Training,\r\n    ): Observable<void> {\r\n        return of(null).pipe(\r\n            delay(0),\r\n            tap(_ => {\r\n                if (currentTrainingState) {\r\n                    currentTrainingState.exercise.forEach((value: SingleExercise, index: number) => {\r\n                        this.accessFormField('disabledTooltip', index)?.patchValue(value.disabledTooltip as boolean);\r\n                    });\r\n                }\r\n                else {\r\n                    const width: number = ((element._elementRef.nativeElement as HTMLParagraphElement).querySelector('.mat-select-value-text') as HTMLSpanElement)?.offsetWidth;\r\n                    if (width > MAX_EXERCISE_NAME_WIDTH) {\r\n                        this.accessFormField('disabledTooltip', indexExercise ? indexExercise : 0)?.patchValue(false);\r\n                    }\r\n                    else {\r\n                        this.accessFormField('disabledTooltip', indexExercise ? indexExercise : 0)?.patchValue(true);\r\n                    }\r\n                }\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        );\r\n    }\r\n\r\n    private getAlreadyUsedExercises(): string[] {\r\n        const alreadyUsedExercises: string[] = [];\r\n        for (const exercise of this.getExercises()) {\r\n            if (exercise.get('name').value) {\r\n                alreadyUsedExercises.push(exercise.get('name').value as string);\r\n            }\r\n        }\r\n        return alreadyUsedExercises as string[];\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { getControlValueAccessor } from '../../../../helpers/control-value-accessor.helper';\r\n\r\n@Component({\r\n    selector: 'bl-total-weight',\r\n    templateUrl: './total-weight.component.html',\r\n    styleUrls: ['./total-weight.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [getControlValueAccessor(TotalWeightComponent)],\r\n})\r\nexport class TotalWeightComponent implements ControlValueAccessor {\r\n\r\n    value: string;\r\n\r\n    onChange: () => void;\r\n    onTouched: () => void;\r\n\r\n    constructor(\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n    ){}\r\n\r\n    writeValue(value: string): void {\r\n        this.value = value;\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: () => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { Training } from 'src/app/models/training/new-training/new-training.model';\r\nimport { SNACK_BAR_DURATION } from '../../../../../constants/snack-bar-duration.const';\r\nimport { StreamData } from '../../../../../models/common/interfaces/common.model';\r\nimport { Paginator } from '../../../../../models/common/interfaces/paginator.model';\r\nimport { PastTrainings } from '../../../../../models/training/past-trainings/past-trainings.model';\r\nimport { SharedService } from '../../../../../services/shared/shared.service';\r\n\r\nexport interface DeleteTrainingActionDialogData {\r\n    readonly title$: Observable<string>;\r\n    readonly dateCreated$: Observable<string>;\r\n    readonly timeCreated$: Observable<string>;\r\n    readonly training$: Observable<Training>;\r\n    deleteTrainingFn(\r\n        trainingId: string,\r\n        currentDate: Date,\r\n    ): Observable<StreamData<Paginator<PastTrainings>>>;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './delete-training-action.component.html',\r\n    styleUrls: ['./delete-training-action.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeleteTrainingActionComponent {\r\n\r\n    isLoading = false;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public readonly data: DeleteTrainingActionDialogData,\r\n        private readonly dialogRef: MatDialogRef<DeleteTrainingActionComponent>,\r\n        private readonly translateService: TranslateService,\r\n        private readonly sharedService: SharedService,\r\n        private readonly snackBar: MatSnackBar,\r\n        private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly route: ActivatedRoute,\r\n    ) {}\r\n\r\n    deleteTraining(trainingId: string): void {\r\n        this.isLoading = true;\r\n        this.data.deleteTrainingFn(\r\n            trainingId as string,\r\n            new Date(`\r\n                ${this.getSplittedCurrentDate()[2]}-\r\n                ${this.getSplittedCurrentDate()[1]}-\r\n                ${this.getSplittedCurrentDate()[0]}\r\n            `) as Date,\r\n        ).pipe(\r\n            catchError(_ => EMPTY),\r\n            finalize(() => {\r\n                this.isLoading = false;\r\n                this.changeDetectorRef.markForCheck();\r\n            }),\r\n        ).subscribe((response: StreamData<Paginator<PastTrainings>>) => {\r\n            this.sharedService.deletedTraining$$.next(response);\r\n            this.snackBar.open(this.translateService.instant(response?.Value?.Results?.Message ?? ''), null, {\r\n                duration: SNACK_BAR_DURATION.GENERAL,\r\n                panelClass: 'app__snackbar',\r\n            });\r\n            this.dialogRef.close();\r\n        });\r\n    }\r\n\r\n    private getSplittedCurrentDate(): string[] {\r\n        return (this.route.snapshot.queryParams.startDate as string)?.split('-');\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bl-more-training-action',\r\n    templateUrl: './more-training-action.component.html',\r\n    styleUrls: ['./more-training-action.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MoreTrainingActionComponent {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n//if using mobile device emulator: http://192.168.0.114:3000\r\nexport const environment = {\r\n    production: false,\r\n    BACKEND: 'http://localhost:3000',\r\n    TIMEZONE: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(_err => {\r\n      //TODO\r\n  });\r\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t70079,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t25593,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t13225,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t4812,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t86655,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t44856,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t13059,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t58648,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t98308,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t44690,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t64090,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t36214,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t69447,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t79689,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t18840,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t40749,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t69667,\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t83288,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t35473,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t53634,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t22855,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t495,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t58737,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t99632,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t54446,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t32275,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t48050,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t18994,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t23592,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t35454,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t290,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t92666,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t64816,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t45534,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t94902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t91938,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t14832,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t90668,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t61624,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t19989,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t28902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t70199,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t48395,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t96357,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t38268,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t15269,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t32875,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 50863;\nmodule.exports = webpackAsyncContext;"],"names":["NgModule","PreloadAllModules","RouterModule","AuthGuard","NotFoundResolverService","NotFoundComponent","routes","path","redirectTo","pathMatch","loadChildren","then","module","AuthModule","TrainingModule","canActivate","component","resolve","AppRoutingModule","imports","forRoot","preloadingStrategy","exports","HttpClient","Injectable","Router","TranslateService","BehaviorSubject","of","mergeMap","switchMap","tap","environment","LocalStorageItems","AuthService","constructor","http","router","translateService","loggedUser$$","asObservable","isAuth$$","getToken","token","updateUserData","preferences","userData","JSON","parse","localStorage","getItem","USER_DATA","updatedUserData","Preferences","userId","language","weightFormat","next","Object","setItem","stringify","signup","email","password","confirmPassword","signupData","post","BACKEND","login","authData","pipe","response","Token","expiresInDuration","ExpiresIn","setAuthTimer","now","Date","expirationDate","getTime","saveLS","_id","navigate","use","_","autoLogin","ExpirationDate","expiresIn","logout","clearTimeout","tokenTimer","clearLS","duration","setTimeout","removeItem","TRAINING_STATE","ALL_EXERCISES","providedIn","ChangeDetectionStrategy","ChangeDetectorRef","Component","ElementRef","ViewChild","FormControl","FormGroup","Validators","MatSnackBar","finalize","SNACK_BAR_DURATION","FormErrorStateMatcher","LoginService","AuthCustomValidators","LoginComponent","loginService","authService","changeDetectorRef","snackBar","form","required","minLength","maxLength","asyncValidators","passwordFitsEmail","ngAfterViewInit","emailInput","nativeElement","focus","onSubmit","valid","open","instant","ERROR","panelClass","isLoading","accessFormData","value","markForCheck","subscribe","Message","GENERAL","formFieldName","get","args","read","selector","template","changeDetection","OnPush","MAT_RADIO_DEFAULT_OPTIONS","SPINNER_SIZE","SignupService","SignupComponent","signupService","isEmailAvailable","validators","samePasswords","spinnerSize","Success","providers","provide","useValue","color","EventEmitter","Output","format","take","QUERY_PARAMS_DATE_FORMAT","NavigationService","SharedService","NewTrainingService","constructDates","HeaderComponent","newTrainingService","sharedService","navigationService","queryParams","matrixParams","paths","fragment","StartDate","_a","_b","EndDate","ngOnInit","isAuthenticated$","isAuth$","loggedUserData$","loggedUser$","isEditing$","editingTraining$$","onLogout","clearTrainingData","goToPastTraining","pastTrainingsQueryParams$$","startDate","undefined","endDate","search","page","size","QUERY_PARAMS","onToggle","toggleSideNav","emit","changeLanguage","setPreferences","endOfWeek","startOfWeek","takeUntil","UnsubscribeService","SideNavComponent","unsubsService","goToPastTrainings","weekStartsOn","onCloseSideNav","closeSideNav"],"sourceRoot":"webpack:///"}